{"version":3,"sources":["../node_modules/react-lottie/dist/index.js","../node_modules/babel-runtime/core-js/object/get-prototype-of.js","../node_modules/babel-runtime/node_modules/core-js/library/fn/object/get-prototype-of.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.get-prototype-of.js","../node_modules/babel-runtime/node_modules/core-js/library/modules/_object-sap.js","../node_modules/lottie-web/build/player/lottie.js"],"names":["Object","defineProperty","exports","value","_extends3","_interopRequireDefault","__webpack_require__","_getPrototypeOf2","_classCallCheck3","_createClass3","_possibleConstructorReturn3","_inherits3","_react2","_propTypes2","_lottieWeb2","obj","__esModule","default","Lottie","_React$Component","_ref","_temp","_this","_ret","this","_len","arguments","length","args","Array","_key","__proto__","call","apply","concat","handleClickToPause","anim","isPaused","play","pause","key","_props","props","options","eventListeners","loop","autoplay","animationData","rendererSettings","segments","container","el","renderer","loadAnimation","registerEvents","nextProps","deRegisterEvents","destroy","isStopped","stop","playSegments","setSpeed","setDirection","speed","direction","_this2","forEach","eventListener","addEventListener","eventName","callback","_this3","removeEventListener","_this4","_props2","width","height","ariaRole","ariaLabel","isClickToPauseDisabled","title","getSize","initial","lottieStyles","overflow","margin","outline","style","onClickHandler","createElement","ref","c","onClick","role","aria-label","tabIndex","Component","propTypes","arrayOf","object","isRequired","oneOfType","string","number","bool","defaultProps","module","getPrototypeOf","toObject","$getPrototypeOf","it","$export","core","fails","KEY","exec","fn","exp","S","F","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","navigator","window","svgNS","locationHref","initialDefaultFrame","subframeEnabled","expressionsPlugin","isSafari","test","userAgent","cachedColors","bm_rounder","Math","round","bm_rnd","bm_pow","pow","bm_sqrt","sqrt","bm_abs","abs","bm_floor","floor","bm_max","max","bm_min","min","blitter","BMMath","ProjectInterface","i","propertyNames","len","random","val","absArr","createSizedArray","defaultCurveSegments","degToRads","PI","roundCorner","roundValues","flag","styleDiv","element","position","top","left","display","transformOrigin","webkitTransformOrigin","backfaceVisibility","webkitBackfaceVisibility","transformStyle","webkitTransformStyle","mozTransformStyle","BMEnterFrameEvent","n","t","d","type","currentTime","totalTime","BMCompleteEvent","BMCompleteLoopEvent","currentLoop","totalLoops","BMSegmentStartEvent","f","firstFrame","totalFrames","BMDestroyEvent","target","createElementID","_count","HSVtoRGB","h","s","v","r","g","b","p","q","RGBtoHSV","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","rgbToHex","hex","colorMap","toString","BaseEvent","prototype","triggerEvent","_cbs","push","bind","splice","createTypedArray","Uint8ClampedArray","Float32Array","Int16Array","arr","createNS","document","createElementNS","createTag","DynamicPropertyContainer","addDynamicProperty","prop","dynamicProperties","indexOf","_isAnimated","iterateDynamicProperties","_mdf","getValue","initDynamicPropertyContainer","getBlendMode","blendModeEnums","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","mode","Matrix","_cos","cos","_sin","sin","_tan","tan","_rnd","reset","rotate","angle","mCos","mSin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","skewFromAxis","scale","sz","setTransform","a","e","j","k","l","m","o","translate","tx","ty","tz","transform","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_p","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","equals","matr","clone","cloneFromProps","applyToPoint","x","y","z","applyToX","applyToY","applyToZ","inversePoint","pt","determinant","inversePoints","pts","retPts","applyToTriplePoints","pt1","pt2","pt3","p0","p4","p5","p12","p13","applyToPointArray","applyToPointStringified","toCSS","cssValue","roundMatrixProperty","to2dCSS","pool","math","nodecrypto","global","chunks","rngname","startdenom","significance","mask","ARC4","keylen","me","count","copy","slice","mixkey","seed","smear","stringseed","charCodeAt","tostring","String","fromCharCode","shortseed","flatten","depth","result","typ","entropy","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","autoseed","arc4","prng","int32","quick","double","pass","is_math_call","state","BezierFactory","ob","getBezierEasing","nm","str","replace","beziers","bezEasing","BezierEasing","NEWTON_ITERATIONS","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","A","aA1","aA2","B","C","calcBezier","aT","getSlope","points","_mSampleValues","_precomputed","get","mX1","mY1","mX2","mY2","_precompute","_getTForX","_calcSampleValues","aX","mSampleValues","intervalStart","currentSample","lastSample","guessForT","initialSlope","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","binarySubdivide","extendPrototype","sources","destination","sourcePrototype","attr","hasOwnProperty","getDescriptor","getOwnPropertyDescriptor","createProxyFunction","ProxyFunction","bezFunction","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","getBezierLength","pt4","ptCoord","perc","ptDistance","curveSegments","addedLength","point","lastPoint","lengthData","bezier_length_pool","newElement","percents","lengths","BezierData","segmentLength","PointData","partial","partialLength","buildBezierData","storedData","keyData","to","ti","bezierName","bezierData","getDistancePerc","initPos","lengthPos","lPerc","dir","bezier_segment_points","getSegmentsLength","shapeData","segmentsLength","segments_length_pool","closed","pathV","pathO","pathI","_length","totalLength","getNewSegment","startPerc","endPerc","t0","t1","u0","u1","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","getPointInSegment","percent","pointOnLine3D","z1","z2","z3","diffDist","dist1","dist2","dist3","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","id","setTimeout","clearTimeout","bez","dataFunctionManager","findCompLayers","comps","layers","__used","JSON","parse","stringify","completeShapes","jLen","ks","convertPathsToAbsoluteValues","path","checkVersion","minimum","animVersionString","animVersion","split","checkText","minimumVersion","updateTextLayer","textLayer","documentData","iterateLayers","assets","checkChars","chars","pathData","paths","data","shapes","__converted","checkColors","iterateShapes","checkShapes","layerData","kLen","hasMask","maskProps","masksProperties","cl","moduleOb","completeData","fontManager","__complete","completeLayers","completed","tt","td","refId","singleShape","dataManager","FontManager","maxWaitingTime","emptyChar","w","size","combinedCharacters","setUpNode","font","family","parentNode","fontFamily","node","innerHTML","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","appendChild","body","offsetWidth","parent","createHelper","def","fontData","tHelper","setAttribute","fFamily","fStyle","fWeight","textContent","fClass","getContext","Font","fonts","typekitLoaded","isLoaded","initTime","now","getCombinedCharacterCodes","addChars","found","ch","addFonts","defs","list","fontArr","_pendingFonts","loadedSelector","shouldLoadFont","loaded","monoCase","sansCase","fPath","fOrigin","origin","querySelectorAll","href","rel","src","sc","helper","cache","checkLoadedFonts","getCharData","char","console","warn","getFontByName","name","fName","measureText","fontName","index","doubleSize","getComputedTextLength","singleSize","loadedCount","removeChild","PropertyFactory","initFrame","math_abs","interpolateValue","frameNum","caching","newValue","offsetTime","propType","pv","nextKeyData","fnc","iterationIndex","lastIndex","keyframes","nextKeyTime","keyTime","ind","__fnct","segmentPerc","distanceInLine","lastFrame","_lastBezierData","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","sh","quat","qx","qy","qz","qw","heading","atan2","attitude","asin","bank","quaternionToEuler","omega","cosom","sinom","scale0","scale1","az","aw","bx","by","bz","bw","acos","slerp","createQuaternion","constructor","undefined","values","c3","s1","s2","s3","getValueAtCurrentTime","comp","renderedFrame","endTime","_caching","renderResult","setVValue","multipliedValue","mult","processEffectsSequence","elem","globalData","frameId","effectsSequence","lock","_isFirstFrame","finalValue","kf","addEffect","effectFunction","ValueProperty","vel","MultiDimensionalProperty","KeyframedValueProperty","st","KeyframedMultidimensionalProperty","arrLen","getProp","TransformPropertyFactory","TransformProperty","pre","appliedTransformations","px","py","pz","rx","ry","rz","or","sk","sa","_isDirty","applyToMatrix","mat","forceRender","precalculateMatrix","autoOriented","v1","v2","frameRate","getValueAtTime","autoOrient","_addDynamicProperty","getTransformProperty","ShapePath","_maxLength","setPathData","setLength","point_pool","doubleArrayLength","setXYAt","pos","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","init","cnt","ShapePropertyFactory","interpolateShape","previousValue","keyPropS","keyPropE","isHold","vertexValue","interpolateShapeCurrentTime","resetShape","localShapeCollection","shape1","shape2","shapesEqual","shape_pool","releaseShapes","addShape","ShapeProperty","shapeCollection_pool","newShapeCollection","KeyframedShapeProperty","EllShapeProperty","cPoint","convertEllToPath","s0","_cw","_v","StarShapeProperty","ir","is","convertToPath","convertStarToPath","convertPolygonToPath","os","rad","roundness","perimSegment","numPts","longFlag","longRad","shortRad","longRound","shortRound","longPerimSegment","shortPerimSegment","currentAng","ox","oy","RectShapeProperty","convertRectToPath","v0","getShapeProp","dataProp","keys","getConstructorFunction","getKeyframedConstructorFunction","ShapeModifiers","modifiers","registerModifier","getModifier","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","DashProperty","dataProps","dashStr","dashArray","dashoffset","GradientProperty","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","initModifierProperties","addShapeToModifier","shape","setAsAnimated","processKeys","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","segmentOb","shapeSegments","shapeS","shapeE","releasePathsData","release","processShapes","shapePaths","_s","totalShapeLength","edges","newShapesData","addShapes","lastShape","pop","addPaths","newPaths","addSegment","shapePath","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","tr","so","eo","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","inv","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","unshift","resetElements","elements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","cont","copies","ceil","group","ix","reloadShapes","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","mProps","op","comparePoints","buildShapeString","pathNodes","_o","_i","shapeString","ImagePreloader","proxyImage","canvas","ctx","fillStyle","fillRect","imageLoaded","loadedAssets","totalImages","imagesLoadedCb","createImageData","assetData","assetsPath","original_path","imagePath","u","getAssetsPath","img","crossOrigin","_imageLoaded","loadAssets","cb","images","_createImageData","setPath","setAssetsPath","getImage","featureSupport","maskType","filtersFactory","createFilter","filId","fil","createAlphaToLuminanceFilter","feColorMatrix","assetLoader","formatResponse","xhr","response","responseText","load","errorCallback","XMLHttpRequest","open","responseType","send","onreadystatechange","readyState","status","err","TextAnimatorProperty","textData","renderType","_hasMaskedPath","_frameId","_textData","_renderType","_elem","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","TextAnimatorDataProperty","animatorProps","defaultData","textAnimator_animatables","sw","fc","fh","fs","fb","TextSelectorProp","getTextSelectorProp","LetterProps","TextProperty","keysIndex","canResize","minimumFontSize","currentData","ascent","boxWidth","defaultBoxWidth","justifyOffset","lh","lineWidths","ls","of","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","finalSize","finalText","finalLineHeight","copyData","searchProperty","completeTextData","searchProperties","maskManager","getMaskProperty","getMeasures","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","animators","matrixHelper","mHelper","renderedLettersCount","letters","tLength","pi","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","letterM","letterP","defaultPropsArray","animatorJustifyOffset","animatorFirstCharOffset","justifyOffsetMult","isNewLine","getMult","anIndexes","totalChars","line","extra","an","animatorOffset","add","rot","atan","update","updated","setCurrentData","searchKeyframes","getKeyframeValue","_finalValue","currentValue","currentIndex","textKeys","buildFinalText","text","charactersArray","charAt","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","styles","toLowerCase","charCode","trackingOffset","currentHeight","boxHeight","lastSpaceIndex","currentChar","uncollapsedSpaces","animatorData","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","_currentTextLength","finalS","finalE","xe","ne","textProperty","easer","tot","newCharsFlag","divisor","pool_factory","initialLength","_create","_release","_clone","pooling","cloned","shapeCollection","BaseRenderer","SVGRenderer","animationItem","config","svgElement","maskElement","layerElement","renderConfig","preserveAspectRatio","imagePreserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","viewBoxSize","className","pendingElements","destroyed","rendererType","CanvasRenderer","clearCanvas","context","dpr","wrapper","devicePixelRatio","currentGlobalAlpha","contextData","CVContextData","transformMat","HybridRenderer","threeDElements","camera","supports3d","MaskElement","viewData","solidPath","rect","expansor","feMorph","properties","currentMasks","layerId","maskRef","filterID","expan","lastPath","lastOperator","filterId","lastRadius","createLayerSolidPath","invRect","drawPath","maskedElement","addRenderableComponent","HierarchyElement","FrameElement","TransformElement","RenderableElement","RenderableDOMElement","ProcessedElement","SVGStyleData","level","lvl","hd","pElem","msElem","SVGShapeData","transformers","caches","lStr","SVGTransformData","SVGStrokeStyleData","styleOb","SVGFillStyleData","SVGGradientFillStyleData","initGradientData","SVGGradientStrokeStyleData","ShapeGroupData","prevViewData","gr","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","Error","buildAllItems","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","setAsParent","setHierarchy","addPendingElement","searchExtraCompositions","xt","initExpressions","registerComposition","setupGlobalData","animData","fontsContainer","getAssetData","imageLoader","imagePreloader","fr","compSize","NullElement","SVGShapeElement","SVGTextElement","IImageElement","SVGCompElement","ISolidElement","configAnimation","maskId","updateContainerSize","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","getBaseElement","nextElement","insertBefore","hide","show","CVShapeElement","CVTextElement","CVImageElement","CVCompElement","CVSolidElement","ctxTransform","cProps","cTr","trProps","canvasContext","ctxOpacity","globalAlpha","cO","restore","save","actionFlag","cArrPos","duplicate","saved","savedOp","blendMode","popped","mozTransformOrigin","transformCanvas","isDashed","elementWidth","elementHeight","elementRel","animationRel","offsetHeight","par","fillType","substr","beginPath","closePath","clip","clearRect","newDOMElement","ddd","addTo3dContainer","nextDOMElement","nextLayer","getThreeDContainerByPos","HShapeElement","HTextElement","HCameraElement","HImageElement","HCompElement","HSolidElement","startPos","endPos","perspectiveElem","createThreeDContainer","webkitTransform","threeDContainerData","build3dContainers","lastThreeDContainerData","currentContainer","resizerElem","svg","setup","cWidth","cHeight","perspective","webkitPerspective","floatingContainer","isFirstFrame","finalMat","finalTransform","mProp","getMaskelement","pathString","pathShapeValue","initHierarchy","_isParent","prepareProperties","isVisible","initTransform","_matMdf","_opMdf","ao","renderTransform","globalToLocal","transforms","ptNew","initRenderable","isInRange","hidden","isTransparent","renderableComponents","component","removeRenderableComponent","prepareRenderableFrame","checkLayerLimits","checkTransparency","renderRenderable","sourceRectAtTime","getLayerSize","initElement","initBaseData","initRendererElement","createContainerElements","createRenderableComponents","createContent","baseElement","renderElement","renderInnerContent","innerElem","destroyBaseElement","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","gf","cst","opacityId","opFill","ms","ost","SVGElementsRenderer","_identityMatrix","_matrixHelper","renderContentTransform","styleData","itemData","renderPath","pathStringTransformed","redraw","iterations","lLen","renderFill","styleElem","renderGradientStroke","renderGradient","renderStroke","hasOpacity","attr1","attr2","cValues","oValues","ang","dist","createRenderFunction","ShapeTransformManager","sequences","sequenceList","transform_key_count","CVShapeData","transformsManager","styledShapes","styledShape","addTransformSequence","trNodes","BaseElement","SVGBaseElement","IShapeElement","ITextElement","ICompElement","sourceRect","tm","_placeholder","textSpans","shapesData","stylesList","shapeModifiers","itemsData","processedElements","animatedContents","SVGTintFilter","filter","filterManager","matrixFilter","effectElements","feMergeNode","feMerge","SVGFillFilter","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feGaussianBlur","feOffset","feFlood","feComposite","originalNodeAdded","sequence","processSequence","processSequences","getNewKey","checkMasks","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","content","textInterface","TextExpressionInterface","setBlendMode","blendModeValue","bm","sr","effectsManager","EffectsManager","getType","matteElement","transformedElement","_sizeChanged","gg","layerElementParent","masker","maskGroup","maskGrouper","feCTr","feFunc","alphaRect","ln","cp","clipId","cpGroup","renderableEffectsManager","SVGEffects","addShapeToModifiers","isShapeInAnimatedModifiers","isAnimatedWithShape","renderModifiers","lcEnum","ljEnum","searchProcessedElement","addProcessedElement","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","timeRemapped","setElements","elems","getElements","destroyElements","assetPath","pr","setAttributeNS","textContainer","buildTextContents","textArray","textContents","currentTextContent","tSpan","usesGlyphs","cachedSpansLength","tElement","justify","time","textBox","getBBox","bbox","renderedLetter","textSpan","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","filterUniqueShapes","tempShapes","areAnimated","setShapesAsAnimated","createStyleElement","elementData","lc","lj","ml","addToAnimatedContents","createGroupElement","createTransformElement","transformProperty","createShapeElement","ownTransformers","setElementStyles","render","currentTransform","modifier","processedPos","ownStyles","ownModifiers","renderShape","animatedContent","colorBlack","colorWhite","opacity","initialize","groupPath","elemChildren","children","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","lineLength","units","color1","color2","color3","tableR","tableG","tableB","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","join","col","_svgMatteSymbols","SVGMatte3Effect","filterElem","ef","filters","CVBaseElement","failed","CVMaskElement","hasMasks","stroke","fill","currentRender","sWidth","fValue","CVEffects","HBaseElement","shapesContainer","currentBBox","textPaths","isMasked","pe","_prevMat","HEffects","findSymbol","replaceInParent","symbolId","nextChild","useElem","setElementAsMask","symbol","newLength","currentSavedOp","set","createElements","globalCompositeOperation","hideElement","showElement","widthCrop","heightCrop","imgW","imgH","imgRel","canvasRel","drawImage","parentMatrix","moveTo","lineTo","bezierCurveTo","transformHelper","dashResetter","preTransforms","co","wi","da","do","addTransformToStyleList","removeTransformFromStyleList","closeStyles","shouldRender","ownTransforms","_shouldRender","renderShapeTransform","parentTransform","groupTransform","drawLayer","nodes","currentStyle","coOp","strokeStyle","grd","lineCap","lineJoin","miterLimit","setLineDash","lineDashOffset","isMain","renderGradientFill","renderStyledShape","shapeNodes","groupTransformMat","createLinearGradient","createRadialGradient","addColorStop","hasFill","hasStroke","commands","pathArr","lastFill","lastStroke","lastStrokeW","checkBlendMode","tg","addEffects","backgroundColor","_createBaseContainerElements","_renderShapeFrame","shapeCont","getTransformedPoint","calculateShapeBoundingBox","item","boundingBox","vPoint","oPoint","nextIPoint","nextVPoint","checkBounds","getBoundsOfCurve","bounds","shapeBoundingBox","xMax","right","yMax","bottom","tempBoundingBox","p3","b2ac","t2","calculateF","calculateBoundingBox","currentBoxContains","box","changed","compW","compH","innerElemStyle","strokeWidth","lineHeight","tParent","tCont","textPath","Image","imageElem","mTransf","diffVector","mag","lookDir","lookLengthOnXZ","m_rotationX","m_rotationY","hasMatrixChanged","animationManager","registeredAnimations","playingAnimationsNum","_stopped","_isFrozen","removeElement","ev","animItem","animation","subtractPlayingCount","registerAnimation","AnimationItem","setupAnimation","setData","addPlayingCount","activate","resume","nowTime","elapsedTime","advanceTime","first","params","setParams","togglePause","searchAnimations","standalone","animElements","getElementsByClassName","getElementsByTagName","div","resize","goToAndStop","isFrame","freeze","unfreeze","getRegisteredAnimations","animations","currentRawFrame","frameMult","playSpeed","playDirection","playCount","animationID","timeCompleted","segmentPos","_idle","_completedLoop","animType","parseInt","autoloadSegments","lastIndexOf","fileName","trigger","wrapperAttributes","attributes","getNamedItem","prerender","loadNextSegment","shift","segmentPath","loadSegments","imagesLoaded","checkLoaded","preloadImages","updaFrameModifier","waitForFontsLoaded","gotoFrame","setSubframe","setCurrentRawFrameValue","frameModifier","goToAndPlay","nextValue","_isComplete","checkSegments","adjustSegment","setSegment","end","pendingFrame","forceFlag","resetSegments","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getDuration","Expressions","stackCount","registers","pushExpression","popExpression","releaseInstances","registerExpressionProperty","expression","ExpressionManager","$bm_isInstanceOfArray","isNumerable","tOfV","Number","$bm_neg","tOfA","lenA","retArr","easeInBez","easeOutBez","easeInOutBez","sum","tOfB","lenB","sub","mul","mod","$bm_sum","$bm_sub","$bm_mul","$bm_div","$bm_mod","clamp","mm","radiansToDegrees","radians_to_degrees","degreesToRadians","degrees_to_radians","helperLengthArray","arr1","arr2","normalize","vec","rgbToHsl","hue2rgb","hslToRgb","linear","tMin","tMax","value1","value2","_tMin","rnd","createPath","inTangents","outTangents","inVertexPoint","outVertexPoint","arrPlaceholder","initiateExpression","property","needsVelocity","_needsRandom","elemType","$bm_transform","effect","thisProperty","valueAtTime","frameDuration","displayStartTime","inPoint","outPoint","loopIn","loop_in","loopOut","loop_out","smooth","toWorld","fromWorld","fromComp","toComp","fromCompToSurface","rotation","anchorPoint","thisLayer","thisComp","velocityAtTime","__expression_functions","scoped_bm_rt","xf","eval","expression_function","numKeys","active","wiggle","freq","amp","addedAmps","periods","loopInDuration","duration","loopOutDuration","getVelocityAtTime","velocity","textIndex","textTotal","selectorValue","lookAt","elem1","elem2","fVec","pitch","easeOut","val1","val2","applyEase","easeIn","ease","nearestKey","framesToTime","frames","fps","timeToFrames","seedRandom","seedrandom","randSeed","substring","hasParent","executeExpression","_value","frameExpressionId","expressionHelpers","searchExpressions","getSpeedAtTime","_cachingAtTime","getStaticValueAtTime","setGroupProperty","propertyGroup","durationFlag","cycleDuration","firstKeyFrame","ret","lastKeyFrame","initV","endV","current","repeats","lastValue","nextLastValue","firstValue","nextFirstValue","samples","sampleValue","sampleFrequency","propertyGetProp","propertyIndex","ShapePropertyConstructorFunction","KeyframedShapePropertyConstructorFunction","ShapeExpressions","isClosed","pointOnPath","_segmentsLength","accumulatedLength","initIndex","endIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","tangentOnPath","normalOnPath","shapeValue","propertyGetShapeProp","trims","getExpressionValue","calculateExpression","isKeyframed","hasExpressions","iterateElements","view","groupInterfaceFactory","fillInterfaceFactory","strokeInterfaceFactory","trimInterfaceFactory","ellipseInterfaceFactory","starInterfaceFactory","pathInterfaceFactory","rectInterfaceFactory","roundedInterfaceFactory","repeaterInterfaceFactory","interfaceFunction","interfaces","_name","mn","numProperties","cix","contentsInterfaceFactory","transformInterface","_propertyGroup","skewAxis","defineProperties","ExpressionPropertyInterface","transformInterfaceFactory","np","_dashPropertyGroup","dashOb","addPropertyToDashOb","dash","start","outerRadius","outerRoundness","innerRoundness","innerRadius","radius","_interfaceFunction","_sourceText","_thisLayerFunction","stringValue","_prevValue","toWorldMat","sampleImage","anchorPointDescriptor","TransformExpressionInterface","anchor_point","startTime","source","MaskManagerInterface","effects","pixelAspect","numLayers","_thisFunction","xRotation","yRotation","xPosition","yPosition","zPosition","_transformFactory","compositions","_thisProjectFunction","createGroupInterface","createValueInterface","groupInterface","enabled","en","expressionProperty","effectsData","MaskInterface","_mask","_data","_masksInterfaces","defaultUnidimensionalValue","defaultMultidimensionalValue","completeProperty","expressionValue","valueProp","assign","speedAtTime","defaultGetter","UnidimensionalPropertyInterface","arrValue","MultidimensionalPropertyInterface","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","effectItem","GroupEffect","TextExpressionSelectorProp","getValueProxy","total","propertyGetTextProp","eff","lottiejs","setLocationHref","setSubframeRendering","setQuality","isNaN","inBrowser","installPlugin","plugin","getFactory","checkReady","clearInterval","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","__getFactory","version","scripts","myScript","setInterval"],"mappings":"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","file":"static/js/1.840c1c02.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lottieWeb = require('lottie-web');\n\nvar _lottieWeb2 = _interopRequireDefault(_lottieWeb);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Lottie = function (_React$Component) {\n  (0, _inherits3.default)(Lottie, _React$Component);\n\n  function Lottie() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Lottie);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Lottie.__proto__ || (0, _getPrototypeOf2.default)(Lottie)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickToPause = function () {\n      // The pause() method is for handling pausing by passing a prop isPaused\n      // This method is for handling the ability to pause by clicking on the animation\n      if (_this.anim.isPaused) {\n        _this.anim.play();\n      } else {\n        _this.anim.pause();\n      }\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(Lottie, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          options = _props.options,\n          eventListeners = _props.eventListeners;\n      var loop = options.loop,\n          autoplay = options.autoplay,\n          animationData = options.animationData,\n          rendererSettings = options.rendererSettings,\n          segments = options.segments;\n      this.options = {\n        container: this.el,\n        renderer: 'svg',\n        loop: loop !== false,\n        autoplay: autoplay !== false,\n        segments: segments !== false,\n        animationData: animationData,\n        rendererSettings: rendererSettings\n      };\n      this.options = (0, _extends3.default)({}, this.options, options);\n      this.anim = _lottieWeb2.default.loadAnimation(this.options);\n      this.registerEvents(eventListeners);\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps\n    /* , nextState */\n    ) {\n      /* Recreate the animation handle if the data is changed */\n      if (this.options.animationData !== nextProps.options.animationData) {\n        this.deRegisterEvents(this.props.eventListeners);\n        this.destroy();\n        this.options = (0, _extends3.default)({}, this.options, nextProps.options);\n        this.anim = _lottieWeb2.default.loadAnimation(this.options);\n        this.registerEvents(nextProps.eventListeners);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (this.props.isStopped) {\n        this.stop();\n      } else if (this.props.segments) {\n        this.playSegments();\n      } else {\n        this.play();\n      }\n\n      this.pause();\n      this.setSpeed();\n      this.setDirection();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.deRegisterEvents(this.props.eventListeners);\n      this.destroy();\n      this.options.animationData = null;\n      this.anim = null;\n    }\n  }, {\n    key: 'setSpeed',\n    value: function setSpeed() {\n      this.anim.setSpeed(this.props.speed);\n    }\n  }, {\n    key: 'setDirection',\n    value: function setDirection() {\n      this.anim.setDirection(this.props.direction);\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      this.anim.play();\n    }\n  }, {\n    key: 'playSegments',\n    value: function playSegments() {\n      this.anim.playSegments(this.props.segments);\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.anim.stop();\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.props.isPaused && !this.anim.isPaused) {\n        this.anim.pause();\n      } else if (!this.props.isPaused && this.anim.isPaused) {\n        this.anim.pause();\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.anim.destroy();\n    }\n  }, {\n    key: 'registerEvents',\n    value: function registerEvents(eventListeners) {\n      var _this2 = this;\n\n      eventListeners.forEach(function (eventListener) {\n        _this2.anim.addEventListener(eventListener.eventName, eventListener.callback);\n      });\n    }\n  }, {\n    key: 'deRegisterEvents',\n    value: function deRegisterEvents(eventListeners) {\n      var _this3 = this;\n\n      eventListeners.forEach(function (eventListener) {\n        _this3.anim.removeEventListener(eventListener.eventName, eventListener.callback);\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height,\n          ariaRole = _props2.ariaRole,\n          ariaLabel = _props2.ariaLabel,\n          isClickToPauseDisabled = _props2.isClickToPauseDisabled,\n          title = _props2.title;\n\n      var getSize = function getSize(initial) {\n        var size = void 0;\n\n        if (typeof initial === 'number') {\n          size = initial + 'px';\n        } else {\n          size = initial || '100%';\n        }\n\n        return size;\n      };\n\n      var lottieStyles = (0, _extends3.default)({\n        width: getSize(width),\n        height: getSize(height),\n        overflow: 'hidden',\n        margin: '0 auto',\n        outline: 'none'\n      }, this.props.style);\n      var onClickHandler = isClickToPauseDisabled ? function () {\n        return null;\n      } : this.handleClickToPause;\n      return (// Bug with eslint rules https://github.com/airbnb/javascript/issues/1374\n        // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n        _react2.default.createElement('div', {\n          ref: function ref(c) {\n            _this4.el = c;\n          },\n          style: lottieStyles,\n          onClick: onClickHandler,\n          title: title,\n          role: ariaRole,\n          'aria-label': ariaLabel,\n          tabIndex: '0'\n        })\n      );\n    }\n  }]);\n  return Lottie;\n}(_react2.default.Component);\n\nexports.default = Lottie;\nLottie.propTypes = {\n  eventListeners: _propTypes2.default.arrayOf(_propTypes2.default.object),\n  options: _propTypes2.default.object.isRequired,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  isStopped: _propTypes2.default.bool,\n  isPaused: _propTypes2.default.bool,\n  speed: _propTypes2.default.number,\n  segments: _propTypes2.default.arrayOf(_propTypes2.default.number),\n  direction: _propTypes2.default.number,\n  ariaRole: _propTypes2.default.string,\n  ariaLabel: _propTypes2.default.string,\n  isClickToPauseDisabled: _propTypes2.default.bool,\n  title: _propTypes2.default.string\n};\nLottie.defaultProps = {\n  eventListeners: [],\n  isStopped: false,\n  isPaused: false,\n  speed: 1,\n  ariaRole: 'button',\n  ariaLabel: 'animation',\n  isClickToPauseDisabled: false,\n  title: ''\n};","module.exports = {\n  \"default\": require(\"core-js/library/fn/object/get-prototype-of\"),\n  __esModule: true\n};","require('../../modules/es6.object.get-prototype-of');\n\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\n\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\n\nvar core = require('./_core');\n\nvar fails = require('./_fails');\n\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () {\n    fn(1);\n  }), 'Object', exp);\n};","typeof navigator !== \"undefined\" && function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(function () {\n      return factory(root);\n    });\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory(root);\n  } else {\n    root.lottie = factory(root);\n    root.bodymovin = root.lottie;\n  }\n}(window || {}, function (window) {\n  \"use strict\";\n\n  var svgNS = \"http://www.w3.org/2000/svg\";\n  var locationHref = '';\n  var initialDefaultFrame = -999999;\n  var subframeEnabled = true;\n  var expressionsPlugin;\n  var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  var cachedColors = {};\n  var bm_rounder = Math.round;\n  var bm_rnd;\n  var bm_pow = Math.pow;\n  var bm_sqrt = Math.sqrt;\n  var bm_abs = Math.abs;\n  var bm_floor = Math.floor;\n  var bm_max = Math.max;\n  var bm_min = Math.min;\n  var blitter = 10;\n  var BMMath = {};\n\n  (function () {\n    var propertyNames = [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atanh\", \"atan2\", \"ceil\", \"cbrt\", \"expm1\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"floor\", \"fround\", \"hypot\", \"imul\", \"log\", \"log1p\", \"log2\", \"log10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"E\", \"LN10\", \"LN2\", \"LOG10E\", \"LOG2E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\n    var i,\n        len = propertyNames.length;\n\n    for (i = 0; i < len; i += 1) {\n      BMMath[propertyNames[i]] = Math[propertyNames[i]];\n    }\n  })();\n\n  function ProjectInterface() {\n    return {};\n  }\n\n  BMMath.random = Math.random;\n\n  BMMath.abs = function (val) {\n    var tOfVal = typeof val;\n\n    if (tOfVal === 'object' && val.length) {\n      var absArr = createSizedArray(val.length);\n      var i,\n          len = val.length;\n\n      for (i = 0; i < len; i += 1) {\n        absArr[i] = Math.abs(val[i]);\n      }\n\n      return absArr;\n    }\n\n    return Math.abs(val);\n  };\n\n  var defaultCurveSegments = 150;\n  var degToRads = Math.PI / 180;\n  var roundCorner = 0.5519;\n\n  function roundValues(flag) {\n    if (flag) {\n      bm_rnd = Math.round;\n    } else {\n      bm_rnd = function bm_rnd(val) {\n        return val;\n      };\n    }\n  }\n\n  roundValues(false);\n\n  function styleDiv(element) {\n    element.style.position = 'absolute';\n    element.style.top = 0;\n    element.style.left = 0;\n    element.style.display = 'block';\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\n    element.style.backfaceVisibility = element.style.webkitBackfaceVisibility = 'visible';\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\n  }\n\n  function BMEnterFrameEvent(n, c, t, d) {\n    this.type = n;\n    this.currentTime = c;\n    this.totalTime = t;\n    this.direction = d < 0 ? -1 : 1;\n  }\n\n  function BMCompleteEvent(n, d) {\n    this.type = n;\n    this.direction = d < 0 ? -1 : 1;\n  }\n\n  function BMCompleteLoopEvent(n, c, t, d) {\n    this.type = n;\n    this.currentLoop = t;\n    this.totalLoops = c;\n    this.direction = d < 0 ? -1 : 1;\n  }\n\n  function BMSegmentStartEvent(n, f, t) {\n    this.type = n;\n    this.firstFrame = f;\n    this.totalFrames = t;\n  }\n\n  function BMDestroyEvent(n, t) {\n    this.type = n;\n    this.target = t;\n  }\n\n  var createElementID = function () {\n    var _count = 0;\n    return function createID() {\n      return '__lottie_element_' + ++_count;\n    };\n  }();\n\n  function HSVtoRGB(h, s, v) {\n    var r, g, b, i, f, p, q, t;\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n\n    return [r, g, b];\n  }\n\n  function RGBtoHSV(r, g, b) {\n    var max = Math.max(r, g, b),\n        min = Math.min(r, g, b),\n        d = max - min,\n        h,\n        s = max === 0 ? 0 : d / max,\n        v = max / 255;\n\n    switch (max) {\n      case min:\n        h = 0;\n        break;\n\n      case r:\n        h = g - b + d * (g < b ? 6 : 0);\n        h /= 6 * d;\n        break;\n\n      case g:\n        h = b - r + d * 2;\n        h /= 6 * d;\n        break;\n\n      case b:\n        h = r - g + d * 4;\n        h /= 6 * d;\n        break;\n    }\n\n    return [h, s, v];\n  }\n\n  function addSaturationToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[1] += offset;\n\n    if (hsv[1] > 1) {\n      hsv[1] = 1;\n    } else if (hsv[1] <= 0) {\n      hsv[1] = 0;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function addBrightnessToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[2] += offset;\n\n    if (hsv[2] > 1) {\n      hsv[2] = 1;\n    } else if (hsv[2] < 0) {\n      hsv[2] = 0;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  function addHueToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[0] += offset / 360;\n\n    if (hsv[0] > 1) {\n      hsv[0] -= 1;\n    } else if (hsv[0] < 0) {\n      hsv[0] += 1;\n    }\n\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n\n  var rgbToHex = function () {\n    var colorMap = [];\n    var i;\n    var hex;\n\n    for (i = 0; i < 256; i += 1) {\n      hex = i.toString(16);\n      colorMap[i] = hex.length == 1 ? '0' + hex : hex;\n    }\n\n    return function (r, g, b) {\n      if (r < 0) {\n        r = 0;\n      }\n\n      if (g < 0) {\n        g = 0;\n      }\n\n      if (b < 0) {\n        b = 0;\n      }\n\n      return '#' + colorMap[r] + colorMap[g] + colorMap[b];\n    };\n  }();\n\n  function BaseEvent() {}\n\n  BaseEvent.prototype = {\n    triggerEvent: function triggerEvent(eventName, args) {\n      if (this._cbs[eventName]) {\n        var len = this._cbs[eventName].length;\n\n        for (var i = 0; i < len; i++) {\n          this._cbs[eventName][i](args);\n        }\n      }\n    },\n    addEventListener: function addEventListener(eventName, callback) {\n      if (!this._cbs[eventName]) {\n        this._cbs[eventName] = [];\n      }\n\n      this._cbs[eventName].push(callback);\n\n      return function () {\n        this.removeEventListener(eventName, callback);\n      }.bind(this);\n    },\n    removeEventListener: function removeEventListener(eventName, callback) {\n      if (!callback) {\n        this._cbs[eventName] = null;\n      } else if (this._cbs[eventName]) {\n        var i = 0,\n            len = this._cbs[eventName].length;\n\n        while (i < len) {\n          if (this._cbs[eventName][i] === callback) {\n            this._cbs[eventName].splice(i, 1);\n\n            i -= 1;\n            len -= 1;\n          }\n\n          i += 1;\n        }\n\n        if (!this._cbs[eventName].length) {\n          this._cbs[eventName] = null;\n        }\n      }\n    }\n  };\n\n  var createTypedArray = function () {\n    function createRegularArray(type, len) {\n      var i = 0,\n          arr = [],\n          value;\n\n      switch (type) {\n        case 'int16':\n        case 'uint8c':\n          value = 1;\n          break;\n\n        default:\n          value = 1.1;\n          break;\n      }\n\n      for (i = 0; i < len; i += 1) {\n        arr.push(value);\n      }\n\n      return arr;\n    }\n\n    function createTypedArray(type, len) {\n      if (type === 'float32') {\n        return new Float32Array(len);\n      } else if (type === 'int16') {\n        return new Int16Array(len);\n      } else if (type === 'uint8c') {\n        return new Uint8ClampedArray(len);\n      }\n    }\n\n    if (typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\n      return createTypedArray;\n    } else {\n      return createRegularArray;\n    }\n  }();\n\n  function createSizedArray(len) {\n    return Array.apply(null, {\n      length: len\n    });\n  }\n\n  function createNS(type) {\n    //return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElementNS(svgNS, type);\n  }\n\n  function createTag(type) {\n    //return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElement(type);\n  }\n\n  function DynamicPropertyContainer() {}\n\n  ;\n  DynamicPropertyContainer.prototype = {\n    addDynamicProperty: function addDynamicProperty(prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n        this.container.addDynamicProperty(this);\n        this._isAnimated = true;\n      }\n    },\n    iterateDynamicProperties: function iterateDynamicProperties() {\n      this._mdf = false;\n      var i,\n          len = this.dynamicProperties.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.dynamicProperties[i].getValue();\n\n        if (this.dynamicProperties[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    },\n    initDynamicPropertyContainer: function initDynamicPropertyContainer(container) {\n      this.container = container;\n      this.dynamicProperties = [];\n      this._mdf = false;\n      this._isAnimated = false;\n    }\n  };\n\n  var getBlendMode = function () {\n    var blendModeEnums = {\n      1: 'multiply',\n      2: 'screen',\n      3: 'overlay',\n      4: 'darken',\n      5: 'lighten',\n      6: 'color-dodge',\n      7: 'color-burn',\n      8: 'hard-light',\n      9: 'soft-light',\n      10: 'difference',\n      11: 'exclusion',\n      12: 'hue',\n      13: 'saturation',\n      14: 'color',\n      15: 'luminosity'\n    };\n    return function (mode) {\n      return blendModeEnums[mode] || '';\n    };\n  }();\n  /*!\r\n   Transformation Matrix v2.0\r\n   (c) Epistemex 2014-2015\r\n   www.epistemex.com\r\n   By Ken Fyrstenberg\r\n   Contributions by leeoniya.\r\n   License: MIT, header required.\r\n   */\n\n  /**\r\n   * 2D transformation matrix object initialized with identity matrix.\r\n   *\r\n   * The matrix can synchronize a canvas context by supplying the context\r\n   * as an argument, or later apply current absolute transform to an\r\n   * existing context.\r\n   *\r\n   * All values are handled as floating point values.\r\n   *\r\n   * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n   * @prop {number} a - scale x\r\n   * @prop {number} b - shear y\r\n   * @prop {number} c - shear x\r\n   * @prop {number} d - scale y\r\n   * @prop {number} e - translate x\r\n   * @prop {number} f - translate y\r\n   * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n   * @constructor\r\n   */\n\n\n  var Matrix = function () {\n    var _cos = Math.cos;\n    var _sin = Math.sin;\n    var _tan = Math.tan;\n    var _rnd = Math.round;\n\n    function reset() {\n      this.props[0] = 1;\n      this.props[1] = 0;\n      this.props[2] = 0;\n      this.props[3] = 0;\n      this.props[4] = 0;\n      this.props[5] = 1;\n      this.props[6] = 0;\n      this.props[7] = 0;\n      this.props[8] = 0;\n      this.props[9] = 0;\n      this.props[10] = 1;\n      this.props[11] = 0;\n      this.props[12] = 0;\n      this.props[13] = 0;\n      this.props[14] = 0;\n      this.props[15] = 1;\n      return this;\n    }\n\n    function rotate(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n\n    function rotateX(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);\n    }\n\n    function rotateY(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);\n    }\n\n    function rotateZ(angle) {\n      if (angle === 0) {\n        return this;\n      }\n\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n\n    function shear(sx, sy) {\n      return this._t(1, sy, sx, 1, 0, 0);\n    }\n\n    function skew(ax, ay) {\n      return this.shear(_tan(ax), _tan(ay));\n    }\n\n    function skewFromAxis(ax, angle) {\n      var mCos = _cos(angle);\n\n      var mSin = _sin(angle);\n\n      return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\n    }\n\n    function scale(sx, sy, sz) {\n      if (!sz && sz !== 0) {\n        sz = 1;\n      }\n\n      if (sx === 1 && sy === 1 && sz === 1) {\n        return this;\n      }\n\n      return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\n    }\n\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\n      this.props[0] = a;\n      this.props[1] = b;\n      this.props[2] = c;\n      this.props[3] = d;\n      this.props[4] = e;\n      this.props[5] = f;\n      this.props[6] = g;\n      this.props[7] = h;\n      this.props[8] = i;\n      this.props[9] = j;\n      this.props[10] = k;\n      this.props[11] = l;\n      this.props[12] = m;\n      this.props[13] = n;\n      this.props[14] = o;\n      this.props[15] = p;\n      return this;\n    }\n\n    function translate(tx, ty, tz) {\n      tz = tz || 0;\n\n      if (tx !== 0 || ty !== 0 || tz !== 0) {\n        return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);\n      }\n\n      return this;\n    }\n\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\n      var _p = this.props;\n\n      if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {\n        //NOTE: commenting this condition because TurboFan deoptimizes code when present\n        //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\n        _p[12] = _p[12] * a2 + _p[15] * m2;\n        _p[13] = _p[13] * f2 + _p[15] * n2;\n        _p[14] = _p[14] * k2 + _p[15] * o2;\n        _p[15] = _p[15] * p2; //}\n\n        this._identityCalculated = false;\n        return this;\n      }\n\n      var a1 = _p[0];\n      var b1 = _p[1];\n      var c1 = _p[2];\n      var d1 = _p[3];\n      var e1 = _p[4];\n      var f1 = _p[5];\n      var g1 = _p[6];\n      var h1 = _p[7];\n      var i1 = _p[8];\n      var j1 = _p[9];\n      var k1 = _p[10];\n      var l1 = _p[11];\n      var m1 = _p[12];\n      var n1 = _p[13];\n      var o1 = _p[14];\n      var p1 = _p[15];\n      /* matrix order (canvas compatible):\r\n       * ace\r\n       * bdf\r\n       * 001\r\n       */\n\n      _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\n      _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;\n      _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;\n      _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;\n      _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;\n      _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;\n      _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;\n      _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;\n      _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;\n      _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;\n      _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;\n      _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;\n      _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;\n      _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;\n      _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;\n      _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;\n      this._identityCalculated = false;\n      return this;\n    }\n\n    function isIdentity() {\n      if (!this._identityCalculated) {\n        this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\n        this._identityCalculated = true;\n      }\n\n      return this._identity;\n    }\n\n    function equals(matr) {\n      var i = 0;\n\n      while (i < 16) {\n        if (matr.props[i] !== this.props[i]) {\n          return false;\n        }\n\n        i += 1;\n      }\n\n      return true;\n    }\n\n    function clone(matr) {\n      var i;\n\n      for (i = 0; i < 16; i += 1) {\n        matr.props[i] = this.props[i];\n      }\n    }\n\n    function cloneFromProps(props) {\n      var i;\n\n      for (i = 0; i < 16; i += 1) {\n        this.props[i] = props[i];\n      }\n    }\n\n    function applyToPoint(x, y, z) {\n      return {\n        x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n        y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n        z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\n      };\n      /*return {\r\n       x: x * me.a + y * me.c + me.e,\r\n       y: x * me.b + y * me.d + me.f\r\n       };*/\n    }\n\n    function applyToX(x, y, z) {\n      return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\n    }\n\n    function applyToY(x, y, z) {\n      return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\n    }\n\n    function applyToZ(x, y, z) {\n      return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\n    }\n\n    function inversePoint(pt) {\n      var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\n      var a = this.props[5] / determinant;\n      var b = -this.props[1] / determinant;\n      var c = -this.props[4] / determinant;\n      var d = this.props[0] / determinant;\n      var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;\n      var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;\n      return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\n    }\n\n    function inversePoints(pts) {\n      var i,\n          len = pts.length,\n          retPts = [];\n\n      for (i = 0; i < len; i += 1) {\n        retPts[i] = inversePoint(pts[i]);\n      }\n\n      return retPts;\n    }\n\n    function applyToTriplePoints(pt1, pt2, pt3) {\n      var arr = createTypedArray('float32', 6);\n\n      if (this.isIdentity()) {\n        arr[0] = pt1[0];\n        arr[1] = pt1[1];\n        arr[2] = pt2[0];\n        arr[3] = pt2[1];\n        arr[4] = pt3[0];\n        arr[5] = pt3[1];\n      } else {\n        var p0 = this.props[0],\n            p1 = this.props[1],\n            p4 = this.props[4],\n            p5 = this.props[5],\n            p12 = this.props[12],\n            p13 = this.props[13];\n        arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\n        arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\n        arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\n        arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\n        arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\n        arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\n      }\n\n      return arr;\n    }\n\n    function applyToPointArray(x, y, z) {\n      var arr;\n\n      if (this.isIdentity()) {\n        arr = [x, y, z];\n      } else {\n        arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12], x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13], x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\n      }\n\n      return arr;\n    }\n\n    function applyToPointStringified(x, y) {\n      if (this.isIdentity()) {\n        return x + ',' + y;\n      }\n\n      var _p = this.props;\n      return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 + ',' + Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\n    }\n\n    function toCSS() {\n      //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n\n      /*if(this.isIdentity()) {\r\n          return '';\r\n      }*/\n      var i = 0;\n      var props = this.props;\n      var cssValue = 'matrix3d(';\n      var v = 10000;\n\n      while (i < 16) {\n        cssValue += _rnd(props[i] * v) / v;\n        cssValue += i === 15 ? ')' : ',';\n        i += 1;\n      }\n\n      return cssValue;\n    }\n\n    function roundMatrixProperty(val) {\n      var v = 10000;\n\n      if (val < 0.000001 && val > 0 || val > -0.000001 && val < 0) {\n        return _rnd(val * v) / v;\n      }\n\n      return val;\n    }\n\n    function to2dCSS() {\n      //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n\n      /*if(this.isIdentity()) {\r\n          return '';\r\n      }*/\n      var props = this.props;\n\n      var _a = roundMatrixProperty(props[0]);\n\n      var _b = roundMatrixProperty(props[1]);\n\n      var _c = roundMatrixProperty(props[4]);\n\n      var _d = roundMatrixProperty(props[5]);\n\n      var _e = roundMatrixProperty(props[12]);\n\n      var _f = roundMatrixProperty(props[13]);\n\n      return \"matrix(\" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + \")\";\n    }\n\n    return function () {\n      this.reset = reset;\n      this.rotate = rotate;\n      this.rotateX = rotateX;\n      this.rotateY = rotateY;\n      this.rotateZ = rotateZ;\n      this.skew = skew;\n      this.skewFromAxis = skewFromAxis;\n      this.shear = shear;\n      this.scale = scale;\n      this.setTransform = setTransform;\n      this.translate = translate;\n      this.transform = transform;\n      this.applyToPoint = applyToPoint;\n      this.applyToX = applyToX;\n      this.applyToY = applyToY;\n      this.applyToZ = applyToZ;\n      this.applyToPointArray = applyToPointArray;\n      this.applyToTriplePoints = applyToTriplePoints;\n      this.applyToPointStringified = applyToPointStringified;\n      this.toCSS = toCSS;\n      this.to2dCSS = to2dCSS;\n      this.clone = clone;\n      this.cloneFromProps = cloneFromProps;\n      this.equals = equals;\n      this.inversePoints = inversePoints;\n      this.inversePoint = inversePoint;\n      this._t = this.transform;\n      this.isIdentity = isIdentity;\n      this._identity = true;\n      this._identityCalculated = false;\n      this.props = createTypedArray('float32', 16);\n      this.reset();\n    };\n  }();\n  /*\r\n   Copyright 2014 David Bau.\r\n  \r\n   Permission is hereby granted, free of charge, to any person obtaining\r\n   a copy of this software and associated documentation files (the\r\n   \"Software\"), to deal in the Software without restriction, including\r\n   without limitation the rights to use, copy, modify, merge, publish,\r\n   distribute, sublicense, and/or sell copies of the Software, and to\r\n   permit persons to whom the Software is furnished to do so, subject to\r\n   the following conditions:\r\n  \r\n   The above copyright notice and this permission notice shall be\r\n   included in all copies or substantial portions of the Software.\r\n  \r\n   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n   CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n   SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n  \r\n   */\n\n\n  (function (pool, math) {\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    var global = this,\n        width = 256,\n        // each RC4 output is 0 <= x < 256\n    chunks = 6,\n        // at least six RC4 outputs for each double\n    digits = 52,\n        // there are 52 significant digits in a double\n    rngname = 'random',\n        // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n        significance = math.pow(2, digits),\n        overflow = significance * 2,\n        mask = width - 1,\n        nodecrypto; // node.js crypto module, initialized at the bottom.\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n\n    function seedrandom(seed, options, callback) {\n      var key = [];\n      options = options === true ? {\n        entropy: true\n      } : options || {}; // Flatten the seed string or build one from local entropy if needed.\n\n      var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3), key); // Use the seed to initialize an ARC4 generator.\n\n      var arc4 = new ARC4(key); // This function returns a random double in [0, 1) that contains\n      // randomness in every bit of the mantissa of the IEEE 754 value.\n\n      var prng = function prng() {\n        var n = arc4.g(chunks),\n            // Start with a numerator n < 2 ^ 48\n        d = startdenom,\n            //   and denominator d = 2 ^ 48.\n        x = 0; //   and no 'extra last byte'.\n\n        while (n < significance) {\n          // Fill up all significant digits by\n          n = (n + x) * width; //   shifting numerator and\n\n          d *= width; //   denominator and generating a\n\n          x = arc4.g(1); //   new least-significant-byte.\n        }\n\n        while (n >= overflow) {\n          // To avoid rounding up, before adding\n          n /= 2; //   last byte, shift everything\n\n          d /= 2; //   right using integer math until\n\n          x >>>= 1; //   we have exactly the desired bits.\n        }\n\n        return (n + x) / d; // Form the number within [0, 1).\n      };\n\n      prng.int32 = function () {\n        return arc4.g(4) | 0;\n      };\n\n      prng.quick = function () {\n        return arc4.g(4) / 0x100000000;\n      };\n\n      prng.double = prng; // Mix the randomness into accumulated entropy.\n\n      mixkey(tostring(arc4.S), pool); // Calling convention: what to return as a function of prng, seed, is_math.\n\n      return (options.pass || callback || function (prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) {\n            copy(state, arc4);\n          } // Only provide the .state method if requested via options.state.\n\n\n          prng.state = function () {\n            return copy(arc4, {});\n          };\n        } // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n\n\n        if (is_math_call) {\n          math[rngname] = prng;\n          return seed;\n        } // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);\n    }\n\n    math['seed' + rngname] = seedrandom; //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n\n    function ARC4(key) {\n      var t,\n          keylen = key.length,\n          me = this,\n          i = 0,\n          j = me.i = me.j = 0,\n          s = me.S = []; // The empty key [] is treated as [0].\n\n      if (!keylen) {\n        key = [keylen++];\n      } // Set up S using the standard key scheduling algorithm.\n\n\n      while (i < width) {\n        s[i] = i++;\n      }\n\n      for (i = 0; i < width; i++) {\n        s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n        s[j] = t;\n      } // The \"g\" method returns the next (count) outputs as one number.\n\n\n      me.g = function (count) {\n        // Using instance members instead of closure state nearly doubles speed.\n        var t,\n            r = 0,\n            i = me.i,\n            j = me.j,\n            s = me.S;\n\n        while (count--) {\n          t = s[i = mask & i + 1];\n          r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n        }\n\n        me.i = i;\n        me.j = j;\n        return r; // For robust unpredictability, the function call below automatically\n        // discards an initial batch of values.  This is called RC4-drop[256].\n        // See http://google.com/search?q=rsa+fluhrer+response&btnI\n      };\n    } //\n    // copy()\n    // Copies internal state of ARC4 to or from a plain object.\n    //\n\n\n    function copy(f, t) {\n      t.i = f.i;\n      t.j = f.j;\n      t.S = f.S.slice();\n      return t;\n    } //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n\n\n    function flatten(obj, depth) {\n      var result = [],\n          typ = typeof obj,\n          prop;\n\n      if (depth && typ == 'object') {\n        for (prop in obj) {\n          try {\n            result.push(flatten(obj[prop], depth - 1));\n          } catch (e) {}\n        }\n      }\n\n      return result.length ? result : typ == 'string' ? obj : obj + '\\0';\n    } //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n\n\n    function mixkey(seed, key) {\n      var stringseed = seed + '',\n          smear,\n          j = 0;\n\n      while (j < stringseed.length) {\n        key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n      }\n\n      return tostring(key);\n    } //\n    // autoseed()\n    // Returns an object for autoseeding, using window.crypto and Node crypto\n    // module if available.\n    //\n\n\n    function autoseed() {\n      try {\n        if (nodecrypto) {\n          return tostring(nodecrypto.randomBytes(width));\n        }\n\n        var out = new Uint8Array(width);\n        (global.crypto || global.msCrypto).getRandomValues(out);\n        return tostring(out);\n      } catch (e) {\n        var browser = global.navigator,\n            plugins = browser && browser.plugins;\n        return [+new Date(), global, plugins, global.screen, tostring(pool)];\n      }\n    } //\n    // tostring()\n    // Converts an array of charcodes to a string\n    //\n\n\n    function tostring(a) {\n      return String.fromCharCode.apply(0, a);\n    } //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to interfere with deterministic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n\n\n    mixkey(math.random(), pool); //\n    // Nodejs and AMD support: export the implementation as a module using\n    // either convention.\n    //\n    // End anonymous scope, and pass initial values.\n  })([], // pool: entropy pool starts empty\n  BMMath // math: package containing random, pow, and seedrandom\n  );\n\n  var BezierFactory = function () {\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\n    var ob = {};\n    ob.getBezierEasing = getBezierEasing;\n    var beziers = {};\n\n    function getBezierEasing(a, b, c, d, nm) {\n      var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\\./g, 'p');\n\n      if (beziers[str]) {\n        return beziers[str];\n      }\n\n      var bezEasing = new BezierEasing([a, b, c, d]);\n      beziers[str] = bezEasing;\n      return bezEasing;\n    } // These values are established by empiricism with tests (tradeoff: performance VS precision)\n\n\n    var NEWTON_ITERATIONS = 4;\n    var NEWTON_MIN_SLOPE = 0.001;\n    var SUBDIVISION_PRECISION = 0.0000001;\n    var SUBDIVISION_MAX_ITERATIONS = 10;\n    var kSplineTableSize = 11;\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n    var float32ArraySupported = typeof Float32Array === \"function\";\n\n    function A(aA1, aA2) {\n      return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n    }\n\n    function B(aA1, aA2) {\n      return 3.0 * aA2 - 6.0 * aA1;\n    }\n\n    function C(aA1) {\n      return 3.0 * aA1;\n    } // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n\n\n    function calcBezier(aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    } // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n\n\n    function getSlope(aT, aA1, aA2) {\n      return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n    }\n\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n      var currentX,\n          currentT,\n          i = 0;\n\n      do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n        if (currentX > 0.0) {\n          aB = currentT;\n        } else {\n          aA = currentT;\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n      return currentT;\n    }\n\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) return aGuessT;\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n      }\n\n      return aGuessT;\n    }\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\n\n\n    function BezierEasing(points) {\n      this._p = points;\n      this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n      this._precomputed = false;\n      this.get = this.get.bind(this);\n    }\n\n    BezierEasing.prototype = {\n      get: function get(x) {\n        var mX1 = this._p[0],\n            mY1 = this._p[1],\n            mX2 = this._p[2],\n            mY2 = this._p[3];\n        if (!this._precomputed) this._precompute();\n        if (mX1 === mY1 && mX2 === mY2) return x; // linear\n        // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n\n        if (x === 0) return 0;\n        if (x === 1) return 1;\n        return calcBezier(this._getTForX(x), mY1, mY2);\n      },\n      // Private part\n      _precompute: function _precompute() {\n        var mX1 = this._p[0],\n            mY1 = this._p[1],\n            mX2 = this._p[2],\n            mY2 = this._p[3];\n        this._precomputed = true;\n        if (mX1 !== mY1 || mX2 !== mY2) this._calcSampleValues();\n      },\n      _calcSampleValues: function _calcSampleValues() {\n        var mX1 = this._p[0],\n            mX2 = this._p[2];\n\n        for (var i = 0; i < kSplineTableSize; ++i) {\n          this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n        }\n      },\n\n      /**\r\n       * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n       */\n      _getTForX: function _getTForX(aX) {\n        var mX1 = this._p[0],\n            mX2 = this._p[2],\n            mSampleValues = this._mSampleValues;\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n\n        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize;\n        }\n\n        --currentSample; // Interpolate to provide an initial guess for t\n\n        var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        } else if (initialSlope === 0.0) {\n          return guessForT;\n        } else {\n          return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n      }\n    };\n    return ob;\n  }();\n\n  (function () {\n    var lastTime = 0;\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\n\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n      window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame) window.requestAnimationFrame = function (callback, element) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      var id = setTimeout(function () {\n        callback(currTime + timeToCall);\n      }, timeToCall);\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n    if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (id) {\n      clearTimeout(id);\n    };\n  })();\n\n  function extendPrototype(sources, destination) {\n    var i,\n        len = sources.length,\n        sourcePrototype;\n\n    for (i = 0; i < len; i += 1) {\n      sourcePrototype = sources[i].prototype;\n\n      for (var attr in sourcePrototype) {\n        if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\n      }\n    }\n  }\n\n  function getDescriptor(object, prop) {\n    return Object.getOwnPropertyDescriptor(object, prop);\n  }\n\n  function createProxyFunction(prototype) {\n    function ProxyFunction() {}\n\n    ProxyFunction.prototype = prototype;\n    return ProxyFunction;\n  }\n\n  function bezFunction() {\n    var easingFunctions = [];\n    var math = Math;\n\n    function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\n      var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;\n      return det1 > -0.001 && det1 < 0.001;\n    }\n\n    function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\n      if (z1 === 0 && z2 === 0 && z3 === 0) {\n        return pointOnLine2D(x1, y1, x2, y2, x3, y3);\n      }\n\n      var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\n      var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\n      var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\n      var diffDist;\n\n      if (dist1 > dist2) {\n        if (dist1 > dist3) {\n          diffDist = dist1 - dist2 - dist3;\n        } else {\n          diffDist = dist3 - dist2 - dist1;\n        }\n      } else if (dist3 > dist2) {\n        diffDist = dist3 - dist2 - dist1;\n      } else {\n        diffDist = dist2 - dist1 - dist3;\n      }\n\n      return diffDist > -0.0001 && diffDist < 0.0001;\n    }\n\n    var getBezierLength = function () {\n      return function (pt1, pt2, pt3, pt4) {\n        var curveSegments = defaultCurveSegments;\n        var k;\n        var i, len;\n        var ptCoord,\n            perc,\n            addedLength = 0;\n        var ptDistance;\n        var point = [],\n            lastPoint = [];\n        var lengthData = bezier_length_pool.newElement();\n        len = pt3.length;\n\n        for (k = 0; k < curveSegments; k += 1) {\n          perc = k / (curveSegments - 1);\n          ptDistance = 0;\n\n          for (i = 0; i < len; i += 1) {\n            ptCoord = bm_pow(1 - perc, 3) * pt1[i] + 3 * bm_pow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bm_pow(perc, 2) * pt4[i] + bm_pow(perc, 3) * pt2[i];\n            point[i] = ptCoord;\n\n            if (lastPoint[i] !== null) {\n              ptDistance += bm_pow(point[i] - lastPoint[i], 2);\n            }\n\n            lastPoint[i] = point[i];\n          }\n\n          if (ptDistance) {\n            ptDistance = bm_sqrt(ptDistance);\n            addedLength += ptDistance;\n          }\n\n          lengthData.percents[k] = perc;\n          lengthData.lengths[k] = addedLength;\n        }\n\n        lengthData.addedLength = addedLength;\n        return lengthData;\n      };\n    }();\n\n    function getSegmentsLength(shapeData) {\n      var segmentsLength = segments_length_pool.newElement();\n      var closed = shapeData.c;\n      var pathV = shapeData.v;\n      var pathO = shapeData.o;\n      var pathI = shapeData.i;\n      var i,\n          len = shapeData._length;\n      var lengths = segmentsLength.lengths;\n      var totalLength = 0;\n\n      for (i = 0; i < len - 1; i += 1) {\n        lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);\n        totalLength += lengths[i].addedLength;\n      }\n\n      if (closed && len) {\n        lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);\n        totalLength += lengths[i].addedLength;\n      }\n\n      segmentsLength.totalLength = totalLength;\n      return segmentsLength;\n    }\n\n    function BezierData(length) {\n      this.segmentLength = 0;\n      this.points = new Array(length);\n    }\n\n    function PointData(partial, point) {\n      this.partialLength = partial;\n      this.point = point;\n    }\n\n    var buildBezierData = function () {\n      var storedData = {};\n      return function (keyData) {\n        var pt1 = keyData.s;\n        var pt2 = keyData.e;\n        var pt3 = keyData.to;\n        var pt4 = keyData.ti;\n        var bezierName = (pt1[0] + '_' + pt1[1] + '_' + pt2[0] + '_' + pt2[1] + '_' + pt3[0] + '_' + pt3[1] + '_' + pt4[0] + '_' + pt4[1]).replace(/\\./g, 'p');\n\n        if (storedData[bezierName]) {\n          keyData.bezierData = storedData[bezierName];\n          return;\n        }\n\n        var curveSegments = defaultCurveSegments;\n        var k, i, len;\n        var ptCoord,\n            perc,\n            addedLength = 0;\n        var ptDistance;\n        var point,\n            lastPoint = null;\n\n        if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {\n          curveSegments = 2;\n        }\n\n        var bezierData = new BezierData(curveSegments);\n        len = pt3.length;\n\n        for (k = 0; k < curveSegments; k += 1) {\n          point = createSizedArray(len);\n          perc = k / (curveSegments - 1);\n          ptDistance = 0;\n\n          for (i = 0; i < len; i += 1) {\n            ptCoord = bm_pow(1 - perc, 3) * pt1[i] + 3 * bm_pow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bm_pow(perc, 2) * (pt2[i] + pt4[i]) + bm_pow(perc, 3) * pt2[i];\n            point[i] = ptCoord;\n\n            if (lastPoint !== null) {\n              ptDistance += bm_pow(point[i] - lastPoint[i], 2);\n            }\n          }\n\n          ptDistance = bm_sqrt(ptDistance);\n          addedLength += ptDistance;\n          bezierData.points[k] = new PointData(ptDistance, point);\n          lastPoint = point;\n        }\n\n        bezierData.segmentLength = addedLength;\n        keyData.bezierData = bezierData;\n        storedData[bezierName] = bezierData;\n      };\n    }();\n\n    function getDistancePerc(perc, bezierData) {\n      var percents = bezierData.percents;\n      var lengths = bezierData.lengths;\n      var len = percents.length;\n      var initPos = bm_floor((len - 1) * perc);\n      var lengthPos = perc * bezierData.addedLength;\n      var lPerc = 0;\n\n      if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {\n        return percents[initPos];\n      } else {\n        var dir = lengths[initPos] > lengthPos ? -1 : 1;\n        var flag = true;\n\n        while (flag) {\n          if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {\n            lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);\n            flag = false;\n          } else {\n            initPos += dir;\n          }\n\n          if (initPos < 0 || initPos >= len - 1) {\n            //FIX for TypedArrays that don't store floating point values with enough accuracy\n            if (initPos === len - 1) {\n              return percents[initPos];\n            }\n\n            flag = false;\n          }\n        }\n\n        return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;\n      }\n    }\n\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\n      var t1 = getDistancePerc(percent, bezierData);\n      var u0 = 1;\n      var u1 = 1 - t1;\n      var ptX = Math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1000) / 1000;\n      var ptY = Math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1000) / 1000;\n      return [ptX, ptY];\n    }\n\n    function getSegmentArray() {}\n\n    var bezier_segment_points = createTypedArray('float32', 8);\n\n    function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\n      startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\n      var t0 = getDistancePerc(startPerc, bezierData);\n      endPerc = endPerc > 1 ? 1 : endPerc;\n      var t1 = getDistancePerc(endPerc, bezierData);\n      var i,\n          len = pt1.length;\n      var u0 = 1 - t0;\n      var u1 = 1 - t1;\n      var u0u0u0 = u0 * u0 * u0;\n      var t0u0u0_3 = t0 * u0 * u0 * 3;\n      var t0t0u0_3 = t0 * t0 * u0 * 3;\n      var t0t0t0 = t0 * t0 * t0; //\n\n      var u0u0u1 = u0 * u0 * u1;\n      var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1;\n      var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1;\n      var t0t0t1 = t0 * t0 * t1; //\n\n      var u0u1u1 = u0 * u1 * u1;\n      var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1;\n      var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1;\n      var t0t1t1 = t0 * t1 * t1; //\n\n      var u1u1u1 = u1 * u1 * u1;\n      var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1;\n      var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1;\n      var t1t1t1 = t1 * t1 * t1;\n\n      for (i = 0; i < len; i += 1) {\n        bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\n        bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\n        bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\n        bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\n      }\n\n      return bezier_segment_points;\n    }\n\n    return {\n      getSegmentsLength: getSegmentsLength,\n      getNewSegment: getNewSegment,\n      getPointInSegment: getPointInSegment,\n      buildBezierData: buildBezierData,\n      pointOnLine2D: pointOnLine2D,\n      pointOnLine3D: pointOnLine3D\n    };\n  }\n\n  var bez = bezFunction();\n\n  function dataFunctionManager() {\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\n    function completeLayers(layers, comps, fontManager) {\n      var layerData;\n      var animArray, lastFrame;\n      var i,\n          len = layers.length;\n      var j, jLen, k, kLen;\n\n      for (i = 0; i < len; i += 1) {\n        layerData = layers[i];\n\n        if (!('ks' in layerData) || layerData.completed) {\n          continue;\n        }\n\n        layerData.completed = true;\n\n        if (layerData.tt) {\n          layers[i - 1].td = layerData.tt;\n        }\n\n        animArray = [];\n        lastFrame = -1;\n\n        if (layerData.hasMask) {\n          var maskProps = layerData.masksProperties;\n          jLen = maskProps.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            if (maskProps[j].pt.k.i) {\n              convertPathsToAbsoluteValues(maskProps[j].pt.k);\n            } else {\n              kLen = maskProps[j].pt.k.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                if (maskProps[j].pt.k[k].s) {\n                  convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\n                }\n\n                if (maskProps[j].pt.k[k].e) {\n                  convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\n                }\n              }\n            }\n          }\n        }\n\n        if (layerData.ty === 0) {\n          layerData.layers = findCompLayers(layerData.refId, comps);\n          completeLayers(layerData.layers, comps, fontManager);\n        } else if (layerData.ty === 4) {\n          completeShapes(layerData.shapes);\n        } else if (layerData.ty == 5) {\n          completeText(layerData, fontManager);\n        }\n      }\n    }\n\n    function findCompLayers(id, comps) {\n      var i = 0,\n          len = comps.length;\n\n      while (i < len) {\n        if (comps[i].id === id) {\n          if (!comps[i].layers.__used) {\n            comps[i].layers.__used = true;\n            return comps[i].layers;\n          }\n\n          return JSON.parse(JSON.stringify(comps[i].layers));\n        }\n\n        i += 1;\n      }\n    }\n\n    function completeShapes(arr) {\n      var i,\n          len = arr.length;\n      var j, jLen;\n      var hasPaths = false;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (arr[i].ty == 'sh') {\n          if (arr[i].ks.k.i) {\n            convertPathsToAbsoluteValues(arr[i].ks.k);\n          } else {\n            jLen = arr[i].ks.k.length;\n\n            for (j = 0; j < jLen; j += 1) {\n              if (arr[i].ks.k[j].s) {\n                convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\n              }\n\n              if (arr[i].ks.k[j].e) {\n                convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\n              }\n            }\n          }\n\n          hasPaths = true;\n        } else if (arr[i].ty == 'gr') {\n          completeShapes(arr[i].it);\n        }\n      }\n      /*if(hasPaths){\r\n          //mx: distance\r\n          //ss: sensitivity\r\n          //dc: decay\r\n          arr.splice(arr.length-1,0,{\r\n              \"ty\": \"ms\",\r\n              \"mx\":20,\r\n              \"ss\":10,\r\n               \"dc\":0.001,\r\n              \"maxDist\":200\r\n          });\r\n      }*/\n\n    }\n\n    function convertPathsToAbsoluteValues(path) {\n      var i,\n          len = path.i.length;\n\n      for (i = 0; i < len; i += 1) {\n        path.i[i][0] += path.v[i][0];\n        path.i[i][1] += path.v[i][1];\n        path.o[i][0] += path.v[i][0];\n        path.o[i][1] += path.v[i][1];\n      }\n    }\n\n    function checkVersion(minimum, animVersionString) {\n      var animVersion = animVersionString ? animVersionString.split('.') : [100, 100, 100];\n\n      if (minimum[0] > animVersion[0]) {\n        return true;\n      } else if (animVersion[0] > minimum[0]) {\n        return false;\n      }\n\n      if (minimum[1] > animVersion[1]) {\n        return true;\n      } else if (animVersion[1] > minimum[1]) {\n        return false;\n      }\n\n      if (minimum[2] > animVersion[2]) {\n        return true;\n      } else if (animVersion[2] > minimum[2]) {\n        return false;\n      }\n    }\n\n    var checkText = function () {\n      var minimumVersion = [4, 4, 14];\n\n      function updateTextLayer(textLayer) {\n        var documentData = textLayer.t.d;\n        textLayer.t.d = {\n          k: [{\n            s: documentData,\n            t: 0\n          }]\n        };\n      }\n\n      function iterateLayers(layers) {\n        var i,\n            len = layers.length;\n\n        for (i = 0; i < len; i += 1) {\n          if (layers[i].ty === 5) {\n            updateTextLayer(layers[i]);\n          }\n        }\n      }\n\n      return function (animationData) {\n        if (checkVersion(minimumVersion, animationData.v)) {\n          iterateLayers(animationData.layers);\n\n          if (animationData.assets) {\n            var i,\n                len = animationData.assets.length;\n\n            for (i = 0; i < len; i += 1) {\n              if (animationData.assets[i].layers) {\n                iterateLayers(animationData.assets[i].layers);\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var checkChars = function () {\n      var minimumVersion = [4, 7, 99];\n      return function (animationData) {\n        if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\n          var i,\n              len = animationData.chars.length,\n              j,\n              jLen,\n              k,\n              kLen;\n          var pathData, paths;\n\n          for (i = 0; i < len; i += 1) {\n            if (animationData.chars[i].data && animationData.chars[i].data.shapes) {\n              paths = animationData.chars[i].data.shapes[0].it;\n              jLen = paths.length;\n\n              for (j = 0; j < jLen; j += 1) {\n                pathData = paths[j].ks.k;\n\n                if (!pathData.__converted) {\n                  convertPathsToAbsoluteValues(paths[j].ks.k);\n                  pathData.__converted = true;\n                }\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var checkColors = function () {\n      var minimumVersion = [4, 1, 9];\n\n      function iterateShapes(shapes) {\n        var i,\n            len = shapes.length;\n        var j, jLen;\n\n        for (i = 0; i < len; i += 1) {\n          if (shapes[i].ty === 'gr') {\n            iterateShapes(shapes[i].it);\n          } else if (shapes[i].ty === 'fl' || shapes[i].ty === 'st') {\n            if (shapes[i].c.k && shapes[i].c.k[0].i) {\n              jLen = shapes[i].c.k.length;\n\n              for (j = 0; j < jLen; j += 1) {\n                if (shapes[i].c.k[j].s) {\n                  shapes[i].c.k[j].s[0] /= 255;\n                  shapes[i].c.k[j].s[1] /= 255;\n                  shapes[i].c.k[j].s[2] /= 255;\n                  shapes[i].c.k[j].s[3] /= 255;\n                }\n\n                if (shapes[i].c.k[j].e) {\n                  shapes[i].c.k[j].e[0] /= 255;\n                  shapes[i].c.k[j].e[1] /= 255;\n                  shapes[i].c.k[j].e[2] /= 255;\n                  shapes[i].c.k[j].e[3] /= 255;\n                }\n              }\n            } else {\n              shapes[i].c.k[0] /= 255;\n              shapes[i].c.k[1] /= 255;\n              shapes[i].c.k[2] /= 255;\n              shapes[i].c.k[3] /= 255;\n            }\n          }\n        }\n      }\n\n      function iterateLayers(layers) {\n        var i,\n            len = layers.length;\n\n        for (i = 0; i < len; i += 1) {\n          if (layers[i].ty === 4) {\n            iterateShapes(layers[i].shapes);\n          }\n        }\n      }\n\n      return function (animationData) {\n        if (checkVersion(minimumVersion, animationData.v)) {\n          iterateLayers(animationData.layers);\n\n          if (animationData.assets) {\n            var i,\n                len = animationData.assets.length;\n\n            for (i = 0; i < len; i += 1) {\n              if (animationData.assets[i].layers) {\n                iterateLayers(animationData.assets[i].layers);\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var checkShapes = function () {\n      var minimumVersion = [4, 4, 18];\n\n      function completeShapes(arr) {\n        var i,\n            len = arr.length;\n        var j, jLen;\n        var hasPaths = false;\n\n        for (i = len - 1; i >= 0; i -= 1) {\n          if (arr[i].ty == 'sh') {\n            if (arr[i].ks.k.i) {\n              arr[i].ks.k.c = arr[i].closed;\n            } else {\n              jLen = arr[i].ks.k.length;\n\n              for (j = 0; j < jLen; j += 1) {\n                if (arr[i].ks.k[j].s) {\n                  arr[i].ks.k[j].s[0].c = arr[i].closed;\n                }\n\n                if (arr[i].ks.k[j].e) {\n                  arr[i].ks.k[j].e[0].c = arr[i].closed;\n                }\n              }\n            }\n\n            hasPaths = true;\n          } else if (arr[i].ty == 'gr') {\n            completeShapes(arr[i].it);\n          }\n        }\n      }\n\n      function iterateLayers(layers) {\n        var layerData;\n        var i,\n            len = layers.length;\n        var j, jLen, k, kLen;\n\n        for (i = 0; i < len; i += 1) {\n          layerData = layers[i];\n\n          if (layerData.hasMask) {\n            var maskProps = layerData.masksProperties;\n            jLen = maskProps.length;\n\n            for (j = 0; j < jLen; j += 1) {\n              if (maskProps[j].pt.k.i) {\n                maskProps[j].pt.k.c = maskProps[j].cl;\n              } else {\n                kLen = maskProps[j].pt.k.length;\n\n                for (k = 0; k < kLen; k += 1) {\n                  if (maskProps[j].pt.k[k].s) {\n                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\n                  }\n\n                  if (maskProps[j].pt.k[k].e) {\n                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\n                  }\n                }\n              }\n            }\n          }\n\n          if (layerData.ty === 4) {\n            completeShapes(layerData.shapes);\n          }\n        }\n      }\n\n      return function (animationData) {\n        if (checkVersion(minimumVersion, animationData.v)) {\n          iterateLayers(animationData.layers);\n\n          if (animationData.assets) {\n            var i,\n                len = animationData.assets.length;\n\n            for (i = 0; i < len; i += 1) {\n              if (animationData.assets[i].layers) {\n                iterateLayers(animationData.assets[i].layers);\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    function completeData(animationData, fontManager) {\n      if (animationData.__complete) {\n        return;\n      }\n\n      checkColors(animationData);\n      checkText(animationData);\n      checkChars(animationData);\n      checkShapes(animationData);\n      completeLayers(animationData.layers, animationData.assets, fontManager);\n      animationData.__complete = true; //blitAnimation(animationData, animationData.assets, fontManager);\n    }\n\n    function completeText(data, fontManager) {\n      if (data.t.a.length === 0 && !('m' in data.t.p)) {\n        data.singleShape = true;\n      }\n    }\n\n    var moduleOb = {};\n    moduleOb.completeData = completeData;\n    return moduleOb;\n  }\n\n  var dataManager = dataFunctionManager();\n\n  var FontManager = function () {\n    var maxWaitingTime = 5000;\n    var emptyChar = {\n      w: 0,\n      size: 0,\n      shapes: []\n    };\n    var combinedCharacters = []; //Hindi characters\n\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\n\n    function setUpNode(font, family) {\n      var parentNode = createTag('span');\n      parentNode.style.fontFamily = family;\n      var node = createTag('span'); // Characters that vary significantly among different fonts\n\n      node.innerHTML = 'giItT1WQy@!-/#'; // Visible - so we can measure it - but not on the screen\n\n      parentNode.style.position = 'absolute';\n      parentNode.style.left = '-10000px';\n      parentNode.style.top = '-10000px'; // Large font size makes even subtle changes obvious\n\n      parentNode.style.fontSize = '300px'; // Reset any font properties\n\n      parentNode.style.fontVariant = 'normal';\n      parentNode.style.fontStyle = 'normal';\n      parentNode.style.fontWeight = 'normal';\n      parentNode.style.letterSpacing = '0';\n      parentNode.appendChild(node);\n      document.body.appendChild(parentNode); // Remember width with no applied web font\n\n      var width = node.offsetWidth;\n      node.style.fontFamily = font + ', ' + family;\n      return {\n        node: node,\n        w: width,\n        parent: parentNode\n      };\n    }\n\n    function checkLoadedFonts() {\n      var i,\n          len = this.fonts.length;\n      var node, w;\n      var loadedCount = len;\n\n      for (i = 0; i < len; i += 1) {\n        if (this.fonts[i].loaded) {\n          loadedCount -= 1;\n          continue;\n        }\n\n        if (this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0) {\n          this.fonts[i].loaded = true;\n        } else {\n          node = this.fonts[i].monoCase.node;\n          w = this.fonts[i].monoCase.w;\n\n          if (node.offsetWidth !== w) {\n            loadedCount -= 1;\n            this.fonts[i].loaded = true;\n          } else {\n            node = this.fonts[i].sansCase.node;\n            w = this.fonts[i].sansCase.w;\n\n            if (node.offsetWidth !== w) {\n              loadedCount -= 1;\n              this.fonts[i].loaded = true;\n            }\n          }\n\n          if (this.fonts[i].loaded) {\n            this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\n            this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\n          }\n        }\n      }\n\n      if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\n        setTimeout(this.checkLoadedFonts.bind(this), 20);\n      } else {\n        setTimeout(function () {\n          this.isLoaded = true;\n        }.bind(this), 0);\n      }\n    }\n\n    function createHelper(def, fontData) {\n      var tHelper = createNS('text');\n      tHelper.style.fontSize = '100px'; //tHelper.style.fontFamily = fontData.fFamily;\n\n      tHelper.setAttribute('font-family', fontData.fFamily);\n      tHelper.setAttribute('font-style', fontData.fStyle);\n      tHelper.setAttribute('font-weight', fontData.fWeight);\n      tHelper.textContent = '1';\n\n      if (fontData.fClass) {\n        tHelper.style.fontFamily = 'inherit';\n        tHelper.setAttribute('class', fontData.fClass);\n      } else {\n        tHelper.style.fontFamily = fontData.fFamily;\n      }\n\n      def.appendChild(tHelper);\n      var tCanvasHelper = createTag('canvas').getContext('2d');\n      tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px ' + fontData.fFamily; //tCanvasHelper.font = ' 100px '+ fontData.fFamily;\n\n      return tHelper;\n    }\n\n    function addFonts(fontData, defs) {\n      if (!fontData) {\n        this.isLoaded = true;\n        return;\n      }\n\n      if (this.chars) {\n        this.isLoaded = true;\n        this.fonts = fontData.list;\n        return;\n      }\n\n      var fontArr = fontData.list;\n      var i,\n          len = fontArr.length;\n      var _pendingFonts = len;\n\n      for (i = 0; i < len; i += 1) {\n        var shouldLoadFont = true;\n        var loadedSelector;\n        var j;\n        fontArr[i].loaded = false;\n        fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, 'monospace');\n        fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, 'sans-serif');\n\n        if (!fontArr[i].fPath) {\n          fontArr[i].loaded = true;\n          _pendingFonts -= 1;\n        } else if (fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3) {\n          loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"' + fontArr[i].fFamily + '\"], style[f-origin=\"3\"][f-family=\"' + fontArr[i].fFamily + '\"]');\n\n          if (loadedSelector.length > 0) {\n            shouldLoadFont = false;\n          }\n\n          if (shouldLoadFont) {\n            var s = createTag('style');\n            s.setAttribute('f-forigin', fontArr[i].fOrigin);\n            s.setAttribute('f-origin', fontArr[i].origin);\n            s.setAttribute('f-family', fontArr[i].fFamily);\n            s.type = \"text/css\";\n            s.innerHTML = \"@font-face {\" + \"font-family: \" + fontArr[i].fFamily + \"; font-style: normal; src: url('\" + fontArr[i].fPath + \"');}\";\n            defs.appendChild(s);\n          }\n        } else if (fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1) {\n          loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\n\n          for (j = 0; j < loadedSelector.length; j++) {\n            if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\n              // Font is already loaded\n              shouldLoadFont = false;\n            }\n          }\n\n          if (shouldLoadFont) {\n            var l = createTag('link');\n            l.setAttribute('f-forigin', fontArr[i].fOrigin);\n            l.setAttribute('f-origin', fontArr[i].origin);\n            l.type = \"text/css\";\n            l.rel = \"stylesheet\";\n            l.href = fontArr[i].fPath;\n            document.body.appendChild(l);\n          }\n        } else if (fontArr[i].fOrigin === 't' || fontArr[i].origin === 2) {\n          loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\n\n          for (j = 0; j < loadedSelector.length; j++) {\n            if (fontArr[i].fPath === loadedSelector[j].src) {\n              // Font is already loaded\n              shouldLoadFont = false;\n            }\n          }\n\n          if (shouldLoadFont) {\n            var sc = createTag('link');\n            sc.setAttribute('f-forigin', fontArr[i].fOrigin);\n            sc.setAttribute('f-origin', fontArr[i].origin);\n            sc.setAttribute('rel', 'stylesheet');\n            sc.setAttribute('href', fontArr[i].fPath);\n            defs.appendChild(sc);\n          }\n        }\n\n        fontArr[i].helper = createHelper(defs, fontArr[i]);\n        fontArr[i].cache = {};\n        this.fonts.push(fontArr[i]);\n      }\n\n      if (_pendingFonts === 0) {\n        this.isLoaded = true;\n      } else {\n        //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\n        //Adding this timeout seems to fix it\n        setTimeout(this.checkLoadedFonts.bind(this), 100);\n      }\n    }\n\n    function addChars(chars) {\n      if (!chars) {\n        return;\n      }\n\n      if (!this.chars) {\n        this.chars = [];\n      }\n\n      var i,\n          len = chars.length;\n      var j,\n          jLen = this.chars.length,\n          found;\n\n      for (i = 0; i < len; i += 1) {\n        j = 0;\n        found = false;\n\n        while (j < jLen) {\n          if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {\n            found = true;\n          }\n\n          j += 1;\n        }\n\n        if (!found) {\n          this.chars.push(chars[i]);\n          jLen += 1;\n        }\n      }\n    }\n\n    function getCharData(char, style, font) {\n      var i = 0,\n          len = this.chars.length;\n\n      while (i < len) {\n        if (this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font) {\n          return this.chars[i];\n        }\n\n        i += 1;\n      }\n\n      if (console && console.warn) {\n        console.warn('Missing character from exported characters list: ', char, style, font);\n      }\n\n      return emptyChar;\n    }\n\n    function measureText(char, fontName, size) {\n      var fontData = this.getFontByName(fontName);\n      var index = char.charCodeAt(0);\n\n      if (!fontData.cache[index + 1]) {\n        var tHelper = fontData.helper; //Canvas version\n        //fontData.cache[index] = tHelper.measureText(char).width / 100;\n        //SVG version\n        //console.log(tHelper.getBBox().width)\n\n        if (char === ' ') {\n          tHelper.textContent = '|' + char + '|';\n          var doubleSize = tHelper.getComputedTextLength();\n          tHelper.textContent = '||';\n          var singleSize = tHelper.getComputedTextLength();\n          fontData.cache[index + 1] = (doubleSize - singleSize) / 100;\n        } else {\n          tHelper.textContent = char;\n          fontData.cache[index + 1] = tHelper.getComputedTextLength() / 100;\n        }\n      }\n\n      return fontData.cache[index + 1] * size;\n    }\n\n    function getFontByName(name) {\n      var i = 0,\n          len = this.fonts.length;\n\n      while (i < len) {\n        if (this.fonts[i].fName === name) {\n          return this.fonts[i];\n        }\n\n        i += 1;\n      }\n\n      return this.fonts[0];\n    }\n\n    function getCombinedCharacterCodes() {\n      return combinedCharacters;\n    }\n\n    function loaded() {\n      return this.isLoaded;\n    }\n\n    var Font = function Font() {\n      this.fonts = [];\n      this.chars = null;\n      this.typekitLoaded = 0;\n      this.isLoaded = false;\n      this.initTime = Date.now();\n    }; //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \n\n\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\n    Font.prototype.addChars = addChars;\n    Font.prototype.addFonts = addFonts;\n    Font.prototype.getCharData = getCharData;\n    Font.prototype.getFontByName = getFontByName;\n    Font.prototype.measureText = measureText;\n    Font.prototype.checkLoadedFonts = checkLoadedFonts;\n    Font.prototype.loaded = loaded;\n    return Font;\n  }();\n\n  var PropertyFactory = function () {\n    var initFrame = initialDefaultFrame;\n    var math_abs = Math.abs;\n\n    function interpolateValue(frameNum, caching) {\n      var offsetTime = this.offsetTime;\n      var newValue;\n\n      if (this.propType === 'multidimensional') {\n        newValue = createTypedArray('float32', this.pv.length);\n      }\n\n      var iterationIndex = caching.lastIndex;\n      var i = iterationIndex;\n      var len = this.keyframes.length - 1,\n          flag = true;\n      var keyData, nextKeyData;\n\n      while (flag) {\n        keyData = this.keyframes[i];\n        nextKeyData = this.keyframes[i + 1];\n\n        if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {\n          if (keyData.h) {\n            keyData = nextKeyData;\n          }\n\n          iterationIndex = 0;\n          break;\n        }\n\n        if (nextKeyData.t - offsetTime > frameNum) {\n          iterationIndex = i;\n          break;\n        }\n\n        if (i < len - 1) {\n          i += 1;\n        } else {\n          iterationIndex = 0;\n          flag = false;\n        }\n      }\n\n      var k, kLen, perc, jLen, j, fnc;\n      var nextKeyTime = nextKeyData.t - offsetTime;\n      var keyTime = keyData.t - offsetTime;\n\n      if (keyData.to) {\n        if (!keyData.bezierData) {\n          bez.buildBezierData(keyData);\n        }\n\n        var bezierData = keyData.bezierData;\n\n        if (frameNum >= nextKeyTime || frameNum < keyTime) {\n          var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\n          kLen = bezierData.points[ind].point.length;\n\n          for (k = 0; k < kLen; k += 1) {\n            newValue[k] = bezierData.points[ind].point[k];\n          } // caching._lastBezierData = null;\n\n        } else {\n          if (keyData.__fnct) {\n            fnc = keyData.__fnct;\n          } else {\n            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\n            keyData.__fnct = fnc;\n          }\n\n          perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n          var distanceInLine = bezierData.segmentLength * perc;\n          var segmentPerc;\n          var addedLength = caching.lastFrame < frameNum && caching._lastBezierData === bezierData ? caching._lastAddedLength : 0;\n          j = caching.lastFrame < frameNum && caching._lastBezierData === bezierData ? caching._lastPoint : 0;\n          flag = true;\n          jLen = bezierData.points.length;\n\n          while (flag) {\n            addedLength += bezierData.points[j].partialLength;\n\n            if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\n              kLen = bezierData.points[j].point.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k];\n              }\n\n              break;\n            } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\n              segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\n              kLen = bezierData.points[j].point.length;\n\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\n              }\n\n              break;\n            }\n\n            if (j < jLen - 1) {\n              j += 1;\n            } else {\n              flag = false;\n            }\n          }\n\n          caching._lastPoint = j;\n          caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\n          caching._lastBezierData = bezierData;\n        }\n      } else {\n        var outX, outY, inX, inY, keyValue;\n        len = keyData.s.length;\n\n        if (this.sh && keyData.h !== 1) {\n          if (frameNum >= nextKeyTime) {\n            newValue[0] = keyData.e[0];\n            newValue[1] = keyData.e[1];\n            newValue[2] = keyData.e[2];\n          } else if (frameNum <= keyTime) {\n            newValue[0] = keyData.s[0];\n            newValue[1] = keyData.s[1];\n            newValue[2] = keyData.s[2];\n          } else {\n            var quatStart = createQuaternion(keyData.s);\n            var quatEnd = createQuaternion(keyData.e);\n            var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\n            quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\n          }\n        } else {\n          for (i = 0; i < len; i += 1) {\n            if (keyData.h !== 1) {\n              if (frameNum >= nextKeyTime) {\n                perc = 1;\n              } else if (frameNum < keyTime) {\n                perc = 0;\n              } else {\n                if (keyData.o.x.constructor === Array) {\n                  if (!keyData.__fnct) {\n                    keyData.__fnct = [];\n                  }\n\n                  if (!keyData.__fnct[i]) {\n                    outX = typeof keyData.o.x[i] === undefined ? keyData.o.x[0] : keyData.o.x[i];\n                    outY = typeof keyData.o.y[i] === undefined ? keyData.o.y[0] : keyData.o.y[i];\n                    inX = typeof keyData.i.x[i] === undefined ? keyData.i.x[0] : keyData.i.x[i];\n                    inY = typeof keyData.i.y[i] === undefined ? keyData.i.y[0] : keyData.i.y[i];\n                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                    keyData.__fnct[i] = fnc;\n                  } else {\n                    fnc = keyData.__fnct[i];\n                  }\n                } else {\n                  if (!keyData.__fnct) {\n                    outX = keyData.o.x;\n                    outY = keyData.o.y;\n                    inX = keyData.i.x;\n                    inY = keyData.i.y;\n                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                    keyData.__fnct = fnc;\n                  } else {\n                    fnc = keyData.__fnct;\n                  }\n                }\n\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n              }\n            }\n\n            keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (keyData.e[i] - keyData.s[i]) * perc;\n\n            if (len === 1) {\n              newValue = keyValue;\n            } else {\n              newValue[i] = keyValue;\n            }\n          }\n        }\n      }\n\n      caching.lastIndex = iterationIndex;\n      return newValue;\n    } //based on @Toji's https://github.com/toji/gl-matrix/\n\n\n    function slerp(a, b, t) {\n      var out = [];\n      var ax = a[0],\n          ay = a[1],\n          az = a[2],\n          aw = a[3],\n          bx = b[0],\n          by = b[1],\n          bz = b[2],\n          bw = b[3];\n      var omega, cosom, sinom, scale0, scale1;\n      cosom = ax * bx + ay * by + az * bz + aw * bw;\n\n      if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n      }\n\n      if (1.0 - cosom > 0.000001) {\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n      } else {\n        scale0 = 1.0 - t;\n        scale1 = t;\n      }\n\n      out[0] = scale0 * ax + scale1 * bx;\n      out[1] = scale0 * ay + scale1 * by;\n      out[2] = scale0 * az + scale1 * bz;\n      out[3] = scale0 * aw + scale1 * bw;\n      return out;\n    }\n\n    function quaternionToEuler(out, quat) {\n      var qx = quat[0];\n      var qy = quat[1];\n      var qz = quat[2];\n      var qw = quat[3];\n      var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);\n      var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);\n      var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);\n      out[0] = heading / degToRads;\n      out[1] = attitude / degToRads;\n      out[2] = bank / degToRads;\n    }\n\n    function createQuaternion(values) {\n      var heading = values[0] * degToRads;\n      var attitude = values[1] * degToRads;\n      var bank = values[2] * degToRads;\n      var c1 = Math.cos(heading / 2);\n      var c2 = Math.cos(attitude / 2);\n      var c3 = Math.cos(bank / 2);\n      var s1 = Math.sin(heading / 2);\n      var s2 = Math.sin(attitude / 2);\n      var s3 = Math.sin(bank / 2);\n      var w = c1 * c2 * c3 - s1 * s2 * s3;\n      var x = s1 * s2 * c3 + c1 * c2 * s3;\n      var y = s1 * c2 * c3 + c1 * s2 * s3;\n      var z = c1 * s2 * c3 - s1 * c2 * s3;\n      return [x, y, z, w];\n    }\n\n    function getValueAtCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n\n      if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {\n        if (this._caching.lastFrame >= frameNum) {\n          this._caching._lastBezierData = null;\n          this._caching.lastIndex = 0;\n        }\n\n        var renderResult = this.interpolateValue(frameNum, this._caching);\n        this.pv = renderResult;\n      }\n\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n\n    function setVValue(val) {\n      var multipliedValue;\n\n      if (this.propType === 'unidimensional') {\n        multipliedValue = val * this.mult;\n\n        if (math_abs(this.v - multipliedValue) > 0.00001) {\n          this.v = multipliedValue;\n          this._mdf = true;\n        }\n      } else {\n        var i = 0,\n            len = this.v.length;\n\n        while (i < len) {\n          multipliedValue = val[i] * this.mult;\n\n          if (math_abs(this.v[i] - multipliedValue) > 0.00001) {\n            this.v[i] = multipliedValue;\n            this._mdf = true;\n          }\n\n          i += 1;\n        }\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\n        return;\n      }\n\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n\n      this.lock = true;\n      this._mdf = this._isFirstFrame;\n      var multipliedValue;\n      var i,\n          len = this.effectsSequence.length;\n      var finalValue = this.kf ? this.pv : this.data.k;\n\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n\n      this.setVValue(finalValue);\n      this._isFirstFrame = false;\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n\n    function ValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional';\n      this.mult = mult || 1;\n      this.data = data;\n      this.v = mult ? data.k * mult : data.k;\n      this.pv = data.k;\n      this._mdf = false;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.k = false;\n      this.kf = false;\n      this.vel = 0;\n      this.effectsSequence = [];\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n\n    function MultiDimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional';\n      this.mult = mult || 1;\n      this.data = data;\n      this._mdf = false;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.k = false;\n      this.kf = false;\n      this.frameId = -1;\n      var i,\n          len = data.k.length;\n      this.v = createTypedArray('float32', len);\n      this.pv = createTypedArray('float32', len);\n      var arr = createTypedArray('float32', len);\n      this.vel = createTypedArray('float32', len);\n\n      for (i = 0; i < len; i += 1) {\n        this.v[i] = data.k[i] * this.mult;\n        this.pv[i] = data.k[i];\n      }\n\n      this._isFirstFrame = true;\n      this.effectsSequence = [];\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n\n    function KeyframedValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional';\n      this.keyframes = data.k;\n      this.offsetTime = elem.data.st;\n      this.frameId = -1;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: 0,\n        _lastBezierData: null\n      };\n      this.k = true;\n      this.kf = true;\n      this.data = data;\n      this.mult = mult || 1;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.v = initFrame;\n      this.pv = initFrame;\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.addEffect = addEffect;\n    }\n\n    function KeyframedMultidimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional';\n      var i,\n          len = data.k.length;\n      var s, e, to, ti;\n\n      for (i = 0; i < len - 1; i += 1) {\n        if (data.k[i].to && data.k[i].s && data.k[i].e) {\n          s = data.k[i].s;\n          e = data.k[i].e;\n          to = data.k[i].to;\n          ti = data.k[i].ti;\n\n          if (s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1]) || s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2])) {\n            data.k[i].to = null;\n            data.k[i].ti = null;\n          }\n\n          if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\n            if (s.length === 2 || s[2] === e[2] && to[2] === 0 && ti[2] === 0) {\n              data.k[i].to = null;\n              data.k[i].ti = null;\n            }\n          }\n        }\n      }\n\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.keyframes = data.k;\n      this.offsetTime = elem.data.st;\n      this.k = true;\n      this.kf = true;\n      this._isFirstFrame = true;\n      this.mult = mult || 1;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.frameId = -1;\n      var arrLen = data.k[0].s.length;\n      this.v = createTypedArray('float32', arrLen);\n      this.pv = createTypedArray('float32', arrLen);\n\n      for (i = 0; i < arrLen; i += 1) {\n        this.v[i] = initFrame;\n        this.pv[i] = initFrame;\n      }\n\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: createTypedArray('float32', arrLen)\n      };\n      this.addEffect = addEffect;\n    }\n\n    function getProp(elem, data, type, mult, container) {\n      var p;\n\n      if (data.a === 0) {\n        if (type === 0) {\n          p = new ValueProperty(elem, data, mult, container);\n        } else {\n          p = new MultiDimensionalProperty(elem, data, mult, container);\n        }\n      } else if (data.a === 1) {\n        if (type === 0) {\n          p = new KeyframedValueProperty(elem, data, mult, container);\n        } else {\n          p = new KeyframedMultidimensionalProperty(elem, data, mult, container);\n        }\n      } else if (!data.k.length) {\n        p = new ValueProperty(elem, data, mult, container);\n      } else if (typeof data.k[0] === 'number') {\n        p = new MultiDimensionalProperty(elem, data, mult, container);\n      } else {\n        switch (type) {\n          case 0:\n            p = new KeyframedValueProperty(elem, data, mult, container);\n            break;\n\n          case 1:\n            p = new KeyframedMultidimensionalProperty(elem, data, mult, container);\n            break;\n        }\n      }\n\n      if (p.effectsSequence.length) {\n        container.addDynamicProperty(p);\n      }\n\n      return p;\n    }\n\n    var ob = {\n      getProp: getProp\n    };\n    return ob;\n  }();\n\n  var TransformPropertyFactory = function () {\n    function applyToMatrix(mat) {\n      var _mdf = this._mdf;\n      this.iterateDynamicProperties();\n      this._mdf = this._mdf || _mdf;\n\n      if (this.a) {\n        mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n      }\n\n      if (this.s) {\n        mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n      }\n\n      if (this.sk) {\n        mat.skewFromAxis(-this.sk.v, this.sa.v);\n      }\n\n      if (this.r) {\n        mat.rotate(-this.r.v);\n      } else {\n        mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n      }\n\n      if (this.data.p.s) {\n        if (this.data.p.z) {\n          mat.translate(this.px.v, this.py.v, -this.pz.v);\n        } else {\n          mat.translate(this.px.v, this.py.v, 0);\n        }\n      } else {\n        mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n      }\n    }\n\n    function processKeys(forceRender) {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n\n      if (this._isDirty) {\n        this.precalculateMatrix();\n        this._isDirty = false;\n      }\n\n      this.iterateDynamicProperties();\n\n      if (this._mdf || forceRender) {\n        this.v.cloneFromProps(this.pre.props);\n\n        if (this.appliedTransformations < 1) {\n          this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        }\n\n        if (this.appliedTransformations < 2) {\n          this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        }\n\n        if (this.sk && this.appliedTransformations < 3) {\n          this.v.skewFromAxis(-this.sk.v, this.sa.v);\n        }\n\n        if (this.r && this.appliedTransformations < 4) {\n          this.v.rotate(-this.r.v);\n        } else if (!this.r && this.appliedTransformations < 4) {\n          this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        }\n\n        if (this.autoOriented) {\n          var v1,\n              v2,\n              frameRate = this.elem.globalData.frameRate;\n\n          if (this.p && this.p.keyframes && this.p.getValueAtTime) {\n            if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\n              v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);\n              v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\n            } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\n              v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0);\n              v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / frameRate, 0);\n            } else {\n              v1 = this.p.pv;\n              v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\n            }\n          } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\n            v1 = [];\n            v2 = [];\n            var px = this.px,\n                py = this.py,\n                frameRate;\n\n            if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {\n              v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);\n              v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);\n              v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0);\n              v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0);\n            } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\n              v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0);\n              v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0);\n              v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);\n              v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);\n            } else {\n              v1 = [px.pv, py.pv];\n              v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);\n              v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);\n            }\n          }\n\n          this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\n        }\n\n        if (this.data.p.s) {\n          if (this.data.p.z) {\n            this.v.translate(this.px.v, this.py.v, -this.pz.v);\n          } else {\n            this.v.translate(this.px.v, this.py.v, 0);\n          }\n        } else {\n          this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n        }\n      }\n\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    function precalculateMatrix() {\n      if (!this.a.k) {\n        this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        this.appliedTransformations = 1;\n      } else {\n        return;\n      }\n\n      if (!this.s.effectsSequence.length) {\n        this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        this.appliedTransformations = 2;\n      } else {\n        return;\n      }\n\n      if (this.sk) {\n        if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\n          this.pre.skewFromAxis(-this.sk.v, this.sa.v);\n          this.appliedTransformations = 3;\n        } else {\n          return;\n        }\n      }\n\n      if (this.r) {\n        if (!this.r.effectsSequence.length) {\n          this.pre.rotate(-this.r.v);\n          this.appliedTransformations = 4;\n        } else {\n          return;\n        }\n      } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\n        this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        this.appliedTransformations = 4;\n      }\n    }\n\n    function autoOrient() {//\n      //var prevP = this.getValueAtTime();\n    }\n\n    function addDynamicProperty(prop) {\n      this._addDynamicProperty(prop);\n\n      this.elem.addDynamicProperty(prop);\n      this._isDirty = true;\n    }\n\n    function TransformProperty(elem, data, container) {\n      this.elem = elem;\n      this.frameId = -1;\n      this.propType = 'transform';\n      this.data = data;\n      this.v = new Matrix(); //Precalculated matrix with non animated properties\n\n      this.pre = new Matrix();\n      this.appliedTransformations = 0;\n      this.initDynamicPropertyContainer(container || elem);\n\n      if (data.p.s) {\n        this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this);\n        this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this);\n\n        if (data.p.z) {\n          this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this);\n        }\n      } else {\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n      }\n\n      if (data.r) {\n        this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\n      } else if (data.rx) {\n        this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\n        this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\n        this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\n\n        if (data.or.k[0].ti) {\n          var i,\n              len = data.or.k.length;\n\n          for (i = 0; i < len; i += 1) {\n            data.or.k[i].to = data.or.k[i].ti = null;\n          }\n        }\n\n        this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this); //sh Indicates it needs to be capped between -180 and 180\n\n        this.or.sh = true;\n      }\n\n      if (data.sk) {\n        this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\n        this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\n      }\n\n      if (data.a) {\n        this.a = PropertyFactory.getProp(elem, data.a, 1, 0, this);\n      }\n\n      if (data.s) {\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0.01, this);\n      } // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\n\n\n      if (data.o) {\n        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem);\n      } else {\n        this.o = {\n          _mdf: false,\n          v: 1\n        };\n      }\n\n      this._isDirty = true;\n\n      if (!this.dynamicProperties.length) {\n        this.getValue(true);\n      }\n    }\n\n    TransformProperty.prototype = {\n      applyToMatrix: applyToMatrix,\n      getValue: processKeys,\n      precalculateMatrix: precalculateMatrix,\n      autoOrient: autoOrient\n    };\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\n\n    function getTransformProperty(elem, data, container) {\n      return new TransformProperty(elem, data, container);\n    }\n\n    return {\n      getTransformProperty: getTransformProperty\n    };\n  }();\n\n  function ShapePath() {\n    this.c = false;\n    this._length = 0;\n    this._maxLength = 8;\n    this.v = createSizedArray(this._maxLength);\n    this.o = createSizedArray(this._maxLength);\n    this.i = createSizedArray(this._maxLength);\n  }\n\n  ShapePath.prototype.setPathData = function (closed, len) {\n    this.c = closed;\n    this.setLength(len);\n    var i = 0;\n\n    while (i < len) {\n      this.v[i] = point_pool.newElement();\n      this.o[i] = point_pool.newElement();\n      this.i[i] = point_pool.newElement();\n      i += 1;\n    }\n  };\n\n  ShapePath.prototype.setLength = function (len) {\n    while (this._maxLength < len) {\n      this.doubleArrayLength();\n    }\n\n    this._length = len;\n  };\n\n  ShapePath.prototype.doubleArrayLength = function () {\n    this.v = this.v.concat(createSizedArray(this._maxLength));\n    this.i = this.i.concat(createSizedArray(this._maxLength));\n    this.o = this.o.concat(createSizedArray(this._maxLength));\n    this._maxLength *= 2;\n  };\n\n  ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\n    var arr;\n    this._length = Math.max(this._length, pos + 1);\n\n    if (this._length >= this._maxLength) {\n      this.doubleArrayLength();\n    }\n\n    switch (type) {\n      case 'v':\n        arr = this.v;\n        break;\n\n      case 'i':\n        arr = this.i;\n        break;\n\n      case 'o':\n        arr = this.o;\n        break;\n    }\n\n    if (!arr[pos] || arr[pos] && !replace) {\n      arr[pos] = point_pool.newElement();\n    }\n\n    arr[pos][0] = x;\n    arr[pos][1] = y;\n  };\n\n  ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\n    this.setXYAt(vX, vY, 'v', pos, replace);\n    this.setXYAt(oX, oY, 'o', pos, replace);\n    this.setXYAt(iX, iY, 'i', pos, replace);\n  };\n\n  ShapePath.prototype.reverse = function () {\n    var newPath = new ShapePath();\n    newPath.setPathData(this.c, this._length);\n    var vertices = this.v,\n        outPoints = this.o,\n        inPoints = this.i;\n    var init = 0;\n\n    if (this.c) {\n      newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\n      init = 1;\n    }\n\n    var cnt = this._length - 1;\n    var len = this._length;\n    var i;\n\n    for (i = init; i < len; i += 1) {\n      newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\n      cnt -= 1;\n    }\n\n    return newPath;\n  };\n\n  var ShapePropertyFactory = function () {\n    var initFrame = -999999;\n\n    function interpolateShape(frameNum, previousValue, caching) {\n      var iterationIndex = caching.lastIndex;\n      var keyPropS, keyPropE, isHold, j, k, jLen, kLen, perc, vertexValue;\n      var kf = this.keyframes;\n\n      if (frameNum < kf[0].t - this.offsetTime) {\n        keyPropS = kf[0].s[0];\n        isHold = true;\n        iterationIndex = 0;\n      } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {\n        if (kf[kf.length - 2].h === 1) {\n          keyPropS = kf[kf.length - 1].s[0];\n        } else {\n          keyPropS = kf[kf.length - 2].e[0];\n        }\n\n        isHold = true;\n      } else {\n        var i = iterationIndex;\n        var len = kf.length - 1,\n            flag = true,\n            keyData,\n            nextKeyData;\n\n        while (flag) {\n          keyData = kf[i];\n          nextKeyData = kf[i + 1];\n\n          if (nextKeyData.t - this.offsetTime > frameNum) {\n            break;\n          }\n\n          if (i < len - 1) {\n            i += 1;\n          } else {\n            flag = false;\n          }\n        }\n\n        isHold = keyData.h === 1;\n        iterationIndex = i;\n\n        if (!isHold) {\n          if (frameNum >= nextKeyData.t - this.offsetTime) {\n            perc = 1;\n          } else if (frameNum < keyData.t - this.offsetTime) {\n            perc = 0;\n          } else {\n            var fnc;\n\n            if (keyData.__fnct) {\n              fnc = keyData.__fnct;\n            } else {\n              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;\n              keyData.__fnct = fnc;\n            }\n\n            perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));\n          }\n\n          keyPropE = keyData.e[0];\n        }\n\n        keyPropS = keyData.s[0];\n      }\n\n      jLen = previousValue._length;\n      kLen = keyPropS.i[0].length;\n      caching.lastIndex = iterationIndex;\n\n      for (j = 0; j < jLen; j += 1) {\n        for (k = 0; k < kLen; k += 1) {\n          vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;\n          previousValue.i[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;\n          previousValue.o[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;\n          previousValue.v[j][k] = vertexValue;\n        }\n      }\n    }\n\n    function interpolateShapeCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n      var lastFrame = this._caching.lastFrame;\n\n      if (!(lastFrame !== initFrame && (lastFrame < initTime && frameNum < initTime || lastFrame > endTime && frameNum > endTime))) {\n        ////\n        this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\n        this.interpolateShape(frameNum, this.pv, this._caching); ////\n      }\n\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n\n    function resetShape() {\n      this.paths = this.localShapeCollection;\n    }\n\n    function shapesEqual(shape1, shape2) {\n      if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\n        return false;\n      }\n\n      var i,\n          len = shape1._length;\n\n      for (i = 0; i < len; i += 1) {\n        if (shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function setVValue(newPath) {\n      if (!shapesEqual(this.v, newPath)) {\n        this.v = shape_pool.clone(newPath);\n        this.localShapeCollection.releaseShapes();\n        this.localShapeCollection.addShape(this.v);\n        this._mdf = true;\n        this.paths = this.localShapeCollection;\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\n        return;\n      }\n\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n\n      this.lock = true;\n      this._mdf = false;\n      var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;\n      var i,\n          len = this.effectsSequence.length;\n\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n\n      this.setVValue(finalValue);\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n\n    ;\n\n    function ShapeProperty(elem, data, type) {\n      this.propType = 'shape';\n      this.comp = elem.comp;\n      this.container = elem;\n      this.elem = elem;\n      this.data = data;\n      this.k = false;\n      this.kf = false;\n      this._mdf = false;\n      var pathData = type === 3 ? data.pt.k : data.ks.k;\n      this.v = shape_pool.clone(pathData);\n      this.pv = shape_pool.clone(this.v);\n      this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.reset = resetShape;\n      this.effectsSequence = [];\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\n    ShapeProperty.prototype.getValue = processEffectsSequence;\n    ShapeProperty.prototype.setVValue = setVValue;\n    ShapeProperty.prototype.addEffect = addEffect;\n\n    function KeyframedShapeProperty(elem, data, type) {\n      this.propType = 'shape';\n      this.comp = elem.comp;\n      this.elem = elem;\n      this.container = elem;\n      this.offsetTime = elem.data.st;\n      this.keyframes = type === 3 ? data.pt.k : data.ks.k;\n      this.k = true;\n      this.kf = true;\n      var i,\n          len = this.keyframes[0].s[0].i.length;\n      var jLen = this.keyframes[0].s[0].i[0].length;\n      this.v = shape_pool.newElement();\n      this.v.setPathData(this.keyframes[0].s[0].c, len);\n      this.pv = shape_pool.clone(this.v);\n      this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.lastFrame = initFrame;\n      this.reset = resetShape;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0\n      };\n      this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\n    }\n\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\n\n    var EllShapeProperty = function () {\n      var cPoint = roundCorner;\n\n      function EllShapeProperty(elem, data) {\n        /*this.v = {\r\n            v: createSizedArray(4),\r\n            i: createSizedArray(4),\r\n            o: createSizedArray(4),\r\n            c: true\r\n        };*/\n        this.v = shape_pool.newElement();\n        this.v.setPathData(true, 4);\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n        this.paths = this.localShapeCollection;\n        this.localShapeCollection.addShape(this.v);\n        this.d = data.d;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.initDynamicPropertyContainer(elem);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertEllToPath();\n        }\n      }\n\n      ;\n      EllShapeProperty.prototype = {\n        reset: resetShape,\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertEllToPath();\n          }\n        },\n        convertEllToPath: function convertEllToPath() {\n          var p0 = this.p.v[0],\n              p1 = this.p.v[1],\n              s0 = this.s.v[0] / 2,\n              s1 = this.s.v[1] / 2;\n\n          var _cw = this.d !== 3;\n\n          var _v = this.v;\n          _v.v[0][0] = p0;\n          _v.v[0][1] = p1 - s1;\n          _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.v[1][1] = p1;\n          _v.v[2][0] = p0;\n          _v.v[2][1] = p1 + s1;\n          _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.v[3][1] = p1;\n          _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.i[0][1] = p1 - s1;\n          _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.i[1][1] = p1 - s1 * cPoint;\n          _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.i[2][1] = p1 + s1;\n          _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.i[3][1] = p1 + s1 * cPoint;\n          _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.o[0][1] = p1 - s1;\n          _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.o[1][1] = p1 + s1 * cPoint;\n          _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.o[2][1] = p1 + s1;\n          _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.o[3][1] = p1 - s1 * cPoint;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], EllShapeProperty);\n      return EllShapeProperty;\n    }();\n\n    var StarShapeProperty = function () {\n      function StarShapeProperty(elem, data) {\n        this.v = shape_pool.newElement();\n        this.v.setPathData(true, 0);\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.data = data;\n        this.frameId = -1;\n        this.d = data.d;\n        this.initDynamicPropertyContainer(elem);\n\n        if (data.sy === 1) {\n          this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this);\n          this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this);\n          this.convertToPath = this.convertStarToPath;\n        } else {\n          this.convertToPath = this.convertPolygonToPath;\n        }\n\n        this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\n        this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this);\n        this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this);\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertToPath();\n        }\n      }\n\n      ;\n      StarShapeProperty.prototype = {\n        reset: resetShape,\n        getValue: function getValue() {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertToPath();\n          }\n        },\n        convertStarToPath: function convertStarToPath() {\n          var numPts = Math.floor(this.pt.v) * 2;\n          var angle = Math.PI * 2 / numPts;\n          /*this.v.v.length = numPts;\r\n          this.v.i.length = numPts;\r\n          this.v.o.length = numPts;*/\n\n          var longFlag = true;\n          var longRad = this.or.v;\n          var shortRad = this.ir.v;\n          var longRound = this.os.v;\n          var shortRound = this.is.v;\n          var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);\n          var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);\n          var i,\n              rad,\n              roundness,\n              perimSegment,\n              currentAng = -Math.PI / 2;\n          currentAng += this.r.v;\n          var dir = this.data.d === 3 ? -1 : 1;\n          this.v._length = 0;\n\n          for (i = 0; i < numPts; i += 1) {\n            rad = longFlag ? longRad : shortRad;\n            roundness = longFlag ? longRound : shortRound;\n            perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            /*this.v.v[i] = [x,y];\r\n            this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n            this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n            this.v._length = numPts;*/\n\n            longFlag = !longFlag;\n            currentAng += angle * dir;\n          }\n        },\n        convertPolygonToPath: function convertPolygonToPath() {\n          var numPts = Math.floor(this.pt.v);\n          var angle = Math.PI * 2 / numPts;\n          var rad = this.or.v;\n          var roundness = this.os.v;\n          var perimSegment = 2 * Math.PI * rad / (numPts * 4);\n          var i,\n              currentAng = -Math.PI / 2;\n          var dir = this.data.d === 3 ? -1 : 1;\n          currentAng += this.r.v;\n          this.v._length = 0;\n\n          for (i = 0; i < numPts; i += 1) {\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            currentAng += angle * dir;\n          }\n\n          this.paths.length = 0;\n          this.paths[0] = this.v;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], StarShapeProperty);\n      return StarShapeProperty;\n    }();\n\n    var RectShapeProperty = function () {\n      function RectShapeProperty(elem, data) {\n        this.v = shape_pool.newElement();\n        this.v.c = true;\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.d = data.d;\n        this.initDynamicPropertyContainer(elem);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this);\n\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertRectToPath();\n        }\n      }\n\n      ;\n      RectShapeProperty.prototype = {\n        convertRectToPath: function convertRectToPath() {\n          var p0 = this.p.v[0],\n              p1 = this.p.v[1],\n              v0 = this.s.v[0] / 2,\n              v1 = this.s.v[1] / 2;\n          var round = bm_min(v0, v1, this.r.v);\n          var cPoint = round * (1 - roundCorner);\n          this.v._length = 0;\n\n          if (this.d === 2 || this.d === 1) {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);\n\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);\n            }\n          } else {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);\n\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);\n            }\n          }\n        },\n        getValue: function getValue(frameNum) {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n\n          if (this._mdf) {\n            this.convertRectToPath();\n          }\n        },\n        reset: resetShape\n      };\n      extendPrototype([DynamicPropertyContainer], RectShapeProperty);\n      return RectShapeProperty;\n    }();\n\n    function getShapeProp(elem, data, type) {\n      var prop;\n\n      if (type === 3 || type === 4) {\n        var dataProp = type === 3 ? data.pt : data.ks;\n        var keys = dataProp.k;\n\n        if (dataProp.a === 1 || keys.length) {\n          prop = new KeyframedShapeProperty(elem, data, type);\n        } else {\n          prop = new ShapeProperty(elem, data, type);\n        }\n      } else if (type === 5) {\n        prop = new RectShapeProperty(elem, data);\n      } else if (type === 6) {\n        prop = new EllShapeProperty(elem, data);\n      } else if (type === 7) {\n        prop = new StarShapeProperty(elem, data);\n      }\n\n      if (prop.k) {\n        elem.addDynamicProperty(prop);\n      }\n\n      return prop;\n    }\n\n    function getConstructorFunction() {\n      return ShapeProperty;\n    }\n\n    function getKeyframedConstructorFunction() {\n      return KeyframedShapeProperty;\n    }\n\n    var ob = {};\n    ob.getShapeProp = getShapeProp;\n    ob.getConstructorFunction = getConstructorFunction;\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\n    return ob;\n  }();\n\n  var ShapeModifiers = function () {\n    var ob = {};\n    var modifiers = {};\n    ob.registerModifier = registerModifier;\n    ob.getModifier = getModifier;\n\n    function registerModifier(nm, factory) {\n      if (!modifiers[nm]) {\n        modifiers[nm] = factory;\n      }\n    }\n\n    function getModifier(nm, elem, data) {\n      return new modifiers[nm](elem, data);\n    }\n\n    return ob;\n  }();\n\n  function ShapeModifier() {}\n\n  ShapeModifier.prototype.initModifierProperties = function () {};\n\n  ShapeModifier.prototype.addShapeToModifier = function () {};\n\n  ShapeModifier.prototype.addShape = function (data) {\n    if (!this.closed) {\n      var shapeData = {\n        shape: data.sh,\n        data: data,\n        localShapeCollection: shapeCollection_pool.newShapeCollection()\n      };\n      this.shapes.push(shapeData);\n      this.addShapeToModifier(shapeData);\n\n      if (this._isAnimated) {\n        data.setAsAnimated();\n      }\n    }\n  };\n\n  ShapeModifier.prototype.init = function (elem, data) {\n    this.shapes = [];\n    this.elem = elem;\n    this.initDynamicPropertyContainer(elem);\n    this.initModifierProperties(elem, data);\n    this.frameId = initialDefaultFrame;\n    this.closed = false;\n    this.k = false;\n\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n\n  ShapeModifier.prototype.processKeys = function () {\n    if (this.elem.globalData.frameId === this.frameId) {\n      return;\n    }\n\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n\n  extendPrototype([DynamicPropertyContainer], ShapeModifier);\n\n  function TrimModifier() {}\n\n  extendPrototype([ShapeModifier], TrimModifier);\n\n  TrimModifier.prototype.initModifierProperties = function (elem, data) {\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\n    this.sValue = 0;\n    this.eValue = 0;\n    this.getValue = this.processKeys;\n    this.m = data.m;\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\n  };\n\n  TrimModifier.prototype.addShapeToModifier = function (shapeData) {\n    shapeData.pathsData = [];\n  };\n\n  TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\n    var segments = [];\n\n    if (e <= 1) {\n      segments.push({\n        s: s,\n        e: e\n      });\n    } else if (s >= 1) {\n      segments.push({\n        s: s - 1,\n        e: e - 1\n      });\n    } else {\n      segments.push({\n        s: s,\n        e: 1\n      });\n      segments.push({\n        s: 0,\n        e: e - 1\n      });\n    }\n\n    var shapeSegments = [];\n    var i,\n        len = segments.length,\n        segmentOb;\n\n    for (i = 0; i < len; i += 1) {\n      segmentOb = segments[i];\n\n      if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {} else {\n        var shapeS, shapeE;\n\n        if (segmentOb.s * totalModifierLength <= addedLength) {\n          shapeS = 0;\n        } else {\n          shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\n        }\n\n        if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\n          shapeE = 1;\n        } else {\n          shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;\n        }\n\n        shapeSegments.push([shapeS, shapeE]);\n      }\n    }\n\n    if (!shapeSegments.length) {\n      shapeSegments.push([0, 0]);\n    }\n\n    return shapeSegments;\n  };\n\n  TrimModifier.prototype.releasePathsData = function (pathsData) {\n    var i,\n        len = pathsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      segments_length_pool.release(pathsData[i]);\n    }\n\n    pathsData.length = 0;\n    return pathsData;\n  };\n\n  TrimModifier.prototype.processShapes = function (_isFirstFrame) {\n    var s, e;\n\n    if (this._mdf || _isFirstFrame) {\n      var o = this.o.v % 360 / 360;\n\n      if (o < 0) {\n        o += 1;\n      }\n\n      s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;\n      e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;\n\n      if (s === e) {}\n\n      if (s > e) {\n        var _s = s;\n        s = e;\n        e = _s;\n      }\n\n      s = Math.round(s * 10000) * 0.0001;\n      e = Math.round(e * 10000) * 0.0001;\n      this.sValue = s;\n      this.eValue = e;\n    } else {\n      s = this.sValue;\n      e = this.eValue;\n    }\n\n    var shapePaths;\n    var i,\n        len = this.shapes.length,\n        j,\n        jLen;\n    var pathsData,\n        pathData,\n        totalShapeLength,\n        totalModifierLength = 0;\n\n    if (e === s) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].localShapeCollection.releaseShapes();\n        this.shapes[i].shape._mdf = true;\n        this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\n      }\n    } else if (!(e === 1 && s === 0 || e === 0 && s === 1)) {\n      var segments = [],\n          shapeData,\n          localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]; // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\n\n        if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\n          shapeData.shape.paths = shapeData.localShapeCollection;\n        } else {\n          shapePaths = shapeData.shape.paths;\n          jLen = shapePaths._length;\n          totalShapeLength = 0;\n\n          if (!shapeData.shape._mdf && shapeData.pathsData.length) {\n            totalShapeLength = shapeData.totalShapeLength;\n          } else {\n            pathsData = this.releasePathsData(shapeData.pathsData);\n\n            for (j = 0; j < jLen; j += 1) {\n              pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\n              pathsData.push(pathData);\n              totalShapeLength += pathData.totalLength;\n            }\n\n            shapeData.totalShapeLength = totalShapeLength;\n            shapeData.pathsData = pathsData;\n          }\n\n          totalModifierLength += totalShapeLength;\n          shapeData.shape._mdf = true;\n        }\n      }\n\n      var shapeS = s,\n          shapeE = e,\n          addedLength = 0,\n          edges;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        shapeData = this.shapes[i];\n\n        if (shapeData.shape._mdf) {\n          localShapeCollection = shapeData.localShapeCollection;\n          localShapeCollection.releaseShapes(); //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\n\n          if (this.m === 2 && len > 1) {\n            edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\n            addedLength += shapeData.totalShapeLength;\n          } else {\n            edges = [[shapeS, shapeE]];\n          }\n\n          jLen = edges.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            shapeS = edges[j][0];\n            shapeE = edges[j][1];\n            segments.length = 0;\n\n            if (shapeE <= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength * shapeE\n              });\n            } else if (shapeS >= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * (shapeS - 1),\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            } else {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength\n              });\n              segments.push({\n                s: 0,\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            }\n\n            var newShapesData = this.addShapes(shapeData, segments[0]);\n\n            if (segments[0].s !== segments[0].e) {\n              if (segments.length > 1) {\n                var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\n\n                if (lastShapeInCollection.c) {\n                  var lastShape = newShapesData.pop();\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1], lastShape);\n                } else {\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1]);\n                }\n              }\n\n              this.addPaths(newShapesData, localShapeCollection);\n            }\n          }\n\n          shapeData.shape.paths = localShapeCollection;\n        }\n      }\n    } else if (this._mdf) {\n      for (i = 0; i < len; i += 1) {\n        //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\n        //Don't remove this even if it's losing cached info.\n        this.shapes[i].pathsData.length = 0;\n        this.shapes[i].shape._mdf = true;\n      }\n    }\n  };\n\n  TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\n    var i,\n        len = newPaths.length;\n\n    for (i = 0; i < len; i += 1) {\n      localShapeCollection.addShape(newPaths[i]);\n    }\n  };\n\n  TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\n\n    if (newShape) {\n      shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\n    }\n\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\n  };\n\n  TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\n\n    if (newShape) {\n      shapePath.setXYAt(points[0], points[4], 'v', pos);\n    }\n\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\n  };\n\n  TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\n    var pathsData = shapeData.pathsData;\n    var shapePaths = shapeData.shape.paths.shapes;\n    var i,\n        len = shapeData.shape.paths._length,\n        j,\n        jLen;\n    var addedLength = 0;\n    var currentLengthData, segmentCount;\n    var lengths;\n    var segment;\n    var shapes = [];\n    var initPos;\n    var newShape = true;\n\n    if (!shapePath) {\n      shapePath = shape_pool.newElement();\n      segmentCount = 0;\n      initPos = 0;\n    } else {\n      segmentCount = shapePath._length;\n      initPos = shapePath._length;\n    }\n\n    shapes.push(shapePath);\n\n    for (i = 0; i < len; i += 1) {\n      lengths = pathsData[i].lengths;\n      shapePath.c = shapePaths[i].c;\n      jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\n\n      for (j = 1; j < jLen; j += 1) {\n        currentLengthData = lengths[j - 1];\n\n        if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\n          addedLength += currentLengthData.addedLength;\n          shapePath.c = false;\n        } else if (addedLength > shapeSegment.e) {\n          shapePath.c = false;\n          break;\n        } else {\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape); // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n\n            newShape = false;\n            shapePath.c = false;\n          }\n\n          addedLength += currentLengthData.addedLength;\n          segmentCount += 1;\n        }\n      }\n\n      if (shapePaths[i].c && lengths.length) {\n        currentLengthData = lengths[j - 1];\n\n        if (addedLength <= shapeSegment.e) {\n          var segmentLength = lengths[j - 1].addedLength;\n\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape); // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n\n            newShape = false;\n            shapePath.c = false;\n          }\n        } else {\n          shapePath.c = false;\n        }\n\n        addedLength += currentLengthData.addedLength;\n        segmentCount += 1;\n      }\n\n      if (shapePath._length) {\n        shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\n        shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], 'o', shapePath._length - 1);\n      }\n\n      if (addedLength > shapeSegment.e) {\n        break;\n      }\n\n      if (i < len - 1) {\n        shapePath = shape_pool.newElement();\n        newShape = true;\n        shapes.push(shapePath);\n        segmentCount = 0;\n      }\n    }\n\n    return shapes;\n  };\n\n  ShapeModifiers.registerModifier('tm', TrimModifier);\n\n  function RoundCornersModifier() {}\n\n  extendPrototype([ShapeModifier], RoundCornersModifier);\n\n  RoundCornersModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this);\n    this._isAnimated = !!this.rd.effectsSequence.length;\n  };\n\n  RoundCornersModifier.prototype.processPath = function (path, round) {\n    var cloned_path = shape_pool.newElement();\n    cloned_path.c = path.c;\n    var i,\n        len = path._length;\n    var currentV,\n        currentI,\n        currentO,\n        closerV,\n        newV,\n        newO,\n        newI,\n        distance,\n        newPosPerc,\n        index = 0;\n    var vX, vY, oX, oY, iX, iY;\n\n    for (i = 0; i < len; i += 1) {\n      currentV = path.v[i];\n      currentO = path.o[i];\n      currentI = path.i[i];\n\n      if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {\n        if ((i === 0 || i === len - 1) && !path.c) {\n          cloned_path.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index);\n          /*cloned_path.v[index] = currentV;\r\n          cloned_path.o[index] = currentO;\r\n          cloned_path.i[index] = currentI;*/\n\n          index += 1;\n        } else {\n          if (i === 0) {\n            closerV = path.v[len - 1];\n          } else {\n            closerV = path.v[i - 1];\n          }\n\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          vX = iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vY = iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;\n          oX = vX - (vX - currentV[0]) * roundCorner;\n          oY = vY - (vY - currentV[1]) * roundCorner;\n          cloned_path.setTripleAt(vX, vY, oX, oY, iX, iY, index);\n          index += 1;\n\n          if (i === len - 1) {\n            closerV = path.v[0];\n          } else {\n            closerV = path.v[i + 1];\n          }\n\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          vX = oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vY = oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;\n          iX = vX - (vX - currentV[0]) * roundCorner;\n          iY = vY - (vY - currentV[1]) * roundCorner;\n          cloned_path.setTripleAt(vX, vY, oX, oY, iX, iY, index);\n          index += 1;\n        }\n      } else {\n        cloned_path.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index);\n        index += 1;\n      }\n    }\n\n    return cloned_path;\n  };\n\n  RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i,\n        len = this.shapes.length;\n    var j, jLen;\n    var rd = this.rd.v;\n\n    if (rd !== 0) {\n      var shapeData, newPaths, localShapeCollection;\n\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        newPaths = shapeData.shape.paths;\n        localShapeCollection = shapeData.localShapeCollection;\n\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], rd));\n          }\n        }\n\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n\n  ShapeModifiers.registerModifier('rd', RoundCornersModifier);\n\n  function RepeaterModifier() {}\n\n  extendPrototype([ShapeModifier], RepeaterModifier);\n\n  RepeaterModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.c = PropertyFactory.getProp(elem, data.c, 0, null, this);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, null, this);\n    this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this);\n    this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this);\n    this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this);\n    this.data = data;\n\n    if (!this.dynamicProperties.length) {\n      this.getValue(true);\n    }\n\n    this._isAnimated = !!this.dynamicProperties.length;\n    this.pMatrix = new Matrix();\n    this.rMatrix = new Matrix();\n    this.sMatrix = new Matrix();\n    this.tMatrix = new Matrix();\n    this.matrix = new Matrix();\n  };\n\n  RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {\n    var dir = inv ? -1 : 1;\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    rMatrix.rotate(-transform.r.v * dir * perc);\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n  };\n\n  RepeaterModifier.prototype.init = function (elem, arr, pos, elemsData) {\n    this.elem = elem;\n    this.arr = arr;\n    this.pos = pos;\n    this.elemsData = elemsData;\n    this._currentCopies = 0;\n    this._elements = [];\n    this._groups = [];\n    this.frameId = -1;\n    this.initDynamicPropertyContainer(elem);\n    this.initModifierProperties(elem, arr[pos]);\n    var cont = 0;\n\n    while (pos > 0) {\n      pos -= 1; //this._elements.unshift(arr.splice(pos,1)[0]);\n\n      this._elements.unshift(arr[pos]);\n\n      cont += 1;\n    }\n\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n\n  RepeaterModifier.prototype.resetElements = function (elements) {\n    var i,\n        len = elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      elements[i]._processed = false;\n\n      if (elements[i].ty === 'gr') {\n        this.resetElements(elements[i].it);\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.cloneElements = function (elements) {\n    var i,\n        len = elements.length;\n    var newElements = JSON.parse(JSON.stringify(elements));\n    this.resetElements(newElements);\n    return newElements;\n  };\n\n  RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\n    var i,\n        len = elements.length;\n\n    for (i = 0; i < len; i += 1) {\n      elements[i]._render = renderFlag;\n\n      if (elements[i].ty === 'gr') {\n        this.changeGroupRender(elements[i].it, renderFlag);\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {\n    var items, itemsTransform, i, dir, cont;\n\n    if (this._mdf || _isFirstFrame) {\n      var copies = Math.ceil(this.c.v);\n\n      if (this._groups.length < copies) {\n        while (this._groups.length < copies) {\n          var group = {\n            it: this.cloneElements(this._elements),\n            ty: 'gr'\n          };\n          group.it.push({\n            \"a\": {\n              \"a\": 0,\n              \"ix\": 1,\n              \"k\": [0, 0]\n            },\n            \"nm\": \"Transform\",\n            \"o\": {\n              \"a\": 0,\n              \"ix\": 7,\n              \"k\": 100\n            },\n            \"p\": {\n              \"a\": 0,\n              \"ix\": 2,\n              \"k\": [0, 0]\n            },\n            \"r\": {\n              \"a\": 1,\n              \"ix\": 6,\n              \"k\": [{\n                s: 0,\n                e: 0,\n                t: 0\n              }, {\n                s: 0,\n                e: 0,\n                t: 1\n              }]\n            },\n            \"s\": {\n              \"a\": 0,\n              \"ix\": 3,\n              \"k\": [100, 100]\n            },\n            \"sa\": {\n              \"a\": 0,\n              \"ix\": 5,\n              \"k\": 0\n            },\n            \"sk\": {\n              \"a\": 0,\n              \"ix\": 4,\n              \"k\": 0\n            },\n            \"ty\": \"tr\"\n          });\n          this.arr.splice(0, 0, group);\n\n          this._groups.splice(0, 0, group);\n\n          this._currentCopies += 1;\n        }\n\n        this.elem.reloadShapes();\n      }\n\n      cont = 0;\n      var renderFlag;\n\n      for (i = 0; i <= this._groups.length - 1; i += 1) {\n        renderFlag = cont < copies;\n        this._groups[i]._render = renderFlag;\n        this.changeGroupRender(this._groups[i].it, renderFlag);\n        cont += 1;\n      }\n\n      this._currentCopies = copies; ////\n\n      var offset = this.o.v;\n      var offsetModulo = offset % 1;\n      var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n      var k;\n      var tMat = this.tr.v.props;\n      var pProps = this.pMatrix.props;\n      var rProps = this.rMatrix.props;\n      var sProps = this.sMatrix.props;\n      this.pMatrix.reset();\n      this.rMatrix.reset();\n      this.sMatrix.reset();\n      this.tMatrix.reset();\n      this.matrix.reset();\n      var iteration = 0;\n\n      if (offset > 0) {\n        while (iteration < roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          iteration += 1;\n        }\n\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\n          iteration += offsetModulo;\n        }\n      } else if (offset < 0) {\n        while (iteration > roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\n          iteration -= 1;\n        }\n\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);\n          iteration -= offsetModulo;\n        }\n      }\n\n      i = this.data.m === 1 ? 0 : this._currentCopies - 1;\n      dir = this.data.m === 1 ? 1 : -1;\n      cont = this._currentCopies;\n      var j, jLen;\n\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        jLen = itemsTransform.length;\n        items[items.length - 1].transform.mProps._mdf = true;\n        items[items.length - 1].transform.op._mdf = true;\n        items[items.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\n\n        if (iteration !== 0) {\n          if (i !== 0 && dir === 1 || i !== this._currentCopies - 1 && dir === -1) {\n            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          }\n\n          this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);\n          this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);\n          this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n\n          this.matrix.reset();\n        } else {\n          this.matrix.reset();\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n        }\n\n        iteration += 1;\n        cont -= 1;\n        i += dir;\n      }\n    } else {\n      cont = this._currentCopies;\n      i = 0;\n      dir = 1;\n\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        items[items.length - 1].transform.mProps._mdf = false;\n        items[items.length - 1].transform.op._mdf = false;\n        cont -= 1;\n        i += dir;\n      }\n    }\n  };\n\n  RepeaterModifier.prototype.addShape = function () {};\n\n  ShapeModifiers.registerModifier('rp', RepeaterModifier);\n\n  function ShapeCollection() {\n    this._length = 0;\n    this._maxLength = 4;\n    this.shapes = createSizedArray(this._maxLength);\n  }\n\n  ShapeCollection.prototype.addShape = function (shapeData) {\n    if (this._length === this._maxLength) {\n      this.shapes = this.shapes.concat(createSizedArray(this._maxLength));\n      this._maxLength *= 2;\n    }\n\n    this.shapes[this._length] = shapeData;\n    this._length += 1;\n  };\n\n  ShapeCollection.prototype.releaseShapes = function () {\n    var i;\n\n    for (i = 0; i < this._length; i += 1) {\n      shape_pool.release(this.shapes[i]);\n    }\n\n    this._length = 0;\n  };\n\n  function DashProperty(elem, data, renderer, container) {\n    this.elem = elem;\n    this.frameId = -1;\n    this.dataProps = createSizedArray(data.length);\n    this.renderer = renderer;\n    this.k = false;\n    this.dashStr = '';\n    this.dashArray = createTypedArray('float32', data.length ? data.length - 1 : 0);\n    this.dashoffset = createTypedArray('float32', 1);\n    this.initDynamicPropertyContainer(container);\n    var i,\n        len = data.length || 0,\n        prop;\n\n    for (i = 0; i < len; i += 1) {\n      prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this);\n      this.k = prop.k || this.k;\n      this.dataProps[i] = {\n        n: data[i].n,\n        p: prop\n      };\n    }\n\n    if (!this.k) {\n      this.getValue(true);\n    }\n\n    this._isAnimated = this.k;\n  }\n\n  DashProperty.prototype.getValue = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return;\n    }\n\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n    this._mdf = this._mdf || forceRender;\n\n    if (this._mdf) {\n      var i = 0,\n          len = this.dataProps.length;\n\n      if (this.renderer === 'svg') {\n        this.dashStr = '';\n      }\n\n      for (i = 0; i < len; i += 1) {\n        if (this.dataProps[i].n != 'o') {\n          if (this.renderer === 'svg') {\n            this.dashStr += ' ' + this.dataProps[i].p.v;\n          } else {\n            this.dashArray[i] = this.dataProps[i].p.v;\n          }\n        } else {\n          this.dashoffset[0] = this.dataProps[i].p.v;\n        }\n      }\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], DashProperty);\n\n  function GradientProperty(elem, data, container) {\n    this.data = data;\n    this.c = createTypedArray('uint8c', data.p * 4);\n    var cLength = data.k.k[0].s ? data.k.k[0].s.length - data.p * 4 : data.k.k.length - data.p * 4;\n    this.o = createTypedArray('float32', cLength);\n    this._cmdf = false;\n    this._omdf = false;\n    this._collapsable = this.checkCollapsable();\n    this._hasOpacity = cLength;\n    this.initDynamicPropertyContainer(container);\n    this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this);\n    this.k = this.prop.k;\n    this.getValue(true);\n  }\n\n  GradientProperty.prototype.comparePoints = function (values, points) {\n    var i = 0,\n        len = this.o.length / 2,\n        diff;\n\n    while (i < len) {\n      diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);\n\n      if (diff > 0.01) {\n        return false;\n      }\n\n      i += 1;\n    }\n\n    return true;\n  };\n\n  GradientProperty.prototype.checkCollapsable = function () {\n    if (this.o.length / 2 !== this.c.length / 4) {\n      return false;\n    }\n\n    if (this.data.k.k[0].s) {\n      var i = 0,\n          len = this.data.k.k.length;\n\n      while (i < len) {\n        if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\n          return false;\n        }\n\n        i += 1;\n      }\n    } else if (!this.comparePoints(this.data.k.k, this.data.p)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  GradientProperty.prototype.getValue = function (forceRender) {\n    this.prop.getValue();\n    this._mdf = false;\n    this._cmdf = false;\n    this._omdf = false;\n\n    if (this.prop._mdf || forceRender) {\n      var i,\n          len = this.data.p * 4;\n      var mult, val;\n\n      for (i = 0; i < len; i += 1) {\n        mult = i % 4 === 0 ? 100 : 255;\n        val = Math.round(this.prop.v[i] * mult);\n\n        if (this.c[i] !== val) {\n          this.c[i] = val;\n          this._cmdf = !forceRender;\n        }\n      }\n\n      if (this.o.length) {\n        len = this.prop.v.length;\n\n        for (i = this.data.p * 4; i < len; i += 1) {\n          mult = i % 2 === 0 ? 100 : 1;\n          val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];\n\n          if (this.o[i - this.data.p * 4] !== val) {\n            this.o[i - this.data.p * 4] = val;\n            this._omdf = !forceRender;\n          }\n        }\n      }\n\n      this._mdf = !forceRender;\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], GradientProperty);\n\n  var buildShapeString = function buildShapeString(pathNodes, length, closed, mat) {\n    if (length === 0) {\n      return '';\n    }\n\n    var _o = pathNodes.o;\n    var _i = pathNodes.i;\n    var _v = pathNodes.v;\n    var i,\n        shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n\n    for (i = 1; i < length; i += 1) {\n      shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\n    }\n\n    if (closed && length) {\n      shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n      shapeString += 'z';\n    }\n\n    return shapeString;\n  };\n\n  var ImagePreloader = function () {\n    var proxyImage = function () {\n      var canvas = createTag('canvas');\n      canvas.width = 1;\n      canvas.height = 1;\n      var ctx = canvas.getContext('2d');\n      ctx.fillStyle = '#FF0000';\n      ctx.fillRect(0, 0, 1, 1);\n      return canvas;\n    }();\n\n    function imageLoaded() {\n      this.loadedAssets += 1;\n\n      if (this.loadedAssets === this.totalImages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n\n    function getAssetsPath(assetData, assetsPath, original_path) {\n      var path = '';\n\n      if (assetData.e) {\n        path = assetData.p;\n      } else if (assetsPath) {\n        var imagePath = assetData.p;\n\n        if (imagePath.indexOf('images/') !== -1) {\n          imagePath = imagePath.split('/')[1];\n        }\n\n        path = assetsPath + imagePath;\n      } else {\n        path = original_path;\n        path += assetData.u ? assetData.u : '';\n        path += assetData.p;\n      }\n\n      return path;\n    }\n\n    function createImageData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createTag('img');\n      img.crossOrigin = 'anonymous';\n      img.addEventListener('load', this._imageLoaded.bind(this), false);\n      img.addEventListener('error', function () {\n        ob.img = proxyImage;\n\n        this._imageLoaded();\n      }.bind(this), false);\n      img.src = path;\n      var ob = {\n        img: img,\n        assetData: assetData\n      };\n      return ob;\n    }\n\n    function loadAssets(assets, cb) {\n      this.imagesLoadedCb = cb;\n      var i,\n          len = assets.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (!assets[i].layers) {\n          this.totalImages += 1;\n          this.images.push(this._createImageData(assets[i]));\n        }\n      }\n    }\n\n    function setPath(path) {\n      this.path = path || '';\n    }\n\n    function setAssetsPath(path) {\n      this.assetsPath = path || '';\n    }\n\n    function getImage(assetData) {\n      var i = 0,\n          len = this.images.length;\n\n      while (i < len) {\n        if (this.images[i].assetData === assetData) {\n          return this.images[i].img;\n        }\n\n        i += 1;\n      }\n    }\n\n    function destroy() {\n      this.imagesLoadedCb = null;\n      this.images.length = 0;\n    }\n\n    function loaded() {\n      return this.totalImages === this.loadedAssets;\n    }\n\n    return function ImagePreloader() {\n      this.loadAssets = loadAssets;\n      this.setAssetsPath = setAssetsPath;\n      this.setPath = setPath;\n      this.loaded = loaded;\n      this.destroy = destroy;\n      this.getImage = getImage;\n      this._createImageData = createImageData;\n      this._imageLoaded = imageLoaded;\n      this.assetsPath = '';\n      this.path = '';\n      this.totalImages = 0;\n      this.loadedAssets = 0;\n      this.imagesLoadedCb = null;\n      this.images = [];\n    };\n  }();\n\n  var featureSupport = function () {\n    var ob = {\n      maskType: true\n    };\n\n    if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\n      ob.maskType = false;\n    }\n\n    return ob;\n  }();\n\n  var filtersFactory = function () {\n    var ob = {};\n    ob.createFilter = createFilter;\n    ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\n\n    function createFilter(filId) {\n      var fil = createNS('filter');\n      fil.setAttribute('id', filId);\n      fil.setAttribute('filterUnits', 'objectBoundingBox');\n      fil.setAttribute('x', '0%');\n      fil.setAttribute('y', '0%');\n      fil.setAttribute('width', '100%');\n      fil.setAttribute('height', '100%');\n      return fil;\n    }\n\n    function createAlphaToLuminanceFilter() {\n      var feColorMatrix = createNS('feColorMatrix');\n      feColorMatrix.setAttribute('type', 'matrix');\n      feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n      feColorMatrix.setAttribute('values', '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\n      return feColorMatrix;\n    }\n\n    return ob;\n  }();\n\n  var assetLoader = function () {\n    function formatResponse(xhr) {\n      if (xhr.response && typeof xhr.response === 'object') {\n        return xhr.response;\n      } else if (xhr.response && typeof xhr.response === 'string') {\n        return JSON.parse(xhr.response);\n      } else if (xhr.responseText) {\n        return JSON.parse(xhr.responseText);\n      }\n    }\n\n    function loadAsset(path, callback, errorCallback) {\n      var response;\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, true); // set responseType after calling open or IE will break.\n\n      xhr.responseType = \"json\";\n      xhr.send();\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n          if (xhr.status == 200) {\n            response = formatResponse(xhr);\n            callback(response);\n          } else {\n            try {\n              response = formatResponse(xhr);\n              callback(response);\n            } catch (err) {\n              if (errorCallback) {\n                errorCallback(err);\n              }\n            }\n          }\n        }\n      };\n    }\n\n    return {\n      load: loadAsset\n    };\n  }();\n\n  function TextAnimatorProperty(textData, renderType, elem) {\n    this._isFirstFrame = true;\n    this._hasMaskedPath = false;\n    this._frameId = -1;\n    this._textData = textData;\n    this._renderType = renderType;\n    this._elem = elem;\n    this._animatorsData = createSizedArray(this._textData.a.length);\n    this._pathData = {};\n    this._moreOptions = {\n      alignment: {}\n    };\n    this.renderedLetters = [];\n    this.lettersChangedFlag = false;\n    this.initDynamicPropertyContainer(elem);\n  }\n\n  TextAnimatorProperty.prototype.searchProperties = function () {\n    var i,\n        len = this._textData.a.length,\n        animatorProps;\n    var getProp = PropertyFactory.getProp;\n\n    for (i = 0; i < len; i += 1) {\n      animatorProps = this._textData.a[i];\n      this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\n    }\n\n    if (this._textData.p && 'm' in this._textData.p) {\n      this._pathData = {\n        f: getProp(this._elem, this._textData.p.f, 0, 0, this),\n        l: getProp(this._elem, this._textData.p.l, 0, 0, this),\n        r: this._textData.p.r,\n        m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\n      };\n      this._hasMaskedPath = true;\n    } else {\n      this._hasMaskedPath = false;\n    }\n\n    this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);\n  };\n\n  TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\n    this.lettersChangedFlag = lettersChangedFlag;\n\n    if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\n      return;\n    }\n\n    this._isFirstFrame = false;\n    var alignment = this._moreOptions.alignment.v;\n    var animators = this._animatorsData;\n    var textData = this._textData;\n    var matrixHelper = this.mHelper;\n    var renderType = this._renderType;\n    var renderedLettersCount = this.renderedLetters.length;\n    var data = this.data;\n    var xPos, yPos;\n    var i, len;\n    var letters = documentData.l,\n        pathInfo,\n        currentLength,\n        currentPoint,\n        segmentLength,\n        flag,\n        pointInd,\n        segmentInd,\n        prevPoint,\n        points,\n        segments,\n        partialLength,\n        totalLength,\n        perc,\n        tanAngle,\n        mask;\n\n    if (this._hasMaskedPath) {\n      mask = this._pathData.m;\n\n      if (!this._pathData.n || this._pathData._mdf) {\n        var paths = mask.v;\n\n        if (this._pathData.r) {\n          paths = paths.reverse();\n        } // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\n\n\n        pathInfo = {\n          tLength: 0,\n          segments: []\n        };\n        len = paths._length - 1;\n        var pathData;\n        totalLength = 0;\n\n        for (i = 0; i < len; i += 1) {\n          pathData = {\n            s: paths.v[i],\n            e: paths.v[i + 1],\n            to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\n            ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\n          };\n          bez.buildBezierData(pathData);\n          pathInfo.tLength += pathData.bezierData.segmentLength;\n          pathInfo.segments.push(pathData);\n          totalLength += pathData.bezierData.segmentLength;\n        }\n\n        i = len;\n\n        if (mask.v.c) {\n          pathData = {\n            s: paths.v[i],\n            e: paths.v[0],\n            to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\n            ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\n          };\n          bez.buildBezierData(pathData);\n          pathInfo.tLength += pathData.bezierData.segmentLength;\n          pathInfo.segments.push(pathData);\n          totalLength += pathData.bezierData.segmentLength;\n        }\n\n        this._pathData.pi = pathInfo;\n      }\n\n      pathInfo = this._pathData.pi;\n      currentLength = this._pathData.f.v;\n      segmentInd = 0;\n      pointInd = 1;\n      segmentLength = 0;\n      flag = true;\n      segments = pathInfo.segments;\n\n      if (currentLength < 0 && mask.v.c) {\n        if (pathInfo.tLength < Math.abs(currentLength)) {\n          currentLength = -Math.abs(currentLength) % pathInfo.tLength;\n        }\n\n        segmentInd = segments.length - 1;\n        points = segments[segmentInd].bezierData.points;\n        pointInd = points.length - 1;\n\n        while (currentLength < 0) {\n          currentLength += points[pointInd].partialLength;\n          pointInd -= 1;\n\n          if (pointInd < 0) {\n            segmentInd -= 1;\n            points = segments[segmentInd].bezierData.points;\n            pointInd = points.length - 1;\n          }\n        }\n      }\n\n      points = segments[segmentInd].bezierData.points;\n      prevPoint = points[pointInd - 1];\n      currentPoint = points[pointInd];\n      partialLength = currentPoint.partialLength;\n    }\n\n    len = letters.length;\n    xPos = 0;\n    yPos = 0;\n    var yOff = documentData.finalSize * 1.2 * 0.714;\n    var firstLine = true;\n    var animatorProps, animatorSelector;\n    var j, jLen;\n    var letterValue;\n    jLen = animators.length;\n    var lastLetter;\n    var mult,\n        ind = -1,\n        offf,\n        xPathPos,\n        yPathPos;\n    var initPathPos = currentLength,\n        initSegmentInd = segmentInd,\n        initPointInd = pointInd,\n        currentLine = -1;\n    var elemOpacity;\n    var sc, sw, fc, k;\n    var lineLength = 0;\n    var letterSw,\n        letterSc,\n        letterFc,\n        letterM = '',\n        letterP = this.defaultPropsArray,\n        letterO; //\n\n    if (documentData.j === 2 || documentData.j === 1) {\n      var animatorJustifyOffset = 0;\n      var animatorFirstCharOffset = 0;\n      var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\n      var lastIndex = 0;\n      var isNewLine = true;\n\n      for (i = 0; i < len; i += 1) {\n        if (letters[i].n) {\n          if (animatorJustifyOffset) {\n            animatorJustifyOffset += animatorFirstCharOffset;\n          }\n\n          while (lastIndex < i) {\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n            lastIndex += 1;\n          }\n\n          animatorJustifyOffset = 0;\n          isNewLine = true;\n        } else {\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n\n            if (animatorProps.t.propType) {\n              if (isNewLine && documentData.j === 2) {\n                animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\n              }\n\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;\n              } else {\n                animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;\n              }\n            }\n          }\n\n          isNewLine = false;\n        }\n      }\n\n      if (animatorJustifyOffset) {\n        animatorJustifyOffset += animatorFirstCharOffset;\n      }\n\n      while (lastIndex < i) {\n        letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n        lastIndex += 1;\n      }\n    } //\n\n\n    for (i = 0; i < len; i += 1) {\n      matrixHelper.reset();\n      elemOpacity = 1;\n\n      if (letters[i].n) {\n        xPos = 0;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        currentLength = initPathPos;\n        firstLine = false;\n        lineLength = 0;\n\n        if (this._hasMaskedPath) {\n          segmentInd = initSegmentInd;\n          pointInd = initPointInd;\n          points = segments[segmentInd].bezierData.points;\n          prevPoint = points[pointInd - 1];\n          currentPoint = points[pointInd];\n          partialLength = currentPoint.partialLength;\n          segmentLength = 0;\n        }\n\n        letterO = letterSw = letterFc = letterM = '';\n        letterP = this.defaultPropsArray;\n      } else {\n        if (this._hasMaskedPath) {\n          if (currentLine !== letters[i].line) {\n            switch (documentData.j) {\n              case 1:\n                currentLength += totalLength - documentData.lineWidths[letters[i].line];\n                break;\n\n              case 2:\n                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;\n                break;\n            }\n\n            currentLine = letters[i].line;\n          }\n\n          if (ind !== letters[i].ind) {\n            if (letters[ind]) {\n              currentLength += letters[ind].extra;\n            }\n\n            currentLength += letters[i].an / 2;\n            ind = letters[i].ind;\n          }\n\n          currentLength += alignment[0] * letters[i].an / 200;\n          var animatorOffset = 0;\n\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n\n            if (animatorProps.p.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorOffset += animatorProps.p.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.p.v[0] * mult;\n              }\n            }\n\n            if (animatorProps.a.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n              if (mult.length) {\n                animatorOffset += animatorProps.a.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.a.v[0] * mult;\n              }\n            }\n          }\n\n          flag = true;\n\n          while (flag) {\n            if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\n              perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\n              xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\n              yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\n              matrixHelper.translate(-alignment[0] * letters[i].an / 200, -(alignment[1] * yOff / 100));\n              flag = false;\n            } else if (points) {\n              segmentLength += currentPoint.partialLength;\n              pointInd += 1;\n\n              if (pointInd >= points.length) {\n                pointInd = 0;\n                segmentInd += 1;\n\n                if (!segments[segmentInd]) {\n                  if (mask.v.c) {\n                    pointInd = 0;\n                    segmentInd = 0;\n                    points = segments[segmentInd].bezierData.points;\n                  } else {\n                    segmentLength -= currentPoint.partialLength;\n                    points = null;\n                  }\n                } else {\n                  points = segments[segmentInd].bezierData.points;\n                }\n              }\n\n              if (points) {\n                prevPoint = currentPoint;\n                currentPoint = points[pointInd];\n                partialLength = currentPoint.partialLength;\n              }\n            }\n          }\n\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0);\n        } else {\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0); // Grouping alignment\n\n          matrixHelper.translate(-alignment[0] * letters[i].an / 200, -alignment[1] * yOff / 100, 0);\n        }\n\n        lineLength += letters[i].l / 2;\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.t.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars); //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\n\n            if (xPos !== 0 || documentData.j !== 0) {\n              if (this._hasMaskedPath) {\n                if (mult.length) {\n                  currentLength += animatorProps.t.v * mult[0];\n                } else {\n                  currentLength += animatorProps.t.v * mult;\n                }\n              } else {\n                if (mult.length) {\n                  xPos += animatorProps.t.v * mult[0];\n                } else {\n                  xPos += animatorProps.t.v * mult;\n                }\n              }\n            }\n          }\n        }\n\n        lineLength += letters[i].l / 2;\n\n        if (documentData.strokeWidthAnim) {\n          sw = documentData.sw || 0;\n        }\n\n        if (documentData.strokeColorAnim) {\n          if (documentData.sc) {\n            sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\n          } else {\n            sc = [0, 0, 0];\n          }\n        }\n\n        if (documentData.fillColorAnim && documentData.fc) {\n          fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.a.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (mult.length) {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.s.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (mult.length) {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);\n            } else {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          animatorSelector = animators[j].s;\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n          if (animatorProps.sk.propType) {\n            if (mult.length) {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\n            } else {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\n            }\n          }\n\n          if (animatorProps.r.propType) {\n            if (mult.length) {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\n            } else {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult);\n            }\n          }\n\n          if (animatorProps.ry.propType) {\n            if (mult.length) {\n              matrixHelper.rotateY(animatorProps.ry.v * mult[1]);\n            } else {\n              matrixHelper.rotateY(animatorProps.ry.v * mult);\n            }\n          }\n\n          if (animatorProps.rx.propType) {\n            if (mult.length) {\n              matrixHelper.rotateX(animatorProps.rx.v * mult[0]);\n            } else {\n              matrixHelper.rotateX(animatorProps.rx.v * mult);\n            }\n          }\n\n          if (animatorProps.o.propType) {\n            if (mult.length) {\n              elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];\n            } else {\n              elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;\n            }\n          }\n\n          if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\n            if (mult.length) {\n              sw += animatorProps.sw.v * mult[0];\n            } else {\n              sw += animatorProps.sw.v * mult;\n            }\n          }\n\n          if (documentData.strokeColorAnim && animatorProps.sc.propType) {\n            for (k = 0; k < 3; k += 1) {\n              if (mult.length) {\n                sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k]) * mult[0];\n              } else {\n                sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k]) * mult;\n              }\n            }\n          }\n\n          if (documentData.fillColorAnim && documentData.fc) {\n            if (animatorProps.fc.propType) {\n              for (k = 0; k < 3; k += 1) {\n                if (mult.length) {\n                  fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k]) * mult[0];\n                } else {\n                  fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k]) * mult;\n                }\n              }\n            }\n\n            if (animatorProps.fh.propType) {\n              if (mult.length) {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);\n              } else {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult);\n              }\n            }\n\n            if (animatorProps.fs.propType) {\n              if (mult.length) {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);\n              } else {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);\n              }\n            }\n\n            if (animatorProps.fb.propType) {\n              if (mult.length) {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);\n              } else {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);\n              }\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n\n          if (animatorProps.p.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n\n            if (this._hasMaskedPath) {\n              if (mult.length) {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\n              } else {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n              }\n            } else {\n              if (mult.length) {\n                matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\n              } else {\n                matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n              }\n            }\n          }\n        }\n\n        if (documentData.strokeWidthAnim) {\n          letterSw = sw < 0 ? 0 : sw;\n        }\n\n        if (documentData.strokeColorAnim) {\n          letterSc = 'rgb(' + Math.round(sc[0] * 255) + ',' + Math.round(sc[1] * 255) + ',' + Math.round(sc[2] * 255) + ')';\n        }\n\n        if (documentData.fillColorAnim && documentData.fc) {\n          letterFc = 'rgb(' + Math.round(fc[0] * 255) + ',' + Math.round(fc[1] * 255) + ',' + Math.round(fc[2] * 255) + ')';\n        }\n\n        if (this._hasMaskedPath) {\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(0, alignment[1] * yOff / 100 + yPos, 0);\n\n          if (textData.p.p) {\n            tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\n            var rot = Math.atan(tanAngle) * 180 / Math.PI;\n\n            if (currentPoint.point[0] < prevPoint.point[0]) {\n              rot += 180;\n            }\n\n            matrixHelper.rotate(-rot * Math.PI / 180);\n          }\n\n          matrixHelper.translate(xPathPos, yPathPos, 0);\n          currentLength -= alignment[0] * letters[i].an / 200;\n\n          if (letters[i + 1] && ind !== letters[i + 1].ind) {\n            currentLength += letters[i].an / 2;\n            currentLength += documentData.tr / 1000 * documentData.finalSize;\n          }\n        } else {\n          matrixHelper.translate(xPos, yPos, 0);\n\n          if (documentData.ps) {\n            //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\n            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n          }\n\n          switch (documentData.j) {\n            case 1:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);\n              break;\n\n            case 2:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);\n              break;\n          }\n\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(offf, 0, 0);\n          matrixHelper.translate(alignment[0] * letters[i].an / 200, alignment[1] * yOff / 100, 0);\n          xPos += letters[i].l + documentData.tr / 1000 * documentData.finalSize;\n        }\n\n        if (renderType === 'html') {\n          letterM = matrixHelper.toCSS();\n        } else if (renderType === 'svg') {\n          letterM = matrixHelper.to2dCSS();\n        } else {\n          letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];\n        }\n\n        letterO = elemOpacity;\n      }\n\n      if (renderedLettersCount <= i) {\n        letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);\n        this.renderedLetters.push(letterValue);\n        renderedLettersCount += 1;\n        this.lettersChangedFlag = true;\n      } else {\n        letterValue = this.renderedLetters[i];\n        this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\n      }\n    }\n  };\n\n  TextAnimatorProperty.prototype.getValue = function () {\n    if (this._elem.globalData.frameId === this._frameId) {\n      return;\n    }\n\n    this._frameId = this._elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n\n  TextAnimatorProperty.prototype.mHelper = new Matrix();\n  TextAnimatorProperty.prototype.defaultPropsArray = [];\n  extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\n\n  function TextAnimatorDataProperty(elem, animatorProps, container) {\n    var defaultData = {\n      propType: false\n    };\n    var getProp = PropertyFactory.getProp;\n    var textAnimator_animatables = animatorProps.a;\n    this.a = {\n      r: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\n      rx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\n      ry: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\n      sk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\n      sa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\n      s: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\n      a: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\n      o: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\n      p: textAnimator_animatables.p ? getProp(elem, textAnimator_animatables.p, 1, 0, container) : defaultData,\n      sw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\n      sc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\n      fc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\n      fh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\n      fs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\n      fb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\n      t: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\n    };\n    this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container);\n    this.s.t = animatorProps.s.t;\n  }\n\n  function LetterProps(o, sw, sc, fc, m, p) {\n    this.o = o;\n    this.sw = sw;\n    this.sc = sc;\n    this.fc = fc;\n    this.m = m;\n    this.p = p;\n    this._mdf = {\n      o: true,\n      sw: !!sw,\n      sc: !!sc,\n      fc: !!fc,\n      m: true,\n      p: true\n    };\n  }\n\n  LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\n    this._mdf.o = false;\n    this._mdf.sw = false;\n    this._mdf.sc = false;\n    this._mdf.fc = false;\n    this._mdf.m = false;\n    this._mdf.p = false;\n    var updated = false;\n\n    if (this.o !== o) {\n      this.o = o;\n      this._mdf.o = true;\n      updated = true;\n    }\n\n    if (this.sw !== sw) {\n      this.sw = sw;\n      this._mdf.sw = true;\n      updated = true;\n    }\n\n    if (this.sc !== sc) {\n      this.sc = sc;\n      this._mdf.sc = true;\n      updated = true;\n    }\n\n    if (this.fc !== fc) {\n      this.fc = fc;\n      this._mdf.fc = true;\n      updated = true;\n    }\n\n    if (this.m !== m) {\n      this.m = m;\n      this._mdf.m = true;\n      updated = true;\n    }\n\n    if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\n      this.p = p;\n      this._mdf.p = true;\n      updated = true;\n    }\n\n    return updated;\n  };\n\n  function TextProperty(elem, data) {\n    this._frameId = initialDefaultFrame;\n    this.pv = '';\n    this.v = '';\n    this.kf = false;\n    this._isFirstFrame = true;\n    this._mdf = false;\n    this.data = data;\n    this.elem = elem;\n    this.comp = this.elem.comp;\n    this.keysIndex = 0;\n    this.canResize = false;\n    this.minimumFontSize = 1;\n    this.effectsSequence = [];\n    this.currentData = {\n      ascent: 0,\n      boxWidth: this.defaultBoxWidth,\n      f: '',\n      fStyle: '',\n      fWeight: '',\n      fc: '',\n      j: '',\n      justifyOffset: '',\n      l: [],\n      lh: 0,\n      lineWidths: [],\n      ls: '',\n      of: '',\n      s: '',\n      sc: '',\n      sw: 0,\n      t: 0,\n      tr: 0,\n      sz: 0,\n      ps: null,\n      fillColorAnim: false,\n      strokeColorAnim: false,\n      strokeWidthAnim: false,\n      yOffset: 0,\n      finalSize: 0,\n      finalText: [],\n      finalLineHeight: 0,\n      __complete: false\n    };\n    this.copyData(this.currentData, this.data.d.k[0].s);\n\n    if (!this.searchProperty()) {\n      this.completeTextData(this.currentData);\n    }\n  }\n\n  TextProperty.prototype.defaultBoxWidth = [0, 0];\n\n  TextProperty.prototype.copyData = function (obj, data) {\n    for (var s in data) {\n      if (data.hasOwnProperty(s)) {\n        obj[s] = data[s];\n      }\n    }\n\n    return obj;\n  };\n\n  TextProperty.prototype.setCurrentData = function (data) {\n    if (!data.__complete) {\n      this.completeTextData(data);\n    }\n\n    this.currentData = data;\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\n    this._mdf = true;\n  };\n\n  TextProperty.prototype.searchProperty = function () {\n    return this.searchKeyframes();\n  };\n\n  TextProperty.prototype.searchKeyframes = function () {\n    this.kf = this.data.d.k.length > 1;\n\n    if (this.kf) {\n      this.addEffect(this.getKeyframeValue.bind(this));\n    }\n\n    return this.kf;\n  };\n\n  TextProperty.prototype.addEffect = function (effectFunction) {\n    this.effectsSequence.push(effectFunction);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.getValue = function (_finalValue) {\n    if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\n      return;\n    }\n\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\n    var currentValue = this.currentData;\n    var currentIndex = this.keysIndex;\n\n    if (this.lock) {\n      this.setCurrentData(this.currentData);\n      return;\n    }\n\n    this.lock = true;\n    this._mdf = false;\n    var multipliedValue;\n    var i,\n        len = this.effectsSequence.length;\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\n\n    for (i = 0; i < len; i += 1) {\n      //Checking if index changed to prevent creating a new object every time the expression updates.\n      if (currentIndex !== this.keysIndex) {\n        finalValue = this.effectsSequence[i](finalValue, finalValue.t);\n      } else {\n        finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\n      }\n    }\n\n    if (currentValue !== finalValue) {\n      this.setCurrentData(finalValue);\n    }\n\n    this.pv = this.v = this.currentData;\n    this.lock = false;\n    this.frameId = this.elem.globalData.frameId;\n  };\n\n  TextProperty.prototype.getKeyframeValue = function () {\n    var textKeys = this.data.d.k,\n        textDocumentData;\n    var frameNum = this.elem.comp.renderedFrame;\n    var i = 0,\n        len = textKeys.length;\n\n    while (i <= len - 1) {\n      textDocumentData = textKeys[i].s;\n\n      if (i === len - 1 || textKeys[i + 1].t > frameNum) {\n        break;\n      }\n\n      i += 1;\n    }\n\n    if (this.keysIndex !== i) {\n      this.keysIndex = i;\n    }\n\n    return this.data.d.k[this.keysIndex].s;\n  };\n\n  TextProperty.prototype.buildFinalText = function (text) {\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\n    var charactersArray = [];\n    var i = 0,\n        len = text.length;\n\n    while (i < len) {\n      if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i);\n      } else {\n        charactersArray.push(text.charAt(i));\n      }\n\n      i += 1;\n    }\n\n    return charactersArray;\n  };\n\n  TextProperty.prototype.completeTextData = function (documentData) {\n    documentData.__complete = true;\n    var fontManager = this.elem.globalData.fontManager;\n    var data = this.data;\n    var letters = [];\n    var i, len;\n    var newLineFlag,\n        index = 0,\n        val;\n    var anchorGrouping = data.m.g;\n    var currentSize = 0,\n        currentPos = 0,\n        currentLine = 0,\n        lineWidths = [];\n    var lineWidth = 0;\n    var maxLineWidth = 0;\n    var j, jLen;\n    var fontData = fontManager.getFontByName(documentData.f);\n    var charData,\n        cLength = 0;\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\n    var fWeight = 'normal',\n        fStyle = 'normal';\n    len = styles.length;\n    var styleName;\n\n    for (i = 0; i < len; i += 1) {\n      styleName = styles[i].toLowerCase();\n\n      switch (styleName) {\n        case 'italic':\n          fStyle = 'italic';\n          break;\n\n        case 'bold':\n          fWeight = '700';\n          break;\n\n        case 'black':\n          fWeight = '900';\n          break;\n\n        case 'medium':\n          fWeight = '500';\n          break;\n\n        case 'regular':\n        case 'normal':\n          fWeight = '400';\n          break;\n\n        case 'light':\n        case 'thin':\n          fWeight = '200';\n          break;\n      }\n    }\n\n    documentData.fWeight = fontData.fWeight || fWeight;\n    documentData.fStyle = fStyle;\n    len = documentData.t.length;\n    documentData.finalSize = documentData.s;\n    documentData.finalText = this.buildFinalText(documentData.t);\n    documentData.finalLineHeight = documentData.lh;\n    var trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n    var charCode;\n\n    if (documentData.sz) {\n      var flag = true;\n      var boxWidth = documentData.sz[0];\n      var boxHeight = documentData.sz[1];\n      var currentHeight, finalText;\n\n      while (flag) {\n        finalText = this.buildFinalText(documentData.t);\n        currentHeight = 0;\n        lineWidth = 0;\n        len = finalText.length;\n        trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n        var lastSpaceIndex = -1;\n\n        for (i = 0; i < len; i += 1) {\n          charCode = finalText[i].charCodeAt(0);\n          newLineFlag = false;\n\n          if (finalText[i] === ' ') {\n            lastSpaceIndex = i;\n          } else if (charCode === 13 || charCode === 3) {\n            lineWidth = 0;\n            newLineFlag = true;\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n          }\n\n          if (fontManager.chars) {\n            charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\n            cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n          } else {\n            //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\n            cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\n          }\n\n          if (lineWidth + cLength > boxWidth && finalText[i] !== ' ') {\n            if (lastSpaceIndex === -1) {\n              len += 1;\n            } else {\n              i = lastSpaceIndex;\n            }\n\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n            finalText.splice(i, lastSpaceIndex === i ? 1 : 0, \"\\r\"); //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\n\n            lastSpaceIndex = -1;\n            lineWidth = 0;\n          } else {\n            lineWidth += cLength;\n            lineWidth += trackingOffset;\n          }\n        }\n\n        currentHeight += fontData.ascent * documentData.finalSize / 100;\n\n        if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\n          documentData.finalSize -= 1;\n          documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\n        } else {\n          documentData.finalText = finalText;\n          len = documentData.finalText.length;\n          flag = false;\n        }\n      }\n    }\n\n    lineWidth = -trackingOffset;\n    cLength = 0;\n    var uncollapsedSpaces = 0;\n    var currentChar;\n\n    for (i = 0; i < len; i += 1) {\n      newLineFlag = false;\n      currentChar = documentData.finalText[i];\n      charCode = currentChar.charCodeAt(0);\n\n      if (currentChar === ' ') {\n        val = \"\\xA0\";\n      } else if (charCode === 13 || charCode === 3) {\n        uncollapsedSpaces = 0;\n        lineWidths.push(lineWidth);\n        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n        lineWidth = -2 * trackingOffset;\n        val = '';\n        newLineFlag = true;\n        currentLine += 1;\n      } else {\n        val = documentData.finalText[i];\n      }\n\n      if (fontManager.chars) {\n        charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\n        cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n      } else {\n        //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\n        //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\n        cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\n      } //\n\n\n      if (currentChar === ' ') {\n        uncollapsedSpaces += cLength + trackingOffset;\n      } else {\n        lineWidth += cLength + trackingOffset + uncollapsedSpaces;\n        uncollapsedSpaces = 0;\n      }\n\n      letters.push({\n        l: cLength,\n        an: cLength,\n        add: currentSize,\n        n: newLineFlag,\n        anIndexes: [],\n        val: val,\n        line: currentLine,\n        animatorJustifyOffset: 0\n      });\n\n      if (anchorGrouping == 2) {\n        currentSize += cLength;\n\n        if (val === '' || val === \"\\xA0\" || i === len - 1) {\n          if (val === '' || val === \"\\xA0\") {\n            currentSize -= cLength;\n          }\n\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n\n          index += 1;\n          currentSize = 0;\n        }\n      } else if (anchorGrouping == 3) {\n        currentSize += cLength;\n\n        if (val === '' || i === len - 1) {\n          if (val === '') {\n            currentSize -= cLength;\n          }\n\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n\n          currentSize = 0;\n          index += 1;\n        }\n      } else {\n        letters[index].ind = index;\n        letters[index].extra = 0;\n        index += 1;\n      }\n    }\n\n    documentData.l = letters;\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n    lineWidths.push(lineWidth);\n\n    if (documentData.sz) {\n      documentData.boxWidth = documentData.sz[0];\n      documentData.justifyOffset = 0;\n    } else {\n      documentData.boxWidth = maxLineWidth;\n\n      switch (documentData.j) {\n        case 1:\n          documentData.justifyOffset = -documentData.boxWidth;\n          break;\n\n        case 2:\n          documentData.justifyOffset = -documentData.boxWidth / 2;\n          break;\n\n        default:\n          documentData.justifyOffset = 0;\n      }\n    }\n\n    documentData.lineWidths = lineWidths;\n    var animators = data.a,\n        animatorData,\n        letterData;\n    jLen = animators.length;\n    var based,\n        ind,\n        indexes = [];\n\n    for (j = 0; j < jLen; j += 1) {\n      animatorData = animators[j];\n\n      if (animatorData.a.sc) {\n        documentData.strokeColorAnim = true;\n      }\n\n      if (animatorData.a.sw) {\n        documentData.strokeWidthAnim = true;\n      }\n\n      if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\n        documentData.fillColorAnim = true;\n      }\n\n      ind = 0;\n      based = animatorData.s.b;\n\n      for (i = 0; i < len; i += 1) {\n        letterData = letters[i];\n        letterData.anIndexes[j] = ind;\n\n        if (based == 1 && letterData.val !== '' || based == 2 && letterData.val !== '' && letterData.val !== \"\\xA0\" || based == 3 && (letterData.n || letterData.val == \"\\xA0\" || i == len - 1) || based == 4 && (letterData.n || i == len - 1)) {\n          if (animatorData.s.rn === 1) {\n            indexes.push(ind);\n          }\n\n          ind += 1;\n        }\n      }\n\n      data.a[j].s.totalChars = ind;\n      var currentInd = -1,\n          newInd;\n\n      if (animatorData.s.rn === 1) {\n        for (i = 0; i < len; i += 1) {\n          letterData = letters[i];\n\n          if (currentInd != letterData.anIndexes[j]) {\n            currentInd = letterData.anIndexes[j];\n            newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];\n          }\n\n          letterData.anIndexes[j] = newInd;\n        }\n      }\n    }\n\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;\n    documentData.ls = documentData.ls || 0;\n    documentData.ascent = fontData.ascent * documentData.finalSize / 100;\n  };\n\n  TextProperty.prototype.updateDocumentData = function (newData, index) {\n    index = index === undefined ? this.keysIndex : index;\n    var dData = this.copyData({}, this.data.d.k[index].s);\n    dData = this.copyData(dData, newData);\n    this.data.d.k[index].s = dData;\n    this.recalculate(index);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.recalculate = function (index) {\n    var dData = this.data.d.k[index].s;\n    dData.__complete = false;\n    this.keysIndex = 0;\n    this._isFirstFrame = true;\n    this.getValue(dData);\n  };\n\n  TextProperty.prototype.canResizeFont = function (_canResize) {\n    this.canResize = _canResize;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n\n  TextProperty.prototype.setMinimumFontSize = function (_fontValue) {\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n\n  var TextSelectorProp = function () {\n    var max = Math.max;\n    var min = Math.min;\n    var floor = Math.floor;\n\n    function TextSelectorProp(elem, data) {\n      this._currentTextLength = -1;\n      this.k = false;\n      this.data = data;\n      this.elem = elem;\n      this.comp = elem.comp;\n      this.finalS = 0;\n      this.finalE = 0;\n      this.initDynamicPropertyContainer(elem);\n      this.s = PropertyFactory.getProp(elem, data.s || {\n        k: 0\n      }, 0, 0, this);\n\n      if ('e' in data) {\n        this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this);\n      } else {\n        this.e = {\n          v: 100\n        };\n      }\n\n      this.o = PropertyFactory.getProp(elem, data.o || {\n        k: 0\n      }, 0, 0, this);\n      this.xe = PropertyFactory.getProp(elem, data.xe || {\n        k: 0\n      }, 0, 0, this);\n      this.ne = PropertyFactory.getProp(elem, data.ne || {\n        k: 0\n      }, 0, 0, this);\n      this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this);\n\n      if (!this.dynamicProperties.length) {\n        this.getValue();\n      }\n    }\n\n    TextSelectorProp.prototype = {\n      getMult: function getMult(ind) {\n        if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\n          this.getValue();\n        } //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\n\n\n        var easer = BezierFactory.getBezierEasing(this.ne.v / 100, 0, 1 - this.xe.v / 100, 1).get;\n        var mult = 0;\n        var s = this.finalS;\n        var e = this.finalE;\n        var type = this.data.sh;\n\n        if (type == 2) {\n          if (e === s) {\n            mult = ind >= e ? 1 : 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n\n          mult = easer(mult);\n        } else if (type == 3) {\n          if (e === s) {\n            mult = ind >= e ? 0 : 1;\n          } else {\n            mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n\n          mult = easer(mult);\n        } else if (type == 4) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n\n            if (mult < 0.5) {\n              mult *= 2;\n            } else {\n              mult = 1 - 2 * (mult - 0.5);\n            }\n          }\n\n          mult = easer(mult);\n        } else if (type == 5) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            var tot = e - s;\n            /*ind += 0.5;\r\n            mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\n\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            var x = -tot / 2 + ind;\n            var a = tot / 2;\n            mult = Math.sqrt(1 - x * x / (a * a));\n          }\n\n          mult = easer(mult);\n        } else if (type == 6) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e - s))) / 2;\n            /*\r\n             ind = Math.min(Math.max(s,ind),e-1);\r\n             mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n             mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\n          }\n\n          mult = easer(mult);\n        } else {\n          if (ind >= floor(s)) {\n            if (ind - s < 0) {\n              mult = 1 - (s - ind);\n            } else {\n              mult = max(0, min(e - ind, 1));\n            }\n          }\n\n          mult = easer(mult);\n        }\n\n        return mult * this.a.v;\n      },\n      getValue: function getValue(newCharsFlag) {\n        this.iterateDynamicProperties();\n        this._mdf = newCharsFlag || this._mdf;\n        this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\n\n        if (newCharsFlag && this.data.r === 2) {\n          this.e.v = this._currentTextLength;\n        }\n\n        var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\n        var o = this.o.v / divisor;\n        var s = this.s.v / divisor + o;\n        var e = this.e.v / divisor + o;\n\n        if (s > e) {\n          var _s = s;\n          s = e;\n          e = _s;\n        }\n\n        this.finalS = s;\n        this.finalE = e;\n      }\n    };\n    extendPrototype([DynamicPropertyContainer], TextSelectorProp);\n\n    function getTextSelectorProp(elem, data, arr) {\n      return new TextSelectorProp(elem, data, arr);\n    }\n\n    return {\n      getTextSelectorProp: getTextSelectorProp\n    };\n  }();\n\n  var pool_factory = function () {\n    return function (initialLength, _create, _release, _clone) {\n      var _length = 0;\n      var _maxLength = initialLength;\n      var pool = createSizedArray(_maxLength);\n      var ob = {\n        newElement: newElement,\n        release: release\n      };\n\n      function newElement() {\n        var element;\n\n        if (_length) {\n          _length -= 1;\n          element = pool[_length];\n        } else {\n          element = _create();\n        }\n\n        return element;\n      }\n\n      function release(element) {\n        if (_length === _maxLength) {\n          pool = pooling.double(pool);\n          _maxLength = _maxLength * 2;\n        }\n\n        if (_release) {\n          _release(element);\n        }\n\n        pool[_length] = element;\n        _length += 1;\n      }\n\n      function clone() {\n        var clonedElement = newElement();\n        return _clone(clonedElement);\n      }\n\n      return ob;\n    };\n  }();\n\n  var pooling = function () {\n    function double(arr) {\n      return arr.concat(createSizedArray(arr.length));\n    }\n\n    return {\n      double: double\n    };\n  }();\n\n  var point_pool = function () {\n    function create() {\n      return createTypedArray('float32', 2);\n    }\n\n    return pool_factory(8, create);\n  }();\n\n  var shape_pool = function () {\n    function create() {\n      return new ShapePath();\n    }\n\n    function release(shapePath) {\n      var len = shapePath._length,\n          i;\n\n      for (i = 0; i < len; i += 1) {\n        point_pool.release(shapePath.v[i]);\n        point_pool.release(shapePath.i[i]);\n        point_pool.release(shapePath.o[i]);\n        shapePath.v[i] = null;\n        shapePath.i[i] = null;\n        shapePath.o[i] = null;\n      }\n\n      shapePath._length = 0;\n      shapePath.c = false;\n    }\n\n    function clone(shape) {\n      var cloned = factory.newElement();\n      var i,\n          len = shape._length === undefined ? shape.v.length : shape._length;\n      cloned.setLength(len);\n      cloned.c = shape.c;\n      var pt;\n\n      for (i = 0; i < len; i += 1) {\n        cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);\n      }\n\n      return cloned;\n    }\n\n    var factory = pool_factory(4, create, release);\n    factory.clone = clone;\n    return factory;\n  }();\n\n  var shapeCollection_pool = function () {\n    var ob = {\n      newShapeCollection: newShapeCollection,\n      release: release\n    };\n    var _length = 0;\n    var _maxLength = 4;\n    var pool = createSizedArray(_maxLength);\n\n    function newShapeCollection() {\n      var shapeCollection;\n\n      if (_length) {\n        _length -= 1;\n        shapeCollection = pool[_length];\n      } else {\n        shapeCollection = new ShapeCollection();\n      }\n\n      return shapeCollection;\n    }\n\n    function release(shapeCollection) {\n      var i,\n          len = shapeCollection._length;\n\n      for (i = 0; i < len; i += 1) {\n        shape_pool.release(shapeCollection.shapes[i]);\n      }\n\n      shapeCollection._length = 0;\n\n      if (_length === _maxLength) {\n        pool = pooling.double(pool);\n        _maxLength = _maxLength * 2;\n      }\n\n      pool[_length] = shapeCollection;\n      _length += 1;\n    }\n\n    return ob;\n  }();\n\n  var segments_length_pool = function () {\n    function create() {\n      return {\n        lengths: [],\n        totalLength: 0\n      };\n    }\n\n    function release(element) {\n      var i,\n          len = element.lengths.length;\n\n      for (i = 0; i < len; i += 1) {\n        bezier_length_pool.release(element.lengths[i]);\n      }\n\n      element.lengths.length = 0;\n    }\n\n    return pool_factory(8, create, release);\n  }();\n\n  var bezier_length_pool = function () {\n    function create() {\n      return {\n        addedLength: 0,\n        percents: createTypedArray('float32', defaultCurveSegments),\n        lengths: createTypedArray('float32', defaultCurveSegments)\n      };\n    }\n\n    return pool_factory(8, create);\n  }();\n\n  function BaseRenderer() {}\n\n  BaseRenderer.prototype.checkLayers = function (num) {\n    var i,\n        len = this.layers.length,\n        data;\n    this.completeLayers = true;\n\n    for (i = len - 1; i >= 0; i--) {\n      if (!this.elements[i]) {\n        data = this.layers[i];\n\n        if (data.ip - data.st <= num - this.layers[i].st && data.op - data.st > num - this.layers[i].st) {\n          this.buildItem(i);\n        }\n      }\n\n      this.completeLayers = this.elements[i] ? this.completeLayers : false;\n    }\n\n    this.checkPendingElements();\n  };\n\n  BaseRenderer.prototype.createItem = function (layer) {\n    switch (layer.ty) {\n      case 2:\n        return this.createImage(layer);\n\n      case 0:\n        return this.createComp(layer);\n\n      case 1:\n        return this.createSolid(layer);\n\n      case 3:\n        return this.createNull(layer);\n\n      case 4:\n        return this.createShape(layer);\n\n      case 5:\n        return this.createText(layer);\n\n      case 13:\n        return this.createCamera(layer);\n    }\n\n    return this.createNull(layer);\n  };\n\n  BaseRenderer.prototype.createCamera = function () {\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\n  };\n\n  BaseRenderer.prototype.buildAllItems = function () {\n    var i,\n        len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.buildItem(i);\n    }\n\n    this.checkPendingElements();\n  };\n\n  BaseRenderer.prototype.includeLayers = function (newLayers) {\n    this.completeLayers = false;\n    var i,\n        len = newLayers.length;\n    var j,\n        jLen = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      j = 0;\n\n      while (j < jLen) {\n        if (this.layers[j].id == newLayers[i].id) {\n          this.layers[j] = newLayers[i];\n          break;\n        }\n\n        j += 1;\n      }\n    }\n  };\n\n  BaseRenderer.prototype.setProjectInterface = function (pInterface) {\n    this.globalData.projectInterface = pInterface;\n  };\n\n  BaseRenderer.prototype.initItems = function () {\n    if (!this.globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n  };\n\n  BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\n    var elements = this.elements;\n    var layers = this.layers;\n    var i = 0,\n        len = layers.length;\n\n    while (i < len) {\n      if (layers[i].ind == parentName) {\n        if (!elements[i] || elements[i] === true) {\n          this.buildItem(i);\n          this.addPendingElement(element);\n        } else {\n          hierarchy.push(elements[i]);\n          elements[i].setAsParent();\n\n          if (layers[i].parent !== undefined) {\n            this.buildElementParenting(element, layers[i].parent, hierarchy);\n          } else {\n            element.setHierarchy(hierarchy);\n          }\n        }\n      }\n\n      i += 1;\n    }\n  };\n\n  BaseRenderer.prototype.addPendingElement = function (element) {\n    this.pendingElements.push(element);\n  };\n\n  BaseRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i,\n        len = assets.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i]);\n        comp.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {\n    this.globalData.fontManager = new FontManager();\n    this.globalData.fontManager.addChars(animData.chars);\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\n    this.globalData.frameId = 0;\n    this.globalData.frameRate = animData.fr;\n    this.globalData.nm = animData.nm;\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h\n    };\n  };\n\n  function SVGRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.svgElement = createNS('svg');\n    var defs = createNS('defs');\n    this.svgElement.appendChild(defs);\n    var maskElement = createNS('g');\n    this.svgElement.appendChild(maskElement);\n    this.layerElement = maskElement;\n    this.renderConfig = {\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      progressiveLoad: config && config.progressiveLoad || false,\n      hideOnTransparent: config && config.hideOnTransparent === false ? false : true,\n      viewBoxOnly: config && config.viewBoxOnly || false,\n      viewBoxSize: config && config.viewBoxSize || false,\n      className: config && config.className || ''\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      defs: defs,\n      renderConfig: this.renderConfig\n    };\n    this.elements = [];\n    this.pendingElements = [];\n    this.destroyed = false;\n    this.rendererType = 'svg';\n  }\n\n  extendPrototype([BaseRenderer], SVGRenderer);\n\n  SVGRenderer.prototype.createNull = function (data) {\n    return new NullElement(data, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createShape = function (data) {\n    return new SVGShapeElement(data, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createText = function (data) {\n    return new SVGTextElement(data, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createImage = function (data) {\n    return new IImageElement(data, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.createSolid = function (data) {\n    return new ISolidElement(data, this.globalData, this);\n  };\n\n  SVGRenderer.prototype.configAnimation = function (animData) {\n    this.svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n    if (this.renderConfig.viewBoxSize) {\n      this.svgElement.setAttribute('viewBox', this.renderConfig.viewBoxSize);\n    } else {\n      this.svgElement.setAttribute('viewBox', '0 0 ' + animData.w + ' ' + animData.h);\n    }\n\n    if (!this.renderConfig.viewBoxOnly) {\n      this.svgElement.setAttribute('width', animData.w);\n      this.svgElement.setAttribute('height', animData.h);\n      this.svgElement.style.width = '100%';\n      this.svgElement.style.height = '100%';\n      this.svgElement.style.transform = 'translate3d(0,0,0)';\n    }\n\n    if (this.renderConfig.className) {\n      this.svgElement.setAttribute('class', this.renderConfig.className);\n    }\n\n    this.svgElement.setAttribute('preserveAspectRatio', this.renderConfig.preserveAspectRatio); //this.layerElement.style.transform = 'translate3d(0,0,0)';\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\n\n    this.animationItem.wrapper.appendChild(this.svgElement); //Mask animation\n\n    var defs = this.globalData.defs;\n    this.setupGlobalData(animData, defs);\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.data = animData;\n    var maskElement = createNS('clipPath');\n    var rect = createNS('rect');\n    rect.setAttribute('width', animData.w);\n    rect.setAttribute('height', animData.h);\n    rect.setAttribute('x', 0);\n    rect.setAttribute('y', 0);\n    var maskId = createElementID();\n    maskElement.setAttribute('id', maskId);\n    maskElement.appendChild(rect);\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\" + maskId + \")\");\n    defs.appendChild(maskElement);\n    this.layers = animData.layers;\n    this.elements = createSizedArray(animData.layers.length);\n  };\n\n  SVGRenderer.prototype.destroy = function () {\n    this.animationItem.wrapper.innerHTML = '';\n    this.layerElement = null;\n    this.globalData.defs = null;\n    var i,\n        len = this.layers ? this.layers.length : 0;\n\n    for (i = 0; i < len; i++) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n\n  SVGRenderer.prototype.updateContainerSize = function () {};\n\n  SVGRenderer.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n\n    if (elements[pos] || this.layers[pos].ty == 99) {\n      return;\n    }\n\n    elements[pos] = true;\n    var element = this.createItem(this.layers[pos]);\n    elements[pos] = element;\n\n    if (expressionsPlugin) {\n      if (this.layers[pos].ty === 0) {\n        this.globalData.projectInterface.registerComposition(element);\n      }\n\n      element.initExpressions();\n    }\n\n    this.appendElementInPos(element, pos);\n\n    if (this.layers[pos].tt) {\n      if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {\n        this.buildItem(pos - 1);\n        this.addPendingElement(element);\n      } else {\n        element.setMatte(elements[pos - 1].layerId);\n      }\n    }\n  };\n\n  SVGRenderer.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n\n      if (element.data.tt) {\n        var i = 0,\n            len = this.elements.length;\n\n        while (i < len) {\n          if (this.elements[i] === element) {\n            element.setMatte(this.elements[i - 1].layerId);\n            break;\n          }\n\n          i += 1;\n        }\n      }\n    }\n  };\n\n  SVGRenderer.prototype.renderFrame = function (num) {\n    if (this.renderedFrame === num || this.destroyed) {\n      return;\n    }\n\n    if (num === null) {\n      num = this.renderedFrame;\n    } else {\n      this.renderedFrame = num;\n    } // console.log('-------');\n    // console.log('FRAME ',num);\n\n\n    this.globalData.frameNum = num;\n    this.globalData.frameId += 1;\n    this.globalData.projectInterface.currentFrame = num;\n    this.globalData._mdf = false;\n    var i,\n        len = this.layers.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = len - 1; i >= 0; i--) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n\n    if (this.globalData._mdf) {\n      for (i = 0; i < len; i += 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n    }\n  };\n\n  SVGRenderer.prototype.appendElementInPos = function (element, pos) {\n    var newElement = element.getBaseElement();\n\n    if (!newElement) {\n      return;\n    }\n\n    var i = 0;\n    var nextElement;\n\n    while (i < pos) {\n      if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\n        nextElement = this.elements[i].getBaseElement();\n      }\n\n      i += 1;\n    }\n\n    if (nextElement) {\n      this.layerElement.insertBefore(newElement, nextElement);\n    } else {\n      this.layerElement.appendChild(newElement);\n    }\n  };\n\n  SVGRenderer.prototype.hide = function () {\n    this.layerElement.style.display = 'none';\n  };\n\n  SVGRenderer.prototype.show = function () {\n    this.layerElement.style.display = 'block';\n  };\n\n  function CanvasRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || 'xMidYMid meet',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      className: config && config.className || ''\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = 'canvas';\n  }\n\n  extendPrototype([BaseRenderer], CanvasRenderer);\n\n  CanvasRenderer.prototype.createShape = function (data) {\n    return new CVShapeElement(data, this.globalData, this);\n  };\n\n  CanvasRenderer.prototype.createText = function (data) {\n    return new CVTextElement(data, this.globalData, this);\n  };\n\n  CanvasRenderer.prototype.createImage = function (data) {\n    return new CVImageElement(data, this.globalData, this);\n  };\n\n  CanvasRenderer.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this);\n  };\n\n  CanvasRenderer.prototype.createSolid = function (data) {\n    return new CVSolidElement(data, this.globalData, this);\n  };\n\n  CanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\n\n  CanvasRenderer.prototype.ctxTransform = function (props) {\n    if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {\n      return;\n    }\n\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13]);\n      return;\n    }\n\n    this.transformMat.cloneFromProps(props);\n    var cProps = this.contextData.cTr.props;\n    this.transformMat.transform(cProps[0], cProps[1], cProps[2], cProps[3], cProps[4], cProps[5], cProps[6], cProps[7], cProps[8], cProps[9], cProps[10], cProps[11], cProps[12], cProps[13], cProps[14], cProps[15]); //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\n\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\n    var trProps = this.contextData.cTr.props;\n    this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);\n  };\n\n  CanvasRenderer.prototype.ctxOpacity = function (op) {\n    /*if(op === 1){\r\n        return;\r\n    }*/\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n      return;\n    }\n\n    this.contextData.cO *= op < 0 ? 0 : op;\n\n    if (this.globalData.currentGlobalAlpha !== this.contextData.cO) {\n      this.canvasContext.globalAlpha = this.contextData.cO;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n    }\n  };\n\n  CanvasRenderer.prototype.reset = function () {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n\n    this.contextData.reset();\n  };\n\n  CanvasRenderer.prototype.save = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.save();\n      return;\n    }\n\n    if (actionFlag) {\n      this.canvasContext.save();\n    }\n\n    var props = this.contextData.cTr.props;\n\n    if (this.contextData._length <= this.contextData.cArrPos) {\n      this.contextData.duplicate();\n    }\n\n    var i,\n        arr = this.contextData.saved[this.contextData.cArrPos];\n\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = props[i];\n    }\n\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\n    this.contextData.cArrPos += 1;\n  };\n\n  CanvasRenderer.prototype.restore = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n\n    if (actionFlag) {\n      this.canvasContext.restore();\n      this.globalData.blendMode = 'source-over';\n    }\n\n    this.contextData.cArrPos -= 1;\n    var popped = this.contextData.saved[this.contextData.cArrPos];\n    var i,\n        arr = this.contextData.cTr.props;\n\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = popped[i];\n    }\n\n    this.canvasContext.setTransform(popped[0], popped[1], popped[4], popped[5], popped[12], popped[13]);\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\n    this.contextData.cO = popped;\n\n    if (this.globalData.currentGlobalAlpha !== popped) {\n      this.canvasContext.globalAlpha = popped;\n      this.globalData.currentGlobalAlpha = popped;\n    }\n  };\n\n  CanvasRenderer.prototype.configAnimation = function (animData) {\n    if (this.animationItem.wrapper) {\n      this.animationItem.container = createTag('canvas');\n      this.animationItem.container.style.width = '100%';\n      this.animationItem.container.style.height = '100%'; //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\n      //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\n\n      this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\n      this.animationItem.wrapper.appendChild(this.animationItem.container);\n      this.canvasContext = this.animationItem.container.getContext('2d');\n\n      if (this.renderConfig.className) {\n        this.animationItem.container.setAttribute('class', this.renderConfig.className);\n      }\n    } else {\n      this.canvasContext = this.renderConfig.context;\n    }\n\n    this.data = animData;\n    this.layers = animData.layers;\n    this.transformCanvas = {\n      w: animData.w,\n      h: animData.h,\n      sx: 0,\n      sy: 0,\n      tx: 0,\n      ty: 0\n    };\n    this.setupGlobalData(animData, document.body);\n    this.globalData.canvasContext = this.canvasContext;\n    this.globalData.renderer = this;\n    this.globalData.isDashed = false;\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.globalData.transformCanvas = this.transformCanvas;\n    this.elements = createSizedArray(animData.layers.length);\n    this.updateContainerSize();\n  };\n\n  CanvasRenderer.prototype.updateContainerSize = function () {\n    this.reset();\n    var elementWidth, elementHeight;\n\n    if (this.animationItem.wrapper && this.animationItem.container) {\n      elementWidth = this.animationItem.wrapper.offsetWidth;\n      elementHeight = this.animationItem.wrapper.offsetHeight;\n      this.animationItem.container.setAttribute('width', elementWidth * this.renderConfig.dpr);\n      this.animationItem.container.setAttribute('height', elementHeight * this.renderConfig.dpr);\n    } else {\n      elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\n      elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\n    }\n\n    var elementRel, animationRel;\n\n    if (this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1) {\n      var par = this.renderConfig.preserveAspectRatio.split(' ');\n      var fillType = par[1] || 'meet';\n      var pos = par[0] || 'xMidYMid';\n      var xPos = pos.substr(0, 4);\n      var yPos = pos.substr(4);\n      elementRel = elementWidth / elementHeight;\n      animationRel = this.transformCanvas.w / this.transformCanvas.h;\n\n      if (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice') {\n        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      } else {\n        this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      }\n\n      if (xPos === 'xMid' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2 * this.renderConfig.dpr;\n      } else if (xPos === 'xMax' && (animationRel < elementRel && fillType === 'meet' || animationRel > elementRel && fillType === 'slice')) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.tx = 0;\n      }\n\n      if (yPos === 'YMid' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2 * this.renderConfig.dpr;\n      } else if (yPos === 'YMax' && (animationRel > elementRel && fillType === 'meet' || animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.ty = 0;\n      }\n    } else if (this.renderConfig.preserveAspectRatio == 'none') {\n      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    } else {\n      this.transformCanvas.sx = this.renderConfig.dpr;\n      this.transformCanvas.sy = this.renderConfig.dpr;\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    }\n\n    this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];\n    /*var i, len = this.elements.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n            this.elements[i].resize(this.globalData.transformCanvas);\r\n        }\r\n    }*/\n\n    this.ctxTransform(this.transformCanvas.props);\n    this.canvasContext.beginPath();\n    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n    this.canvasContext.closePath();\n    this.canvasContext.clip();\n  };\n\n  CanvasRenderer.prototype.destroy = function () {\n    if (this.renderConfig.clearCanvas) {\n      this.animationItem.wrapper.innerHTML = '';\n    }\n\n    var i,\n        len = this.layers ? this.layers.length : 0;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.elements.length = 0;\n    this.globalData.canvasContext = null;\n    this.animationItem.container = null;\n    this.destroyed = true;\n  };\n\n  CanvasRenderer.prototype.renderFrame = function (num) {\n    if (this.renderedFrame == num && this.renderConfig.clearCanvas === true || this.destroyed || num === -1) {\n      return;\n    }\n\n    this.renderedFrame = num;\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\n    this.globalData.frameId += 1;\n    this.globalData._mdf = !this.renderConfig.clearCanvas;\n    this.globalData.projectInterface.currentFrame = num; // console.log('--------');\n    // console.log('NEW: ',num);\n\n    var i,\n        len = this.layers.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n\n    for (i = 0; i < len; i++) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n\n    if (this.globalData._mdf) {\n      if (this.renderConfig.clearCanvas === true) {\n        this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n      } else {\n        this.save();\n      }\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n\n      if (this.renderConfig.clearCanvas !== true) {\n        this.restore();\n      }\n    }\n  };\n\n  CanvasRenderer.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n\n    if (elements[pos] || this.layers[pos].ty == 99) {\n      return;\n    }\n\n    var element = this.createItem(this.layers[pos], this, this.globalData);\n    elements[pos] = element;\n    element.initExpressions();\n    /*if(this.layers[pos].ty === 0){\r\n        element.resize(this.globalData.transformCanvas);\r\n    }*/\n  };\n\n  CanvasRenderer.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n\n  CanvasRenderer.prototype.hide = function () {\n    this.animationItem.container.style.display = 'none';\n  };\n\n  CanvasRenderer.prototype.show = function () {\n    this.animationItem.container.style.display = 'block';\n  };\n\n  function HybridRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.renderConfig = {\n      className: config && config.className || '',\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || 'xMidYMid slice',\n      hideOnTransparent: config && config.hideOnTransparent === false ? false : true\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      renderConfig: this.renderConfig\n    };\n    this.pendingElements = [];\n    this.elements = [];\n    this.threeDElements = [];\n    this.destroyed = false;\n    this.camera = null;\n    this.supports3d = true;\n    this.rendererType = 'html';\n  }\n\n  extendPrototype([BaseRenderer], HybridRenderer);\n  HybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\n\n  HybridRenderer.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n\n  HybridRenderer.prototype.appendElementInPos = function (element, pos) {\n    var newDOMElement = element.getBaseElement();\n\n    if (!newDOMElement) {\n      return;\n    }\n\n    var layer = this.layers[pos];\n\n    if (!layer.ddd || !this.supports3d) {\n      if (this.threeDElements) {\n        this.addTo3dContainer(newDOMElement, pos);\n      } else {\n        var i = 0;\n        var nextDOMElement, nextLayer, tmpDOMElement;\n\n        while (i < pos) {\n          if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement) {\n            nextLayer = this.elements[i];\n            tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\n            nextDOMElement = tmpDOMElement || nextDOMElement;\n          }\n\n          i += 1;\n        }\n\n        if (nextDOMElement) {\n          if (!layer.ddd || !this.supports3d) {\n            this.layerElement.insertBefore(newDOMElement, nextDOMElement);\n          }\n        } else {\n          if (!layer.ddd || !this.supports3d) {\n            this.layerElement.appendChild(newDOMElement);\n          }\n        }\n      }\n    } else {\n      this.addTo3dContainer(newDOMElement, pos);\n    }\n  };\n\n  HybridRenderer.prototype.createShape = function (data) {\n    if (!this.supports3d) {\n      return new SVGShapeElement(data, this.globalData, this);\n    }\n\n    return new HShapeElement(data, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createText = function (data) {\n    if (!this.supports3d) {\n      return new SVGTextElement(data, this.globalData, this);\n    }\n\n    return new HTextElement(data, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createCamera = function (data) {\n    this.camera = new HCameraElement(data, this.globalData, this);\n    return this.camera;\n  };\n\n  HybridRenderer.prototype.createImage = function (data) {\n    if (!this.supports3d) {\n      return new IImageElement(data, this.globalData, this);\n    }\n\n    return new HImageElement(data, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createComp = function (data) {\n    if (!this.supports3d) {\n      return new SVGCompElement(data, this.globalData, this);\n    }\n\n    return new HCompElement(data, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createSolid = function (data) {\n    if (!this.supports3d) {\n      return new ISolidElement(data, this.globalData, this);\n    }\n\n    return new HSolidElement(data, this.globalData, this);\n  };\n\n  HybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\n\n  HybridRenderer.prototype.getThreeDContainerByPos = function (pos) {\n    var i = 0,\n        len = this.threeDElements.length;\n\n    while (i < len) {\n      if (this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\n        return this.threeDElements[i].perspectiveElem;\n      }\n\n      i += 1;\n    }\n  };\n\n  HybridRenderer.prototype.createThreeDContainer = function (pos, type) {\n    var perspectiveElem = createTag('div');\n    styleDiv(perspectiveElem);\n    var container = createTag('div');\n    styleDiv(container);\n\n    if (type === '3d') {\n      perspectiveElem.style.width = this.globalData.compSize.w + 'px';\n      perspectiveElem.style.height = this.globalData.compSize.h + 'px';\n      perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\n      container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\n    }\n\n    perspectiveElem.appendChild(container); //this.resizerElem.appendChild(perspectiveElem);\n\n    var threeDContainerData = {\n      container: container,\n      perspectiveElem: perspectiveElem,\n      startPos: pos,\n      endPos: pos,\n      type: type\n    };\n    this.threeDElements.push(threeDContainerData);\n    return threeDContainerData;\n  };\n\n  HybridRenderer.prototype.build3dContainers = function () {\n    var i,\n        len = this.layers.length;\n    var lastThreeDContainerData;\n    var currentContainer = '';\n\n    for (i = 0; i < len; i += 1) {\n      if (this.layers[i].ddd && this.layers[i].ty !== 3) {\n        if (currentContainer !== '3d') {\n          currentContainer = '3d';\n          lastThreeDContainerData = this.createThreeDContainer(i, '3d');\n        }\n\n        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\n      } else {\n        if (currentContainer !== '2d') {\n          currentContainer = '2d';\n          lastThreeDContainerData = this.createThreeDContainer(i, '2d');\n        }\n\n        lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\n      }\n    }\n\n    len = this.threeDElements.length;\n\n    for (i = len - 1; i >= 0; i--) {\n      this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\n    }\n  };\n\n  HybridRenderer.prototype.addTo3dContainer = function (elem, pos) {\n    var i = 0,\n        len = this.threeDElements.length;\n\n    while (i < len) {\n      if (pos <= this.threeDElements[i].endPos) {\n        var j = this.threeDElements[i].startPos;\n        var nextElement;\n\n        while (j < pos) {\n          if (this.elements[j] && this.elements[j].getBaseElement) {\n            nextElement = this.elements[j].getBaseElement();\n          }\n\n          j += 1;\n        }\n\n        if (nextElement) {\n          this.threeDElements[i].container.insertBefore(elem, nextElement);\n        } else {\n          this.threeDElements[i].container.appendChild(elem);\n        }\n\n        break;\n      }\n\n      i += 1;\n    }\n  };\n\n  HybridRenderer.prototype.configAnimation = function (animData) {\n    var resizerElem = createTag('div');\n    var wrapper = this.animationItem.wrapper;\n    resizerElem.style.width = animData.w + 'px';\n    resizerElem.style.height = animData.h + 'px';\n    this.resizerElem = resizerElem;\n    styleDiv(resizerElem);\n    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\n\n    if (this.renderConfig.className) {\n      resizerElem.setAttribute('class', this.renderConfig.className);\n    }\n\n    wrapper.appendChild(resizerElem);\n    resizerElem.style.overflow = 'hidden';\n    var svg = createNS('svg');\n    svg.setAttribute('width', '1');\n    svg.setAttribute('height', '1');\n    styleDiv(svg);\n    this.resizerElem.appendChild(svg);\n    var defs = createNS('defs');\n    svg.appendChild(defs);\n    this.data = animData; //Mask animation\n\n    this.setupGlobalData(animData, svg);\n    this.globalData.defs = defs;\n    this.layers = animData.layers;\n    this.layerElement = this.resizerElem;\n    this.build3dContainers();\n    this.updateContainerSize();\n  };\n\n  HybridRenderer.prototype.destroy = function () {\n    this.animationItem.wrapper.innerHTML = '';\n    this.animationItem.container = null;\n    this.globalData.defs = null;\n    var i,\n        len = this.layers ? this.layers.length : 0;\n\n    for (i = 0; i < len; i++) {\n      this.elements[i].destroy();\n    }\n\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n\n  HybridRenderer.prototype.updateContainerSize = function () {\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\n    var elementRel = elementWidth / elementHeight;\n    var animationRel = this.globalData.compSize.w / this.globalData.compSize.h;\n    var sx, sy, tx, ty;\n\n    if (animationRel > elementRel) {\n      sx = elementWidth / this.globalData.compSize.w;\n      sy = elementWidth / this.globalData.compSize.w;\n      tx = 0;\n      ty = (elementHeight - this.globalData.compSize.h * (elementWidth / this.globalData.compSize.w)) / 2;\n    } else {\n      sx = elementHeight / this.globalData.compSize.h;\n      sy = elementHeight / this.globalData.compSize.h;\n      tx = (elementWidth - this.globalData.compSize.w * (elementHeight / this.globalData.compSize.h)) / 2;\n      ty = 0;\n    }\n\n    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,' + sy + ',0,0,0,0,1,0,' + tx + ',' + ty + ',0,1)';\n  };\n\n  HybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\n\n  HybridRenderer.prototype.hide = function () {\n    this.resizerElem.style.display = 'none';\n  };\n\n  HybridRenderer.prototype.show = function () {\n    this.resizerElem.style.display = 'block';\n  };\n\n  HybridRenderer.prototype.initItems = function () {\n    this.buildAllItems();\n\n    if (this.camera) {\n      this.camera.setup();\n    } else {\n      var cWidth = this.globalData.compSize.w;\n      var cHeight = this.globalData.compSize.h;\n      var i,\n          len = this.threeDElements.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth, 2) + Math.pow(cHeight, 2)) + 'px';\n      }\n    }\n  };\n\n  HybridRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i,\n        len = assets.length;\n    var floatingContainer = createTag('div');\n\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i], floatingContainer, this.globalData.comp, null);\n        comp.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n\n  function MaskElement(data, element, globalData) {\n    this.data = data;\n    this.element = element;\n    this.globalData = globalData;\n    this.storedData = [];\n    this.masksProperties = this.data.masksProperties || [];\n    this.maskElement = null;\n    var defs = this.globalData.defs;\n    var i,\n        len = this.masksProperties ? this.masksProperties.length : 0;\n    this.viewData = createSizedArray(len);\n    this.solidPath = '';\n    var path,\n        properties = this.masksProperties;\n    var count = 0;\n    var currentMasks = [];\n    var j, jLen;\n    var layerId = createElementID();\n    var rect, expansor, feMorph, x;\n    var maskType = 'clipPath',\n        maskRef = 'clip-path';\n\n    for (i = 0; i < len; i++) {\n      if (properties[i].mode !== 'a' && properties[i].mode !== 'n' || properties[i].inv || properties[i].o.k !== 100) {\n        maskType = 'mask';\n        maskRef = 'mask';\n      }\n\n      if ((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0) {\n        rect = createNS('rect');\n        rect.setAttribute('fill', '#ffffff');\n        rect.setAttribute('width', this.element.comp.data.w || 0);\n        rect.setAttribute('height', this.element.comp.data.h || 0);\n        currentMasks.push(rect);\n      } else {\n        rect = null;\n      }\n\n      path = createNS('path');\n\n      if (properties[i].mode == 'n') {\n        // TODO move this to a factory or to a constructor\n        this.viewData[i] = {\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          elem: path,\n          lastPath: ''\n        };\n        defs.appendChild(path);\n        continue;\n      }\n\n      count += 1;\n      path.setAttribute('fill', properties[i].mode === 's' ? '#000000' : '#ffffff');\n      path.setAttribute('clip-rule', 'nonzero');\n      var filterID;\n\n      if (properties[i].x.k !== 0) {\n        maskType = 'mask';\n        maskRef = 'mask';\n        x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);\n        filterID = createElementID();\n        expansor = createNS('filter');\n        expansor.setAttribute('id', filterID);\n        feMorph = createNS('feMorphology');\n        feMorph.setAttribute('operator', 'dilate');\n        feMorph.setAttribute('in', 'SourceGraphic');\n        feMorph.setAttribute('radius', '0');\n        expansor.appendChild(feMorph);\n        defs.appendChild(expansor);\n        path.setAttribute('stroke', properties[i].mode === 's' ? '#000000' : '#ffffff');\n      } else {\n        feMorph = null;\n        x = null;\n      } // TODO move this to a factory or to a constructor\n\n\n      this.storedData[i] = {\n        elem: path,\n        x: x,\n        expan: feMorph,\n        lastPath: '',\n        lastOperator: '',\n        filterId: filterID,\n        lastRadius: 0\n      };\n\n      if (properties[i].mode == 'i') {\n        jLen = currentMasks.length;\n        var g = createNS('g');\n\n        for (j = 0; j < jLen; j += 1) {\n          g.appendChild(currentMasks[j]);\n        }\n\n        var mask = createNS('mask');\n        mask.setAttribute('mask-type', 'alpha');\n        mask.setAttribute('id', layerId + '_' + count);\n        mask.appendChild(path);\n        defs.appendChild(mask);\n        g.setAttribute('mask', 'url(' + locationHref + '#' + layerId + '_' + count + ')');\n        currentMasks.length = 0;\n        currentMasks.push(g);\n      } else {\n        currentMasks.push(path);\n      }\n\n      if (properties[i].inv && !this.solidPath) {\n        this.solidPath = this.createLayerSolidPath();\n      } // TODO move this to a factory or to a constructor\n\n\n      this.viewData[i] = {\n        elem: path,\n        lastPath: '',\n        op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n        prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n        invRect: rect\n      };\n\n      if (!this.viewData[i].prop.k) {\n        this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);\n      }\n    }\n\n    this.maskElement = createNS(maskType);\n    len = currentMasks.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.maskElement.appendChild(currentMasks[i]);\n    }\n\n    if (count > 0) {\n      this.maskElement.setAttribute('id', layerId);\n      this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\n      defs.appendChild(this.maskElement);\n    }\n\n    if (this.viewData.length) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n\n  MaskElement.prototype.getMaskProperty = function (pos) {\n    return this.viewData[pos].prop;\n  };\n\n  MaskElement.prototype.renderFrame = function (isFirstFrame) {\n    var finalMat = this.element.finalTransform.mat;\n    var i,\n        len = this.masksProperties.length;\n\n    for (i = 0; i < len; i++) {\n      if (this.viewData[i].prop._mdf || isFirstFrame) {\n        this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);\n      }\n\n      if (this.viewData[i].op._mdf || isFirstFrame) {\n        this.viewData[i].elem.setAttribute('fill-opacity', this.viewData[i].op.v);\n      }\n\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {\n          this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\n          this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\n        }\n\n        if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {\n          var feMorph = this.storedData[i].expan;\n\n          if (this.storedData[i].x.v < 0) {\n            if (this.storedData[i].lastOperator !== 'erode') {\n              this.storedData[i].lastOperator = 'erode';\n              this.storedData[i].elem.setAttribute('filter', 'url(' + locationHref + '#' + this.storedData[i].filterId + ')');\n            }\n\n            feMorph.setAttribute('radius', -this.storedData[i].x.v);\n          } else {\n            if (this.storedData[i].lastOperator !== 'dilate') {\n              this.storedData[i].lastOperator = 'dilate';\n              this.storedData[i].elem.setAttribute('filter', null);\n            }\n\n            this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v * 2);\n          }\n        }\n      }\n    }\n  };\n\n  MaskElement.prototype.getMaskelement = function () {\n    return this.maskElement;\n  };\n\n  MaskElement.prototype.createLayerSolidPath = function () {\n    var path = 'M0,0 ';\n    path += ' h' + this.globalData.compSize.w;\n    path += ' v' + this.globalData.compSize.h;\n    path += ' h-' + this.globalData.compSize.w;\n    path += ' v-' + this.globalData.compSize.h + ' ';\n    return path;\n  };\n\n  MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\n    var pathString = \" M\" + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\n    var i, len;\n    len = pathNodes._length;\n\n    for (i = 1; i < len; i += 1) {\n      //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\n      pathString += \" C\" + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + \" \" + pathNodes.i[i][0] + ',' + pathNodes.i[i][1] + \" \" + pathNodes.v[i][0] + ',' + pathNodes.v[i][1];\n    } //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\n\n\n    if (pathNodes.c && len > 1) {\n      pathString += \" C\" + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + \" \" + pathNodes.i[0][0] + ',' + pathNodes.i[0][1] + \" \" + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\n    } //pathNodes.__renderedString = pathString;\n\n\n    if (viewData.lastPath !== pathString) {\n      var pathShapeValue = '';\n\n      if (viewData.elem) {\n        if (pathNodes.c) {\n          pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\n        }\n\n        viewData.elem.setAttribute('d', pathShapeValue);\n      }\n\n      viewData.lastPath = pathString;\n    }\n  };\n\n  MaskElement.prototype.destroy = function () {\n    this.element = null;\n    this.globalData = null;\n    this.maskElement = null;\n    this.data = null;\n    this.masksProperties = null;\n  };\n  /**\r\n   * @file \r\n   * Handles AE's layer parenting property.\r\n   *\r\n   */\n\n\n  function HierarchyElement() {}\n\n  HierarchyElement.prototype = {\n    /**\r\n        * @function \r\n        * Initializes hierarchy properties\r\n        *\r\n        */\n    initHierarchy: function initHierarchy() {\n      //element's parent list\n      this.hierarchy = []; //if element is parent of another layer _isParent will be true\n\n      this._isParent = false;\n      this.checkParenting();\n    },\n\n    /**\r\n        * @function \r\n        * Sets layer's hierarchy.\r\n        * @param {array} hierarch\r\n        * layer's parent list\r\n        *\r\n        */\n    setHierarchy: function setHierarchy(hierarchy) {\n      this.hierarchy = hierarchy;\n    },\n\n    /**\r\n        * @function \r\n        * Sets layer as parent.\r\n        *\r\n        */\n    setAsParent: function setAsParent() {\n      this._isParent = true;\n    },\n\n    /**\r\n        * @function \r\n        * Searches layer's parenting chain\r\n        *\r\n        */\n    checkParenting: function checkParenting() {\n      if (this.data.parent !== undefined) {\n        this.comp.buildElementParenting(this, this.data.parent, []);\n      }\n    }\n  };\n  /**\r\n   * @file \r\n   * Handles element's layer frame update.\r\n   * Checks layer in point and out point\r\n   *\r\n   */\n\n  function FrameElement() {}\n\n  FrameElement.prototype = {\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\n    initFrame: function initFrame() {\n      //set to true when inpoint is rendered\n      this._isFirstFrame = false; //list of animated properties\n\n      this.dynamicProperties = []; // If layer has been modified in current tick this will be true\n\n      this._mdf = false;\n    },\n\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\n    prepareProperties: function prepareProperties(num, isVisible) {\n      var i,\n          len = this.dynamicProperties.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (isVisible || this._isParent && this.dynamicProperties[i].propType === 'transform') {\n          this.dynamicProperties[i].getValue();\n\n          if (this.dynamicProperties[i]._mdf) {\n            this.globalData._mdf = true;\n            this._mdf = true;\n          }\n        }\n      }\n    },\n    addDynamicProperty: function addDynamicProperty(prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n      }\n    }\n  };\n\n  function TransformElement() {}\n\n  TransformElement.prototype = {\n    initTransform: function initTransform() {\n      this.finalTransform = {\n        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {\n          o: 0\n        },\n        _matMdf: false,\n        _opMdf: false,\n        mat: new Matrix()\n      };\n\n      if (this.data.ao) {\n        this.finalTransform.mProp.autoOriented = true;\n      } //TODO: check TYPE 11: Guided elements\n\n\n      if (this.data.ty !== 11) {//this.createElements();\n      }\n    },\n    renderTransform: function renderTransform() {\n      this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\n      this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\n\n      if (this.hierarchy) {\n        var mat;\n        var finalMat = this.finalTransform.mat;\n        var i = 0,\n            len = this.hierarchy.length; //Checking if any of the transformation matrices in the hierarchy chain has changed.\n\n        if (!this.finalTransform._matMdf) {\n          while (i < len) {\n            if (this.hierarchy[i].finalTransform.mProp._mdf) {\n              this.finalTransform._matMdf = true;\n              break;\n            }\n\n            i += 1;\n          }\n        }\n\n        if (this.finalTransform._matMdf) {\n          mat = this.finalTransform.mProp.v.props;\n          finalMat.cloneFromProps(mat);\n\n          for (i = 0; i < len; i += 1) {\n            mat = this.hierarchy[i].finalTransform.mProp.v.props;\n            finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\n          }\n        }\n      }\n    },\n    globalToLocal: function globalToLocal(pt) {\n      var transforms = [];\n      transforms.push(this.finalTransform);\n      var flag = true;\n      var comp = this.comp;\n\n      while (flag) {\n        if (comp.finalTransform) {\n          if (comp.data.hasMask) {\n            transforms.splice(0, 0, comp.finalTransform);\n          }\n\n          comp = comp.comp;\n        } else {\n          flag = false;\n        }\n      }\n\n      var i,\n          len = transforms.length,\n          ptNew;\n\n      for (i = 0; i < len; i += 1) {\n        ptNew = transforms[i].mat.applyToPointArray(0, 0, 0); //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\n\n        pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\n      }\n\n      return pt;\n    },\n    mHelper: new Matrix()\n  };\n\n  function RenderableElement() {}\n\n  RenderableElement.prototype = {\n    initRenderable: function initRenderable() {\n      //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\n      this.isInRange = false; //layer's display state\n\n      this.hidden = false; // If layer's transparency equals 0, it can be hidden\n\n      this.isTransparent = false; //list of animated components\n\n      this.renderableComponents = [];\n    },\n    addRenderableComponent: function addRenderableComponent(component) {\n      if (this.renderableComponents.indexOf(component) === -1) {\n        this.renderableComponents.push(component);\n      }\n    },\n    removeRenderableComponent: function removeRenderableComponent(component) {\n      if (this.renderableComponents.indexOf(component) !== -1) {\n        this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\n      }\n    },\n    prepareRenderableFrame: function prepareRenderableFrame(num) {\n      this.checkLayerLimits(num);\n    },\n    checkTransparency: function checkTransparency() {\n      if (this.finalTransform.mProp.o.v <= 0) {\n        if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\n          this.isTransparent = true;\n          this.hide();\n        }\n      } else if (this.isTransparent) {\n        this.isTransparent = false;\n        this.show();\n      }\n    },\n\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\n    checkLayerLimits: function checkLayerLimits(num) {\n      if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\n        if (this.isInRange !== true) {\n          this.globalData._mdf = true;\n          this._mdf = true;\n          this.isInRange = true;\n          this.show();\n        }\n      } else {\n        if (this.isInRange !== false) {\n          this.globalData._mdf = true;\n          this.isInRange = false;\n          this.hide();\n        }\n      }\n    },\n    renderRenderable: function renderRenderable() {\n      var i,\n          len = this.renderableComponents.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.renderableComponents[i].renderFrame(this._isFirstFrame);\n      }\n      /*this.maskManager.renderFrame(this.finalTransform.mat);\r\n      this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/\n\n    },\n    sourceRectAtTime: function sourceRectAtTime() {\n      return {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100\n      };\n    },\n    getLayerSize: function getLayerSize() {\n      if (this.data.ty === 5) {\n        return {\n          w: this.data.textData.width,\n          h: this.data.textData.height\n        };\n      } else {\n        return {\n          w: this.data.width,\n          h: this.data.height\n        };\n      }\n    }\n  };\n\n  function RenderableDOMElement() {}\n\n  (function () {\n    var _prototype = {\n      initElement: function initElement(data, globalData, comp) {\n        this.initFrame();\n        this.initBaseData(data, globalData, comp);\n        this.initTransform(data, globalData, comp);\n        this.initHierarchy();\n        this.initRenderable();\n        this.initRendererElement();\n        this.createContainerElements();\n        this.createRenderableComponents();\n        this.createContent();\n        this.hide();\n      },\n      hide: function hide() {\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n          var elem = this.baseElement || this.layerElement;\n          elem.style.display = 'none';\n          this.hidden = true;\n        }\n      },\n      show: function show() {\n        if (this.isInRange && !this.isTransparent) {\n          if (!this.data.hd) {\n            var elem = this.baseElement || this.layerElement;\n            elem.style.display = 'block';\n          }\n\n          this.hidden = false;\n          this._isFirstFrame = true;\n        }\n      },\n      renderFrame: function renderFrame() {\n        //If it is exported as hidden (data.hd === true) no need to render\n        //If it is not visible no need to render\n        if (this.data.hd || this.hidden) {\n          return;\n        }\n\n        this.renderTransform();\n        this.renderRenderable();\n        this.renderElement();\n        this.renderInnerContent();\n\n        if (this._isFirstFrame) {\n          this._isFirstFrame = false;\n        }\n      },\n      renderInnerContent: function renderInnerContent() {},\n      prepareFrame: function prepareFrame(num) {\n        this._mdf = false;\n        this.prepareRenderableFrame(num);\n        this.prepareProperties(num, this.isInRange);\n        this.checkTransparency();\n      },\n      destroy: function destroy() {\n        this.innerElem = null;\n        this.destroyBaseElement();\n      }\n    };\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\n  })();\n\n  function ProcessedElement(element, position) {\n    this.elem = element;\n    this.pos = position;\n  }\n\n  function SVGStyleData(data, level) {\n    this.data = data;\n    this.type = data.ty;\n    this.d = '';\n    this.lvl = level;\n    this._mdf = false;\n    this.closed = data.hd === true;\n    this.pElem = createNS('path');\n    this.msElem = null;\n  }\n\n  SVGStyleData.prototype.reset = function () {\n    this.d = '';\n    this._mdf = false;\n  };\n\n  function SVGShapeData(transformers, level, shape) {\n    this.caches = [];\n    this.styles = [];\n    this.transformers = transformers;\n    this.lStr = '';\n    this.sh = shape;\n    this.lvl = level; //TODO find if there are some cases where _isAnimated can be false. \n    // For now, since shapes add up with other shapes. They have to be calculated every time.\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\n\n    this._isAnimated = !!shape.k; // TODO: commenting this for now since all shapes are animated\n\n    var i = 0,\n        len = transformers.length;\n\n    while (i < len) {\n      if (transformers[i].mProps.dynamicProperties.length) {\n        this._isAnimated = true;\n        break;\n      }\n\n      i += 1;\n    }\n  }\n\n  SVGShapeData.prototype.setAsAnimated = function () {\n    this._isAnimated = true;\n  };\n\n  function SVGTransformData(mProps, op, container) {\n    this.transform = {\n      mProps: mProps,\n      op: op,\n      container: container\n    };\n    this.elements = [];\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\n  }\n\n  function SVGStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this);\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\n    this.style = styleOb;\n    this._isAnimated = !!this._isAnimated;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\n\n  function SVGFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\n    this.style = styleOb;\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGFillStyleData);\n\n  function SVGGradientFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.initGradientData(elem, data, styleOb);\n  }\n\n  SVGGradientFillStyleData.prototype.initGradientData = function (elem, data, styleOb) {\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.s = PropertyFactory.getProp(elem, data.s, 1, null, this);\n    this.e = PropertyFactory.getProp(elem, data.e, 1, null, this);\n    this.h = PropertyFactory.getProp(elem, data.h || {\n      k: 0\n    }, 0, 0.01, this);\n    this.a = PropertyFactory.getProp(elem, data.a || {\n      k: 0\n    }, 0, degToRads, this);\n    this.g = new GradientProperty(elem, data.g, this);\n    this.style = styleOb;\n    this.stops = [];\n    this.setGradientData(styleOb.pElem, data);\n    this.setGradientOpacity(data, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  };\n\n  SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data) {\n    var gradientId = createElementID();\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\n    gfill.setAttribute('id', gradientId);\n    gfill.setAttribute('spreadMethod', 'pad');\n    gfill.setAttribute('gradientUnits', 'userSpaceOnUse');\n    var stops = [];\n    var stop, j, jLen;\n    jLen = data.g.p * 4;\n\n    for (j = 0; j < jLen; j += 4) {\n      stop = createNS('stop');\n      gfill.appendChild(stop);\n      stops.push(stop);\n    }\n\n    pathElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + locationHref + '#' + gradientId + ')');\n    this.gf = gfill;\n    this.cst = stops;\n  };\n\n  SVGGradientFillStyleData.prototype.setGradientOpacity = function (data, styleOb) {\n    if (this.g._hasOpacity && !this.g._collapsable) {\n      var stop, j, jLen;\n      var mask = createNS(\"mask\");\n      var maskElement = createNS('path');\n      mask.appendChild(maskElement);\n      var opacityId = createElementID();\n      var maskId = createElementID();\n      mask.setAttribute('id', maskId);\n      var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\n      opFill.setAttribute('id', opacityId);\n      opFill.setAttribute('spreadMethod', 'pad');\n      opFill.setAttribute('gradientUnits', 'userSpaceOnUse');\n      jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\n      var stops = this.stops;\n\n      for (j = data.g.p * 4; j < jLen; j += 2) {\n        stop = createNS('stop');\n        stop.setAttribute('stop-color', 'rgb(255,255,255)');\n        opFill.appendChild(stop);\n        stops.push(stop);\n      }\n\n      maskElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + locationHref + '#' + opacityId + ')');\n      this.of = opFill;\n      this.ms = mask;\n      this.ost = stops;\n      this.maskId = maskId;\n      styleOb.msElem = maskElement;\n    }\n  };\n\n  extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\n\n  function SVGGradientStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this);\n    this.initGradientData(elem, data, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  }\n\n  extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\n\n  function ShapeGroupData() {\n    this.it = [];\n    this.prevViewData = [];\n    this.gr = createNS('g');\n  }\n\n  var SVGElementsRenderer = function () {\n    var _identityMatrix = new Matrix();\n\n    var _matrixHelper = new Matrix();\n\n    var ob = {\n      createRenderFunction: createRenderFunction\n    };\n\n    function createRenderFunction(data) {\n      var ty = data.ty;\n\n      switch (data.ty) {\n        case 'fl':\n          return renderFill;\n\n        case 'gf':\n          return renderGradient;\n\n        case 'gs':\n          return renderGradientStroke;\n\n        case 'st':\n          return renderStroke;\n\n        case 'sh':\n        case 'el':\n        case 'rc':\n        case 'sr':\n          return renderPath;\n\n        case 'tr':\n          return renderContentTransform;\n      }\n    }\n\n    function renderContentTransform(styleData, itemData, isFirstFrame) {\n      if (isFirstFrame || itemData.transform.op._mdf) {\n        itemData.transform.container.setAttribute('opacity', itemData.transform.op.v);\n      }\n\n      if (isFirstFrame || itemData.transform.mProps._mdf) {\n        itemData.transform.container.setAttribute('transform', itemData.transform.mProps.v.to2dCSS());\n      }\n    }\n\n    function renderPath(styleData, itemData, isFirstFrame) {\n      var j,\n          jLen,\n          pathStringTransformed,\n          redraw,\n          pathNodes,\n          l,\n          lLen = itemData.styles.length;\n      var lvl = itemData.lvl;\n      var paths, mat, props, iterations, k;\n\n      for (l = 0; l < lLen; l += 1) {\n        redraw = itemData.sh._mdf || isFirstFrame;\n\n        if (itemData.styles[l].lvl < lvl) {\n          mat = _matrixHelper.reset();\n          iterations = lvl - itemData.styles[l].lvl;\n          k = itemData.transformers.length - 1;\n\n          while (!redraw && iterations > 0) {\n            redraw = itemData.transformers[k].mProps._mdf || redraw;\n            iterations--;\n            k--;\n          }\n\n          if (redraw) {\n            iterations = lvl - itemData.styles[l].lvl;\n            k = itemData.transformers.length - 1;\n\n            while (iterations > 0) {\n              props = itemData.transformers[k].mProps.v.props;\n              mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n              iterations--;\n              k--;\n            }\n          }\n        } else {\n          mat = _identityMatrix;\n        }\n\n        paths = itemData.sh.paths;\n        jLen = paths._length;\n\n        if (redraw) {\n          pathStringTransformed = '';\n\n          for (j = 0; j < jLen; j += 1) {\n            pathNodes = paths.shapes[j];\n\n            if (pathNodes && pathNodes._length) {\n              pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\n            }\n          }\n\n          itemData.caches[l] = pathStringTransformed;\n        } else {\n          pathStringTransformed = itemData.caches[l];\n        }\n\n        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\n      }\n    }\n\n    function renderFill(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n\n      if (itemData.c._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill', 'rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\n      }\n\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill-opacity', itemData.o.v);\n      }\n    }\n\n    ;\n\n    function renderGradientStroke(styleData, itemData, isFirstFrame) {\n      renderGradient(styleData, itemData, isFirstFrame);\n      renderStroke(styleData, itemData, isFirstFrame);\n    }\n\n    function renderGradient(styleData, itemData, isFirstFrame) {\n      var gfill = itemData.gf;\n      var hasOpacity = itemData.g._hasOpacity;\n      var pt1 = itemData.s.v,\n          pt2 = itemData.e.v;\n\n      if (itemData.o._mdf || isFirstFrame) {\n        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\n        itemData.style.pElem.setAttribute(attr, itemData.o.v);\n      }\n\n      if (itemData.s._mdf || isFirstFrame) {\n        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\n        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\n        gfill.setAttribute(attr1, pt1[0]);\n        gfill.setAttribute(attr2, pt1[1]);\n\n        if (hasOpacity && !itemData.g._collapsable) {\n          itemData.of.setAttribute(attr1, pt1[0]);\n          itemData.of.setAttribute(attr2, pt1[1]);\n        }\n      }\n\n      var stops, i, len, stop;\n\n      if (itemData.g._cmdf || isFirstFrame) {\n        stops = itemData.cst;\n        var cValues = itemData.g.c;\n        len = stops.length;\n\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n          stop.setAttribute('offset', cValues[i * 4] + '%');\n          stop.setAttribute('stop-color', 'rgb(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ')');\n        }\n      }\n\n      if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\n        var oValues = itemData.g.o;\n\n        if (itemData.g._collapsable) {\n          stops = itemData.cst;\n        } else {\n          stops = itemData.ost;\n        }\n\n        len = stops.length;\n\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n\n          if (!itemData.g._collapsable) {\n            stop.setAttribute('offset', oValues[i * 2] + '%');\n          }\n\n          stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\n        }\n      }\n\n      if (styleData.t === 1) {\n        if (itemData.e._mdf || isFirstFrame) {\n          gfill.setAttribute('x2', pt2[0]);\n          gfill.setAttribute('y2', pt2[1]);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('x2', pt2[0]);\n            itemData.of.setAttribute('y2', pt2[1]);\n          }\n        }\n      } else {\n        var rad;\n\n        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          gfill.setAttribute('r', rad);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('r', rad);\n          }\n        }\n\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\n          if (!rad) {\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          }\n\n          var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n          var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99 : itemData.h.v;\n          var dist = rad * percent;\n          var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n          var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n          gfill.setAttribute('fx', x);\n          gfill.setAttribute('fy', y);\n\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('fx', x);\n            itemData.of.setAttribute('fy', y);\n          }\n        } //gfill.setAttribute('fy','200');\n\n      }\n    }\n\n    ;\n\n    function renderStroke(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n      var d = itemData.d;\n\n      if (d && (d._mdf || isFirstFrame) && d.dashStr) {\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\n      }\n\n      if (itemData.c && (itemData.c._mdf || isFirstFrame)) {\n        styleElem.pElem.setAttribute('stroke', 'rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\n      }\n\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\n      }\n\n      if (itemData.w._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\n\n        if (styleElem.msElem) {\n          styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\n        }\n      }\n    }\n\n    ;\n    return ob;\n  }();\n\n  function ShapeTransformManager() {\n    this.sequences = {};\n    this.sequenceList = [];\n    this.transform_key_count = 0;\n  }\n\n  ShapeTransformManager.prototype = {\n    addTransformSequence: function addTransformSequence(transforms) {\n      var i,\n          len = transforms.length;\n      var key = '_';\n\n      for (i = 0; i < len; i += 1) {\n        key += transforms[i].transform.key + '_';\n      }\n\n      var sequence = this.sequences[key];\n\n      if (!sequence) {\n        sequence = {\n          transforms: [].concat(transforms),\n          finalTransform: new Matrix(),\n          _mdf: false\n        };\n        this.sequences[key] = sequence;\n        this.sequenceList.push(sequence);\n      }\n\n      return sequence;\n    },\n    processSequence: function processSequence(sequence, isFirstFrame) {\n      var i = 0,\n          len = sequence.transforms.length,\n          _mdf = isFirstFrame;\n\n      while (i < len && !isFirstFrame) {\n        if (sequence.transforms[i].transform.mProps._mdf) {\n          _mdf = true;\n          break;\n        }\n\n        i += 1;\n      }\n\n      if (_mdf) {\n        var props;\n        sequence.finalTransform.reset();\n\n        for (i = len - 1; i >= 0; i -= 1) {\n          props = sequence.transforms[i].transform.mProps.v.props;\n          sequence.finalTransform.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n        }\n      }\n\n      sequence._mdf = _mdf;\n    },\n    processSequences: function processSequences(isFirstFrame) {\n      var i,\n          len = this.sequenceList.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.processSequence(this.sequenceList[i], isFirstFrame);\n      }\n    },\n    getNewKey: function getNewKey() {\n      return '_' + this.transform_key_count++;\n    }\n  };\n\n  function CVShapeData(element, data, styles, transformsManager) {\n    this.styledShapes = [];\n    this.tr = [0, 0, 0, 0, 0, 0];\n    var ty = 4;\n\n    if (data.ty == 'rc') {\n      ty = 5;\n    } else if (data.ty == 'el') {\n      ty = 6;\n    } else if (data.ty == 'sr') {\n      ty = 7;\n    }\n\n    this.sh = ShapePropertyFactory.getShapeProp(element, data, ty, element);\n    var i,\n        len = styles.length,\n        styledShape;\n\n    for (i = 0; i < len; i += 1) {\n      if (!styles[i].closed) {\n        styledShape = {\n          transforms: transformsManager.addTransformSequence(styles[i].transforms),\n          trNodes: []\n        };\n        this.styledShapes.push(styledShape);\n        styles[i].elements.push(styledShape);\n      }\n    }\n  }\n\n  CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\n\n  function BaseElement() {}\n\n  BaseElement.prototype = {\n    checkMasks: function checkMasks() {\n      if (!this.data.hasMask) {\n        return false;\n      }\n\n      var i = 0,\n          len = this.data.masksProperties.length;\n\n      while (i < len) {\n        if (this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false) {\n          return true;\n        }\n\n        i += 1;\n      }\n\n      return false;\n    },\n    initExpressions: function initExpressions() {\n      this.layerInterface = LayerExpressionInterface(this);\n\n      if (this.data.hasMask && this.maskManager) {\n        this.layerInterface.registerMaskInterface(this.maskManager);\n      }\n\n      var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);\n      this.layerInterface.registerEffectsInterface(effectsInterface);\n\n      if (this.data.ty === 0 || this.data.xt) {\n        this.compInterface = CompExpressionInterface(this);\n      } else if (this.data.ty === 4) {\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);\n        this.layerInterface.content = this.layerInterface.shapeInterface;\n      } else if (this.data.ty === 5) {\n        this.layerInterface.textInterface = TextExpressionInterface(this);\n        this.layerInterface.text = this.layerInterface.textInterface;\n      }\n    },\n    setBlendMode: function setBlendMode() {\n      var blendModeValue = getBlendMode(this.data.bm);\n      var elem = this.baseElement || this.layerElement;\n      elem.style['mix-blend-mode'] = blendModeValue;\n    },\n    initBaseData: function initBaseData(data, globalData, comp) {\n      this.globalData = globalData;\n      this.comp = comp;\n      this.data = data;\n      this.layerId = createElementID(); //Stretch factor for old animations missing this property.\n\n      if (!this.data.sr) {\n        this.data.sr = 1;\n      } // effects manager\n\n\n      this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);\n    },\n    getType: function getType() {\n      return this.type;\n    },\n    sourceRectAtTime: function sourceRectAtTime() {}\n  };\n\n  function NullElement(data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initFrame();\n    this.initTransform(data, globalData, comp);\n    this.initHierarchy();\n  }\n\n  NullElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n\n  NullElement.prototype.renderFrame = function () {};\n\n  NullElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  NullElement.prototype.destroy = function () {};\n\n  NullElement.prototype.sourceRectAtTime = function () {};\n\n  NullElement.prototype.hide = function () {};\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);\n\n  function SVGBaseElement() {}\n\n  SVGBaseElement.prototype = {\n    initRendererElement: function initRendererElement() {\n      this.layerElement = createNS('g');\n    },\n    createContainerElements: function createContainerElements() {\n      this.matteElement = createNS('g');\n      this.transformedElement = this.layerElement;\n      this.maskedElement = this.layerElement;\n      this._sizeChanged = false;\n      var layerElementParent = null; //If this layer acts as a mask for the following layer\n\n      var filId, fil, gg;\n\n      if (this.data.td) {\n        if (this.data.td == 3 || this.data.td == 1) {\n          var masker = createNS('mask');\n          masker.setAttribute('id', this.layerId);\n          masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\n          masker.appendChild(this.layerElement);\n          layerElementParent = masker;\n          this.globalData.defs.appendChild(masker); // This is only for IE and Edge when mask if of type alpha\n\n          if (!featureSupport.maskType && this.data.td == 1) {\n            masker.setAttribute('mask-type', 'luminance');\n            filId = createElementID();\n            fil = filtersFactory.createFilter(filId);\n            this.globalData.defs.appendChild(fil);\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS('g');\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            masker.appendChild(gg);\n            gg.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');\n          }\n        } else if (this.data.td == 2) {\n          var maskGroup = createNS('mask');\n          maskGroup.setAttribute('id', this.layerId);\n          maskGroup.setAttribute('mask-type', 'alpha');\n          var maskGrouper = createNS('g');\n          maskGroup.appendChild(maskGrouper);\n          filId = createElementID();\n          fil = filtersFactory.createFilter(filId); ////\n          // This solution doesn't work on Android when meta tag with viewport attribute is set\n\n          /*var feColorMatrix = createNS('feColorMatrix');\r\n          feColorMatrix.setAttribute('type', 'matrix');\r\n          feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n          feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n          fil.appendChild(feColorMatrix);*/\n          ////\n\n          var feCTr = createNS('feComponentTransfer');\n          feCTr.setAttribute('in', 'SourceGraphic');\n          fil.appendChild(feCTr);\n          var feFunc = createNS('feFuncA');\n          feFunc.setAttribute('type', 'table');\n          feFunc.setAttribute('tableValues', '1.0 0.0');\n          feCTr.appendChild(feFunc); ////\n\n          this.globalData.defs.appendChild(fil);\n          var alphaRect = createNS('rect');\n          alphaRect.setAttribute('width', this.comp.data.w);\n          alphaRect.setAttribute('height', this.comp.data.h);\n          alphaRect.setAttribute('x', '0');\n          alphaRect.setAttribute('y', '0');\n          alphaRect.setAttribute('fill', '#ffffff');\n          alphaRect.setAttribute('opacity', '0');\n          maskGrouper.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');\n          maskGrouper.appendChild(alphaRect);\n          maskGrouper.appendChild(this.layerElement);\n          layerElementParent = maskGrouper;\n\n          if (!featureSupport.maskType) {\n            maskGroup.setAttribute('mask-type', 'luminance');\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS('g');\n            maskGrouper.appendChild(alphaRect);\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            maskGrouper.appendChild(gg);\n          }\n\n          this.globalData.defs.appendChild(maskGroup);\n        }\n      } else if (this.data.tt) {\n        this.matteElement.appendChild(this.layerElement);\n        layerElementParent = this.matteElement;\n        this.baseElement = this.matteElement;\n      } else {\n        this.baseElement = this.layerElement;\n      }\n\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln);\n      }\n\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl);\n      } //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\n\n\n      if (this.data.ty === 0 && !this.data.hd) {\n        var cp = createNS('clipPath');\n        var pt = createNS('path');\n        pt.setAttribute('d', 'M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\n        var clipId = createElementID();\n        cp.setAttribute('id', clipId);\n        cp.appendChild(pt);\n        this.globalData.defs.appendChild(cp);\n\n        if (this.checkMasks()) {\n          var cpGroup = createNS('g');\n          cpGroup.setAttribute('clip-path', 'url(' + locationHref + '#' + clipId + ')');\n          cpGroup.appendChild(this.layerElement);\n          this.transformedElement = cpGroup;\n\n          if (layerElementParent) {\n            layerElementParent.appendChild(this.transformedElement);\n          } else {\n            this.baseElement = this.transformedElement;\n          }\n        } else {\n          this.layerElement.setAttribute('clip-path', 'url(' + locationHref + '#' + clipId + ')');\n        }\n      }\n\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function renderElement() {\n      if (this.finalTransform._matMdf) {\n        this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\n      }\n\n      if (this.finalTransform._opMdf) {\n        this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\n      }\n    },\n    destroyBaseElement: function destroyBaseElement() {\n      this.layerElement = null;\n      this.matteElement = null;\n      this.maskManager.destroy();\n    },\n    getBaseElement: function getBaseElement() {\n      if (this.data.hd) {\n        return null;\n      }\n\n      return this.baseElement;\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n      this.renderableEffectsManager = new SVGEffects(this);\n    },\n    setMatte: function setMatte(id) {\n      if (!this.matteElement) {\n        return;\n      }\n\n      this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\n    }\n  };\n\n  function IShapeElement() {}\n\n  IShapeElement.prototype = {\n    addShapeToModifiers: function addShapeToModifiers(data) {\n      var i,\n          len = this.shapeModifiers.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.shapeModifiers[i].addShape(data);\n      }\n    },\n    isShapeInAnimatedModifiers: function isShapeInAnimatedModifiers(data) {\n      var i = 0,\n          len = this.shapeModifiers.length;\n\n      while (i < len) {\n        if (this.shapeModifiers[i].isAnimatedWithShape(data)) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    renderModifiers: function renderModifiers() {\n      if (!this.shapeModifiers.length) {\n        return;\n      }\n\n      var i,\n          len = this.shapes.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].sh.reset();\n      }\n\n      len = this.shapeModifiers.length;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        this.shapeModifiers[i].processShapes(this._isFirstFrame);\n      }\n    },\n    lcEnum: {\n      '1': 'butt',\n      '2': 'round',\n      '3': 'square'\n    },\n    ljEnum: {\n      '1': 'miter',\n      '2': 'round',\n      '3': 'bevel'\n    },\n    searchProcessedElement: function searchProcessedElement(elem) {\n      var elements = this.processedElements;\n      var i = 0,\n          len = elements.length;\n\n      while (i < len) {\n        if (elements[i].elem === elem) {\n          return elements[i].pos;\n        }\n\n        i += 1;\n      }\n\n      return 0;\n    },\n    addProcessedElement: function addProcessedElement(elem, pos) {\n      var elements = this.processedElements;\n      var i = elements.length;\n\n      while (i) {\n        i -= 1;\n\n        if (elements[i].elem === elem) {\n          elements[i].pos = pos;\n          return;\n        }\n      }\n\n      elements.push(new ProcessedElement(elem, pos));\n    },\n    prepareFrame: function prepareFrame(num) {\n      this.prepareRenderableFrame(num);\n      this.prepareProperties(num, this.isInRange);\n    }\n  };\n\n  function ITextElement() {}\n\n  ITextElement.prototype.initElement = function (data, globalData, comp) {\n    this.lettersChangedFlag = true;\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\n    this.initTransform(data, globalData, comp);\n    this.initHierarchy();\n    this.initRenderable();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n    this.createContent();\n    this.hide();\n    this.textAnimator.searchProperties(this.dynamicProperties);\n  };\n\n  ITextElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n\n    if (this.textProperty._mdf || this.textProperty._isFirstFrame) {\n      this.buildNewText();\n      this.textProperty._isFirstFrame = false;\n      this.textProperty._mdf = false;\n    }\n  };\n\n  ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\n    var j,\n        jLen = shapes.length;\n    var k, kLen, pathNodes;\n    var shapeStr = '';\n\n    for (j = 0; j < jLen; j += 1) {\n      pathNodes = shapes[j].ks.k;\n      shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\n    }\n\n    return shapeStr;\n  };\n\n  ITextElement.prototype.updateDocumentData = function (newData, index) {\n    this.textProperty.updateDocumentData(newData, index);\n  };\n\n  ITextElement.prototype.canResizeFont = function (_canResize) {\n    this.textProperty.canResizeFont(_canResize);\n  };\n\n  ITextElement.prototype.setMinimumFontSize = function (_fontSize) {\n    this.textProperty.setMinimumFontSize(_fontSize);\n  };\n\n  ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\n    if (documentData.ps) {\n      matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n    }\n\n    matrixHelper.translate(0, -documentData.ls, 0);\n\n    switch (documentData.j) {\n      case 1:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);\n        break;\n\n      case 2:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);\n        break;\n    }\n\n    matrixHelper.translate(xPos, yPos, 0);\n  };\n\n  ITextElement.prototype.buildColor = function (colorData) {\n    return 'rgb(' + Math.round(colorData[0] * 255) + ',' + Math.round(colorData[1] * 255) + ',' + Math.round(colorData[2] * 255) + ')';\n  };\n\n  ITextElement.prototype.emptyProp = new LetterProps();\n\n  ITextElement.prototype.destroy = function () {};\n\n  function ICompElement() {}\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\n\n  ICompElement.prototype.initElement = function (data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initTransform(data, globalData, comp);\n    this.initRenderable();\n    this.initHierarchy();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n\n    if (this.data.xt || !globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n\n    this.hide();\n  };\n  /*ICompElement.prototype.hide = function(){\r\n      if(!this.hidden){\r\n          this.hideElement();\r\n          var i,len = this.elements.length;\r\n          for( i = 0; i < len; i+=1 ){\r\n              if(this.elements[i]){\r\n                  this.elements[i].hide();\r\n              }\r\n          }\r\n      }\r\n  };*/\n\n\n  ICompElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n\n    if (!this.isInRange && !this.data.xt) {\n      return;\n    }\n\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n\n      if (timeRemapped === this.data.op) {\n        timeRemapped = this.data.op - 1;\n      }\n\n      this.renderedFrame = timeRemapped;\n    } else {\n      this.renderedFrame = num / this.data.sr;\n    }\n\n    var i,\n        len = this.elements.length;\n\n    if (!this.completeLayers) {\n      this.checkLayers(this.renderedFrame);\n    } //This iteration needs to be backwards because of how expressions connect between each other\n\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\n\n        if (this.elements[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n\n  ICompElement.prototype.renderInnerContent = function () {\n    var i,\n        len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n\n  ICompElement.prototype.setElements = function (elems) {\n    this.elements = elems;\n  };\n\n  ICompElement.prototype.getElements = function () {\n    return this.elements;\n  };\n\n  ICompElement.prototype.destroyElements = function () {\n    var i,\n        len = this.layers.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n  };\n\n  ICompElement.prototype.destroy = function () {\n    this.destroyElements();\n    this.destroyBaseElement();\n  };\n\n  function IImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initElement(data, globalData, comp);\n    this.sourceRect = {\n      top: 0,\n      left: 0,\n      width: this.assetData.w,\n      height: this.assetData.h\n    };\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);\n\n  IImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.innerElem = createNS('image');\n    this.innerElem.setAttribute('width', this.assetData.w + \"px\");\n    this.innerElem.setAttribute('height', this.assetData.h + \"px\");\n    this.innerElem.setAttribute('preserveAspectRatio', this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\n    this.layerElement.appendChild(this.innerElem);\n  };\n\n  IImageElement.prototype.sourceRectAtTime = function () {\n    return this.sourceRect;\n  };\n\n  function ISolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([IImageElement], ISolidElement);\n\n  ISolidElement.prototype.createContent = function () {\n    var rect = createNS('rect'); ////rect.style.width = this.data.sw;\n    ////rect.style.height = this.data.sh;\n    ////rect.style.fill = this.data.sc;\n\n    rect.setAttribute('width', this.data.sw);\n    rect.setAttribute('height', this.data.sh);\n    rect.setAttribute('fill', this.data.sc);\n    this.layerElement.appendChild(rect);\n  };\n\n  function SVGCompElement(data, globalData, comp) {\n    this.layers = data.layers;\n    this.supports3d = true;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : []; //this.layerElement = createNS('g');\n\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\n\n  function SVGTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.renderType = 'svg';\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextElement);\n\n  SVGTextElement.prototype.createContent = function () {\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\n      this.textContainer = createNS('text');\n    }\n  };\n\n  SVGTextElement.prototype.buildTextContents = function (textArray) {\n    var i = 0,\n        len = textArray.length;\n    var textContents = [],\n        currentTextContent = '';\n\n    while (i < len) {\n      if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\n        textContents.push(currentTextContent);\n        currentTextContent = '';\n      } else {\n        currentTextContent += textArray[i];\n      }\n\n      i += 1;\n    }\n\n    textContents.push(currentTextContent);\n    return textContents;\n  };\n\n  SVGTextElement.prototype.buildNewText = function () {\n    var i, len;\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\n\n    if (documentData.fc) {\n      this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\n    } else {\n      this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\n    }\n\n    if (documentData.sc) {\n      this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\n      this.layerElement.setAttribute('stroke-width', documentData.sw);\n    }\n\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n\n    if (fontData.fClass) {\n      this.layerElement.setAttribute('class', fontData.fClass);\n    } else {\n      this.layerElement.setAttribute('font-family', fontData.fFamily);\n      var fWeight = documentData.fWeight,\n          fStyle = documentData.fStyle;\n      this.layerElement.setAttribute('font-style', fStyle);\n      this.layerElement.setAttribute('font-weight', fWeight);\n    }\n\n    var letters = documentData.l || [];\n    var usesGlyphs = !!this.globalData.fontManager.chars;\n    len = letters.length;\n    var tSpan;\n    var matrixHelper = this.mHelper;\n    var shapes,\n        shapeStr = '',\n        singleShape = this.data.singleShape;\n    var xPos = 0,\n        yPos = 0,\n        firstLine = true;\n    var trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n\n    if (singleShape && !usesGlyphs && !documentData.sz) {\n      var tElement = this.textContainer;\n      var justify = 'start';\n\n      switch (documentData.j) {\n        case 1:\n          justify = 'end';\n          break;\n\n        case 2:\n          justify = 'middle';\n          break;\n      }\n\n      tElement.setAttribute('text-anchor', justify);\n      tElement.setAttribute('letter-spacing', trackingOffset);\n      var textContent = this.buildTextContents(documentData.finalText);\n      len = textContent.length;\n      yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\n\n      for (i = 0; i < len; i += 1) {\n        tSpan = this.textSpans[i] || createNS('tspan');\n        tSpan.textContent = textContent[i];\n        tSpan.setAttribute('x', 0);\n        tSpan.setAttribute('y', yPos);\n        tSpan.style.display = 'inherit';\n        tElement.appendChild(tSpan);\n        this.textSpans[i] = tSpan;\n        yPos += documentData.finalLineHeight;\n      }\n\n      this.layerElement.appendChild(tElement);\n    } else {\n      var cachedSpansLength = this.textSpans.length;\n      var shapeData, charData;\n\n      for (i = 0; i < len; i += 1) {\n        if (!usesGlyphs || !singleShape || i === 0) {\n          tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs ? 'path' : 'text');\n\n          if (cachedSpansLength <= i) {\n            tSpan.setAttribute('stroke-linecap', 'butt');\n            tSpan.setAttribute('stroke-linejoin', 'round');\n            tSpan.setAttribute('stroke-miterlimit', '4');\n            this.textSpans[i] = tSpan;\n            this.layerElement.appendChild(tSpan);\n          }\n\n          tSpan.style.display = 'inherit';\n        }\n\n        matrixHelper.reset();\n        matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n\n        if (singleShape) {\n          if (letters[i].n) {\n            xPos = -trackingOffset;\n            yPos += documentData.yOffset;\n            yPos += firstLine ? 1 : 0;\n            firstLine = false;\n          }\n\n          this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n          xPos += letters[i].l || 0; //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\n\n          xPos += trackingOffset;\n        }\n\n        if (usesGlyphs) {\n          charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n          shapeData = charData && charData.data || {};\n          shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\n\n          if (!singleShape) {\n            tSpan.setAttribute('d', this.createPathShape(matrixHelper, shapes));\n          } else {\n            shapeStr += this.createPathShape(matrixHelper, shapes);\n          }\n        } else {\n          if (singleShape) {\n            tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\n          }\n\n          tSpan.textContent = letters[i].val;\n          tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n        } //\n\n      }\n\n      if (singleShape && tSpan) {\n        tSpan.setAttribute('d', shapeStr);\n      }\n    }\n\n    while (i < this.textSpans.length) {\n      this.textSpans[i].style.display = 'none';\n      i += 1;\n    }\n\n    this._sizeChanged = true;\n  };\n\n  SVGTextElement.prototype.sourceRectAtTime = function (time) {\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\n    this.renderInnerContent();\n\n    if (this._sizeChanged) {\n      this._sizeChanged = false;\n      var textBox = this.layerElement.getBBox();\n      this.bbox = {\n        top: textBox.y,\n        left: textBox.x,\n        width: textBox.width,\n        height: textBox.height\n      };\n    }\n\n    return this.bbox;\n  };\n\n  SVGTextElement.prototype.renderInnerContent = function () {\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n\n      if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\n        this._sizeChanged = true;\n        var i, len;\n        var renderedLetters = this.textAnimator.renderedLetters;\n        var letters = this.textProperty.currentData.l;\n        len = letters.length;\n        var renderedLetter, textSpan;\n\n        for (i = 0; i < len; i += 1) {\n          if (letters[i].n) {\n            continue;\n          }\n\n          renderedLetter = renderedLetters[i];\n          textSpan = this.textSpans[i];\n\n          if (renderedLetter._mdf.m) {\n            textSpan.setAttribute('transform', renderedLetter.m);\n          }\n\n          if (renderedLetter._mdf.o) {\n            textSpan.setAttribute('opacity', renderedLetter.o);\n          }\n\n          if (renderedLetter._mdf.sw) {\n            textSpan.setAttribute('stroke-width', renderedLetter.sw);\n          }\n\n          if (renderedLetter._mdf.sc) {\n            textSpan.setAttribute('stroke', renderedLetter.sc);\n          }\n\n          if (renderedLetter._mdf.fc) {\n            textSpan.setAttribute('fill', renderedLetter.fc);\n          }\n        }\n      }\n    }\n  };\n\n  function SVGShapeElement(data, globalData, comp) {\n    //List of drawable elements\n    this.shapes = []; // Full shape data\n\n    this.shapesData = data.shapes; //List of styles that will be applied to shapes\n\n    this.stylesList = []; //List of modifiers that will be applied to shapes\n\n    this.shapeModifiers = []; //List of items in shape tree\n\n    this.itemsData = []; //List of items in previous shape tree\n\n    this.processedElements = []; // List of animated components\n\n    this.animatedContents = [];\n    this.initElement(data, globalData, comp); //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n\n    this.prevViewData = []; //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n  }\n\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);\n\n  SVGShapeElement.prototype.initSecondaryElement = function () {};\n\n  SVGShapeElement.prototype.identityMatrix = new Matrix();\n\n  SVGShapeElement.prototype.buildExpressionInterface = function () {};\n\n  SVGShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n  };\n  /*\r\n  This method searches for multiple shapes that affect a single element and one of them is animated\r\n  */\n\n\n  SVGShapeElement.prototype.filterUniqueShapes = function () {\n    var i,\n        len = this.shapes.length,\n        shape;\n    var j,\n        jLen = this.stylesList.length;\n    var style,\n        count = 0;\n    var tempShapes = [];\n    var areAnimated = false;\n\n    for (j = 0; j < jLen; j += 1) {\n      style = this.stylesList[j];\n      areAnimated = false;\n      tempShapes.length = 0;\n\n      for (i = 0; i < len; i += 1) {\n        shape = this.shapes[i];\n\n        if (shape.styles.indexOf(style) !== -1) {\n          tempShapes.push(shape);\n          areAnimated = shape._isAnimated || areAnimated;\n        }\n      }\n\n      if (tempShapes.length > 1 && areAnimated) {\n        this.setShapesAsAnimated(tempShapes);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {\n    var i,\n        len = shapes.length;\n\n    for (i = 0; i < len; i += 1) {\n      shapes[i].setAsAnimated();\n    }\n  };\n\n  SVGShapeElement.prototype.createStyleElement = function (data, level) {\n    //TODO: prevent drawing of hidden styles\n    var elementData;\n    var styleOb = new SVGStyleData(data, level);\n    var pathElement = styleOb.pElem;\n\n    if (data.ty === 'st') {\n      elementData = new SVGStrokeStyleData(this, data, styleOb);\n    } else if (data.ty === 'fl') {\n      elementData = new SVGFillStyleData(this, data, styleOb);\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\n      elementData = new gradientConstructor(this, data, styleOb);\n      this.globalData.defs.appendChild(elementData.gf);\n\n      if (elementData.maskId) {\n        this.globalData.defs.appendChild(elementData.ms);\n        this.globalData.defs.appendChild(elementData.of);\n        pathElement.setAttribute('mask', 'url(' + locationHref + '#' + elementData.maskId + ')');\n      }\n    }\n\n    if (data.ty === 'st' || data.ty === 'gs') {\n      pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\n      pathElement.setAttribute('stroke-linejoin', this.ljEnum[data.lj] || 'round');\n      pathElement.setAttribute('fill-opacity', '0');\n\n      if (data.lj === 1) {\n        pathElement.setAttribute('stroke-miterlimit', data.ml);\n      }\n    }\n\n    if (data.r === 2) {\n      pathElement.setAttribute('fill-rule', 'evenodd');\n    }\n\n    if (data.ln) {\n      pathElement.setAttribute('id', data.ln);\n    }\n\n    if (data.cl) {\n      pathElement.setAttribute('class', data.cl);\n    }\n\n    if (data.bm) {\n      pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\n    }\n\n    this.stylesList.push(styleOb);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createGroupElement = function (data) {\n    var elementData = new ShapeGroupData();\n\n    if (data.ln) {\n      elementData.gr.setAttribute('id', data.ln);\n    }\n\n    if (data.cl) {\n      elementData.gr.setAttribute('class', data.cl);\n    }\n\n    if (data.bm) {\n      elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\n    }\n\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createTransformElement = function (data, container) {\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this);\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.createShapeElement = function (data, ownTransformers, level) {\n    var ty = 4;\n\n    if (data.ty === 'rc') {\n      ty = 5;\n    } else if (data.ty === 'el') {\n      ty = 6;\n    } else if (data.ty === 'sr') {\n      ty = 7;\n    }\n\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this);\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n\n  SVGShapeElement.prototype.addToAnimatedContents = function (data, element) {\n    var i = 0,\n        len = this.animatedContents.length;\n\n    while (i < len) {\n      if (this.animatedContents[i].element === element) {\n        return;\n      }\n\n      i += 1;\n    }\n\n    this.animatedContents.push({\n      fn: SVGElementsRenderer.createRenderFunction(data),\n      element: element,\n      data: data\n    });\n  };\n\n  SVGShapeElement.prototype.setElementStyles = function (elementData) {\n    var arr = elementData.styles;\n    var j,\n        jLen = this.stylesList.length;\n\n    for (j = 0; j < jLen; j += 1) {\n      if (!this.stylesList[j].closed) {\n        arr.push(this.stylesList[j]);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i,\n        len = this.itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n    len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n\n    this.renderModifiers();\n  };\n\n  SVGShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, container, level, transformers, render) {\n    var ownTransformers = [].concat(transformers);\n    var i,\n        len = arr.length - 1;\n    var j, jLen;\n    var ownStyles = [],\n        ownModifiers = [],\n        styleOb,\n        currentTransform,\n        modifier,\n        processedPos;\n\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n\n      if (!processedPos) {\n        arr[i]._render = render;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n\n      if (arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], level);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n\n        if (arr[i]._render) {\n          container.appendChild(itemsData[i].style.pElem);\n        }\n\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty == 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);\n\n        if (arr[i]._render) {\n          container.appendChild(itemsData[i].gr);\n        }\n      } else if (arr[i].ty == 'tr') {\n        if (!processedPos) {\n          itemsData[i] = this.createTransformElement(arr[i], container);\n        }\n\n        currentTransform = itemsData[i].transform;\n        ownTransformers.push(currentTransform);\n      } else if (arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\n        }\n\n        this.setElementStyles(itemsData[i]);\n      } else if (arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty == 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          render = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n\n        ownModifiers.push(modifier);\n      }\n\n      this.addProcessedElement(arr[i], i + 1);\n    }\n\n    len = ownStyles.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownStyles[i].closed = true;\n    }\n\n    len = ownModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n\n  SVGShapeElement.prototype.renderInnerContent = function () {\n    this.renderModifiers();\n    var i,\n        len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.stylesList[i].reset();\n    }\n\n    this.renderShape();\n\n    for (i = 0; i < len; i += 1) {\n      if (this.stylesList[i]._mdf || this._isFirstFrame) {\n        if (this.stylesList[i].msElem) {\n          this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d); //Adding M0 0 fixes same mask bug on all browsers\n\n          this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\n        }\n\n        this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.renderShape = function () {\n    var i,\n        len = this.animatedContents.length;\n    var animatedContent;\n\n    for (i = 0; i < len; i += 1) {\n      animatedContent = this.animatedContents[i];\n\n      if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\n        animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\n      }\n    }\n  };\n\n  SVGShapeElement.prototype.destroy = function () {\n    this.destroyBaseElement();\n    this.shapesData = null;\n    this.itemsData = null;\n  };\n\n  function SVGTintFilter(filter, filterManager) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\n    feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', 'f1');\n    filter.appendChild(feColorMatrix);\n    feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', 'f2');\n    filter.appendChild(feColorMatrix);\n    this.matrixFilter = feColorMatrix;\n\n    if (filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k) {\n      var feMerge = createNS('feMerge');\n      filter.appendChild(feMerge);\n      var feMergeNode;\n      feMergeNode = createNS('feMergeNode');\n      feMergeNode.setAttribute('in', 'SourceGraphic');\n      feMerge.appendChild(feMergeNode);\n      feMergeNode = createNS('feMergeNode');\n      feMergeNode.setAttribute('in', 'f2');\n      feMerge.appendChild(feMergeNode);\n    }\n  }\n\n  SVGTintFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var colorBlack = this.filterManager.effectElements[0].p.v;\n      var colorWhite = this.filterManager.effectElements[1].p.v;\n      var opacity = this.filterManager.effectElements[2].p.v / 100;\n      this.matrixFilter.setAttribute('values', colorWhite[0] - colorBlack[0] + ' 0 0 0 ' + colorBlack[0] + ' ' + (colorWhite[1] - colorBlack[1]) + ' 0 0 0 ' + colorBlack[1] + ' ' + (colorWhite[2] - colorBlack[2]) + ' 0 0 0 ' + colorBlack[2] + ' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGFillFilter(filter, filterManager) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n    feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n    filter.appendChild(feColorMatrix);\n    this.matrixFilter = feColorMatrix;\n  }\n\n  SVGFillFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var color = this.filterManager.effectElements[2].p.v;\n      var opacity = this.filterManager.effectElements[6].p.v;\n      this.matrixFilter.setAttribute('values', '0 0 0 0 ' + color[0] + ' 0 0 0 0 ' + color[1] + ' 0 0 0 0 ' + color[2] + ' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGStrokeEffect(elem, filterManager) {\n    this.initialized = false;\n    this.filterManager = filterManager;\n    this.elem = elem;\n    this.paths = [];\n  }\n\n  SVGStrokeEffect.prototype.initialize = function () {\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n    var path, groupPath, i, len;\n\n    if (this.filterManager.effectElements[1].p.v === 1) {\n      len = this.elem.maskManager.masksProperties.length;\n      i = 0;\n    } else {\n      i = this.filterManager.effectElements[0].p.v - 1;\n      len = i + 1;\n    }\n\n    groupPath = createNS('g');\n    groupPath.setAttribute('fill', 'none');\n    groupPath.setAttribute('stroke-linecap', 'round');\n    groupPath.setAttribute('stroke-dashoffset', 1);\n\n    for (i; i < len; i += 1) {\n      path = createNS('path');\n      groupPath.appendChild(path);\n      this.paths.push({\n        p: path,\n        m: i\n      });\n    }\n\n    if (this.filterManager.effectElements[10].p.v === 3) {\n      var mask = createNS('mask');\n      var id = createElementID();\n      mask.setAttribute('id', id);\n      mask.setAttribute('mask-type', 'alpha');\n      mask.appendChild(groupPath);\n      this.elem.globalData.defs.appendChild(mask);\n      var g = createNS('g');\n      g.setAttribute('mask', 'url(' + locationHref + '#' + id + ')');\n\n      while (elemChildren[0]) {\n        g.appendChild(elemChildren[0]);\n      }\n\n      this.elem.layerElement.appendChild(g);\n      this.masker = mask;\n      groupPath.setAttribute('stroke', '#fff');\n    } else if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\n      if (this.filterManager.effectElements[10].p.v === 2) {\n        elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\n\n        while (elemChildren.length) {\n          this.elem.layerElement.removeChild(elemChildren[0]);\n        }\n      }\n\n      this.elem.layerElement.appendChild(groupPath);\n      this.elem.layerElement.removeAttribute('mask');\n      groupPath.setAttribute('stroke', '#fff');\n    }\n\n    this.initialized = true;\n    this.pathMasker = groupPath;\n  };\n\n  SVGStrokeEffect.prototype.renderFrame = function (forceRender) {\n    if (!this.initialized) {\n      this.initialize();\n    }\n\n    var i,\n        len = this.paths.length;\n    var mask, path;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.paths[i].m === -1) {\n        continue;\n      }\n\n      mask = this.elem.maskManager.viewData[this.paths[i].m];\n      path = this.paths[i].p;\n\n      if (forceRender || this.filterManager._mdf || mask.prop._mdf) {\n        path.setAttribute('d', mask.lastPath);\n      }\n\n      if (forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf) {\n        var dasharrayValue;\n\n        if (this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100) {\n          var s = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) / 100;\n          var e = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) / 100;\n          var l = path.getTotalLength();\n          dasharrayValue = '0 0 0 ' + l * s + ' ';\n          var lineLength = l * (e - s);\n          var segment = 1 + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v / 100;\n          var units = Math.floor(lineLength / segment);\n          var j;\n\n          for (j = 0; j < units; j += 1) {\n            dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v / 100 + ' ';\n          }\n\n          dasharrayValue += '0 ' + l * 10 + ' 0 0';\n        } else {\n          dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v / 100;\n        }\n\n        path.setAttribute('stroke-dasharray', dasharrayValue);\n      }\n    }\n\n    if (forceRender || this.filterManager.effectElements[4].p._mdf) {\n      this.pathMasker.setAttribute('stroke-width', this.filterManager.effectElements[4].p.v * 2);\n    }\n\n    if (forceRender || this.filterManager.effectElements[6].p._mdf) {\n      this.pathMasker.setAttribute('opacity', this.filterManager.effectElements[6].p.v);\n    }\n\n    if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\n      if (forceRender || this.filterManager.effectElements[3].p._mdf) {\n        var color = this.filterManager.effectElements[3].p.v;\n        this.pathMasker.setAttribute('stroke', 'rgb(' + bm_floor(color[0] * 255) + ',' + bm_floor(color[1] * 255) + ',' + bm_floor(color[2] * 255) + ')');\n      }\n    }\n  };\n\n  function SVGTritoneFilter(filter, filterManager) {\n    this.filterManager = filterManager;\n    var feColorMatrix = createNS('feColorMatrix');\n    feColorMatrix.setAttribute('type', 'matrix');\n    feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\n    feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\n    feColorMatrix.setAttribute('result', 'f1');\n    filter.appendChild(feColorMatrix);\n    var feComponentTransfer = createNS('feComponentTransfer');\n    feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n    filter.appendChild(feComponentTransfer);\n    this.matrixFilter = feComponentTransfer;\n    var feFuncR = createNS('feFuncR');\n    feFuncR.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncR);\n    this.feFuncR = feFuncR;\n    var feFuncG = createNS('feFuncG');\n    feFuncG.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncG);\n    this.feFuncG = feFuncG;\n    var feFuncB = createNS('feFuncB');\n    feFuncB.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFuncB);\n    this.feFuncB = feFuncB;\n  }\n\n  SVGTritoneFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var color1 = this.filterManager.effectElements[0].p.v;\n      var color2 = this.filterManager.effectElements[1].p.v;\n      var color3 = this.filterManager.effectElements[2].p.v;\n      var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\n      var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\n      var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\n      this.feFuncR.setAttribute('tableValues', tableR);\n      this.feFuncG.setAttribute('tableValues', tableG);\n      this.feFuncB.setAttribute('tableValues', tableB); //var opacity = this.filterManager.effectElements[2].p.v/100;\n      //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\n    }\n  };\n\n  function SVGProLevelsFilter(filter, filterManager) {\n    this.filterManager = filterManager;\n    var effectElements = this.filterManager.effectElements;\n    var feComponentTransfer = createNS('feComponentTransfer');\n    var feFuncR, feFuncG, feFuncB;\n\n    if (effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1) {\n      this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\n    }\n\n    if (effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1) {\n      this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\n    }\n\n    if (effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1) {\n      this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\n    }\n\n    if (effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1) {\n      this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\n    }\n\n    if (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) {\n      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n      filter.appendChild(feComponentTransfer);\n      feComponentTransfer = createNS('feComponentTransfer');\n    }\n\n    if (effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1) {\n      feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\n      filter.appendChild(feComponentTransfer);\n      this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\n      this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\n      this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\n    }\n  }\n\n  SVGProLevelsFilter.prototype.createFeFunc = function (type, feComponentTransfer) {\n    var feFunc = createNS(type);\n    feFunc.setAttribute('type', 'table');\n    feComponentTransfer.appendChild(feFunc);\n    return feFunc;\n  };\n\n  SVGProLevelsFilter.prototype.getTableValue = function (inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\n    var cnt = 0;\n    var segments = 256;\n    var perc;\n    var min = Math.min(inputBlack, inputWhite);\n    var max = Math.max(inputBlack, inputWhite);\n    var table = Array.call(null, {\n      length: segments\n    });\n    var colorValue;\n    var pos = 0;\n    var outputDelta = outputWhite - outputBlack;\n    var inputDelta = inputWhite - inputBlack;\n\n    while (cnt <= 256) {\n      perc = cnt / 256;\n\n      if (perc <= min) {\n        colorValue = inputDelta < 0 ? outputWhite : outputBlack;\n      } else if (perc >= max) {\n        colorValue = inputDelta < 0 ? outputBlack : outputWhite;\n      } else {\n        colorValue = outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma);\n      }\n\n      table[pos++] = colorValue;\n      cnt += 256 / (segments - 1);\n    }\n\n    return table.join(' ');\n  };\n\n  SVGProLevelsFilter.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      var val, cnt, perc, bezier;\n      var effectElements = this.filterManager.effectElements;\n\n      if (this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)) {\n        val = this.getTableValue(effectElements[3].p.v, effectElements[4].p.v, effectElements[5].p.v, effectElements[6].p.v, effectElements[7].p.v);\n        this.feFuncRComposed.setAttribute('tableValues', val);\n        this.feFuncGComposed.setAttribute('tableValues', val);\n        this.feFuncBComposed.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)) {\n        val = this.getTableValue(effectElements[10].p.v, effectElements[11].p.v, effectElements[12].p.v, effectElements[13].p.v, effectElements[14].p.v);\n        this.feFuncR.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)) {\n        val = this.getTableValue(effectElements[17].p.v, effectElements[18].p.v, effectElements[19].p.v, effectElements[20].p.v, effectElements[21].p.v);\n        this.feFuncG.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)) {\n        val = this.getTableValue(effectElements[24].p.v, effectElements[25].p.v, effectElements[26].p.v, effectElements[27].p.v, effectElements[28].p.v);\n        this.feFuncB.setAttribute('tableValues', val);\n      }\n\n      if (this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)) {\n        val = this.getTableValue(effectElements[31].p.v, effectElements[32].p.v, effectElements[33].p.v, effectElements[34].p.v, effectElements[35].p.v);\n        this.feFuncA.setAttribute('tableValues', val);\n      }\n    }\n  };\n\n  function SVGDropShadowEffect(filter, filterManager) {\n    filter.setAttribute('x', '-100%');\n    filter.setAttribute('y', '-100%');\n    filter.setAttribute('width', '400%');\n    filter.setAttribute('height', '400%');\n    this.filterManager = filterManager;\n    var feGaussianBlur = createNS('feGaussianBlur');\n    feGaussianBlur.setAttribute('in', 'SourceAlpha');\n    feGaussianBlur.setAttribute('result', 'drop_shadow_1');\n    feGaussianBlur.setAttribute('stdDeviation', '0');\n    this.feGaussianBlur = feGaussianBlur;\n    filter.appendChild(feGaussianBlur);\n    var feOffset = createNS('feOffset');\n    feOffset.setAttribute('dx', '25');\n    feOffset.setAttribute('dy', '0');\n    feOffset.setAttribute('in', 'drop_shadow_1');\n    feOffset.setAttribute('result', 'drop_shadow_2');\n    this.feOffset = feOffset;\n    filter.appendChild(feOffset);\n    var feFlood = createNS('feFlood');\n    feFlood.setAttribute('flood-color', '#00ff00');\n    feFlood.setAttribute('flood-opacity', '1');\n    feFlood.setAttribute('result', 'drop_shadow_3');\n    this.feFlood = feFlood;\n    filter.appendChild(feFlood);\n    var feComposite = createNS('feComposite');\n    feComposite.setAttribute('in', 'drop_shadow_3');\n    feComposite.setAttribute('in2', 'drop_shadow_2');\n    feComposite.setAttribute('operator', 'in');\n    feComposite.setAttribute('result', 'drop_shadow_4');\n    filter.appendChild(feComposite);\n    var feMerge = createNS('feMerge');\n    filter.appendChild(feMerge);\n    var feMergeNode;\n    feMergeNode = createNS('feMergeNode');\n    feMerge.appendChild(feMergeNode);\n    feMergeNode = createNS('feMergeNode');\n    feMergeNode.setAttribute('in', 'SourceGraphic');\n    this.feMergeNode = feMergeNode;\n    this.feMerge = feMerge;\n    this.originalNodeAdded = false;\n    feMerge.appendChild(feMergeNode);\n  }\n\n  SVGDropShadowEffect.prototype.renderFrame = function (forceRender) {\n    if (forceRender || this.filterManager._mdf) {\n      if (forceRender || this.filterManager.effectElements[4].p._mdf) {\n        this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\n      }\n\n      if (forceRender || this.filterManager.effectElements[0].p._mdf) {\n        var col = this.filterManager.effectElements[0].p.v;\n        this.feFlood.setAttribute('flood-color', rgbToHex(Math.round(col[0] * 255), Math.round(col[1] * 255), Math.round(col[2] * 255)));\n      }\n\n      if (forceRender || this.filterManager.effectElements[1].p._mdf) {\n        this.feFlood.setAttribute('flood-opacity', this.filterManager.effectElements[1].p.v / 255);\n      }\n\n      if (forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {\n        var distance = this.filterManager.effectElements[3].p.v;\n        var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\n        var x = distance * Math.cos(angle);\n        var y = distance * Math.sin(angle);\n        this.feOffset.setAttribute('dx', x);\n        this.feOffset.setAttribute('dy', y);\n      }\n      /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n          if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n              this.feMerge.removeChild(this.feMergeNode);\r\n              this.originalNodeAdded = false;\r\n          } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n              this.feMerge.appendChild(this.feMergeNode);\r\n              this.originalNodeAdded = true;\r\n          }\r\n      }*/\n\n    }\n  };\n\n  var _svgMatteSymbols = [];\n\n  function SVGMatte3Effect(filterElem, filterManager, elem) {\n    this.initialized = false;\n    this.filterManager = filterManager;\n    this.filterElem = filterElem;\n    this.elem = elem;\n    elem.matteElement = createNS('g');\n    elem.matteElement.appendChild(elem.layerElement);\n    elem.matteElement.appendChild(elem.transformedElement);\n    elem.baseElement = elem.matteElement;\n  }\n\n  SVGMatte3Effect.prototype.findSymbol = function (mask) {\n    var i = 0,\n        len = _svgMatteSymbols.length;\n\n    while (i < len) {\n      if (_svgMatteSymbols[i] === mask) {\n        return _svgMatteSymbols[i];\n      }\n\n      i += 1;\n    }\n\n    return null;\n  };\n\n  SVGMatte3Effect.prototype.replaceInParent = function (mask, symbolId) {\n    var parentNode = mask.layerElement.parentNode;\n\n    if (!parentNode) {\n      return;\n    }\n\n    var children = parentNode.children;\n    var i = 0,\n        len = children.length;\n\n    while (i < len) {\n      if (children[i] === mask.layerElement) {\n        break;\n      }\n\n      i += 1;\n    }\n\n    var nextChild;\n\n    if (i <= len - 2) {\n      nextChild = children[i + 1];\n    }\n\n    var useElem = createNS('use');\n    useElem.setAttribute('href', '#' + symbolId);\n\n    if (nextChild) {\n      parentNode.insertBefore(useElem, nextChild);\n    } else {\n      parentNode.appendChild(useElem);\n    }\n  };\n\n  SVGMatte3Effect.prototype.setElementAsMask = function (elem, mask) {\n    if (!this.findSymbol(mask)) {\n      var symbolId = createElementID();\n      var masker = createNS('mask');\n      masker.setAttribute('id', mask.layerId);\n      masker.setAttribute('mask-type', 'alpha');\n\n      _svgMatteSymbols.push(mask);\n\n      var defs = elem.globalData.defs;\n      defs.appendChild(masker);\n      var symbol = createNS('symbol');\n      symbol.setAttribute('id', symbolId);\n      this.replaceInParent(mask, symbolId);\n      symbol.appendChild(mask.layerElement);\n      defs.appendChild(symbol);\n      var useElem = createNS('use');\n      useElem.setAttribute('href', '#' + symbolId);\n      masker.appendChild(useElem);\n      mask.data.hd = false;\n      mask.show();\n    }\n\n    elem.setMatte(mask.layerId);\n  };\n\n  SVGMatte3Effect.prototype.initialize = function () {\n    var ind = this.filterManager.effectElements[0].p.v;\n    var elements = this.elem.comp.elements;\n    var i = 0,\n        len = elements.length;\n\n    while (i < len) {\n      if (elements[i] && elements[i].data.ind === ind) {\n        this.setElementAsMask(this.elem, elements[i]);\n      }\n\n      i += 1;\n    }\n\n    this.initialized = true;\n  };\n\n  SVGMatte3Effect.prototype.renderFrame = function () {\n    if (!this.initialized) {\n      this.initialize();\n    }\n  };\n\n  function SVGEffects(elem) {\n    var i,\n        len = elem.data.ef ? elem.data.ef.length : 0;\n    var filId = createElementID();\n    var fil = filtersFactory.createFilter(filId);\n    var count = 0;\n    this.filters = [];\n    var filterManager;\n\n    for (i = 0; i < len; i += 1) {\n      filterManager = null;\n\n      if (elem.data.ef[i].ty === 20) {\n        count += 1;\n        filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\n      } else if (elem.data.ef[i].ty === 21) {\n        count += 1;\n        filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\n      } else if (elem.data.ef[i].ty === 22) {\n        filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\n      } else if (elem.data.ef[i].ty === 23) {\n        count += 1;\n        filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\n      } else if (elem.data.ef[i].ty === 24) {\n        count += 1;\n        filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\n      } else if (elem.data.ef[i].ty === 25) {\n        count += 1;\n        filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\n      } else if (elem.data.ef[i].ty === 28) {\n        //count += 1;\n        filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\n      }\n\n      if (filterManager) {\n        this.filters.push(filterManager);\n      }\n    }\n\n    if (count) {\n      elem.globalData.defs.appendChild(fil);\n      elem.layerElement.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');\n    }\n\n    if (this.filters.length) {\n      elem.addRenderableComponent(this);\n    }\n  }\n\n  SVGEffects.prototype.renderFrame = function (_isFirstFrame) {\n    var i,\n        len = this.filters.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.filters[i].renderFrame(_isFirstFrame);\n    }\n  };\n\n  function CVContextData() {\n    this.saved = [];\n    this.cArrPos = 0;\n    this.cTr = new Matrix();\n    this.cO = 1;\n    var i,\n        len = 15;\n    this.savedOp = createTypedArray('float32', len);\n\n    for (i = 0; i < len; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16);\n    }\n\n    this._length = len;\n  }\n\n  CVContextData.prototype.duplicate = function () {\n    var newLength = this._length * 2;\n    var currentSavedOp = this.savedOp;\n    this.savedOp = createTypedArray('float32', newLength);\n    this.savedOp.set(currentSavedOp);\n    var i = 0;\n\n    for (i = this._length; i < newLength; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16);\n    }\n\n    this._length = newLength;\n  };\n\n  CVContextData.prototype.reset = function () {\n    this.cArrPos = 0;\n    this.cTr.reset();\n    this.cO = 1;\n  };\n\n  function CVBaseElement() {}\n\n  CVBaseElement.prototype = {\n    createElements: function createElements() {},\n    initRendererElement: function initRendererElement() {},\n    createContainerElements: function createContainerElements() {\n      this.canvasContext = this.globalData.canvasContext;\n      this.renderableEffectsManager = new CVEffects(this);\n    },\n    createContent: function createContent() {},\n    setBlendMode: function setBlendMode() {\n      var globalData = this.globalData;\n\n      if (globalData.blendMode !== this.data.bm) {\n        globalData.blendMode = this.data.bm;\n        var blendModeValue = getBlendMode(this.data.bm);\n        globalData.canvasContext.globalCompositeOperation = blendModeValue;\n      }\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new CVMaskElement(this.data, this);\n    },\n    hideElement: function hideElement() {\n      if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n        this.hidden = true;\n      }\n    },\n    showElement: function showElement() {\n      if (this.isInRange && !this.isTransparent) {\n        this.hidden = false;\n        this._isFirstFrame = true;\n        this.maskManager._isFirstFrame = true;\n      }\n    },\n    renderFrame: function renderFrame() {\n      if (this.hidden || this.data.hd) {\n        return;\n      }\n\n      this.renderTransform();\n      this.renderRenderable();\n      this.setBlendMode();\n      this.globalData.renderer.save();\n      this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\n      this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\n      this.renderInnerContent();\n      this.globalData.renderer.restore();\n\n      if (this.maskManager.hasMasks) {\n        this.globalData.renderer.restore(true);\n      }\n\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function destroy() {\n      this.canvasContext = null;\n      this.data = null;\n      this.globalData = null;\n      this.maskManager.destroy();\n    },\n    mHelper: new Matrix()\n  };\n  CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\n  CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\n\n  function CVImageElement(data, globalData, comp) {\n    this.failed = false;\n    this.assetData = globalData.getAssetData(data.refId);\n    this.img = globalData.imageLoader.getImage(this.assetData);\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\n  CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n\n  CVImageElement.prototype.createContent = function () {\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\n      var canvas = createTag('canvas');\n      canvas.width = this.assetData.w;\n      canvas.height = this.assetData.h;\n      var ctx = canvas.getContext('2d');\n      var imgW = this.img.width;\n      var imgH = this.img.height;\n      var imgRel = imgW / imgH;\n      var canvasRel = this.assetData.w / this.assetData.h;\n      var widthCrop, heightCrop;\n      var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\n\n      if (imgRel > canvasRel && par === 'xMidYMid slice' || imgRel < canvasRel && par !== 'xMidYMid slice') {\n        heightCrop = imgH;\n        widthCrop = heightCrop * canvasRel;\n      } else {\n        widthCrop = imgW;\n        heightCrop = widthCrop / canvasRel;\n      }\n\n      ctx.drawImage(this.img, (imgW - widthCrop) / 2, (imgH - heightCrop) / 2, widthCrop, heightCrop, 0, 0, this.assetData.w, this.assetData.h);\n      this.img = canvas;\n    }\n  };\n\n  CVImageElement.prototype.renderInnerContent = function (parentMatrix) {\n    if (this.failed) {\n      return;\n    }\n\n    this.canvasContext.drawImage(this.img, 0, 0);\n  };\n\n  CVImageElement.prototype.destroy = function () {\n    this.img = null;\n  };\n\n  function CVCompElement(data, globalData, comp) {\n    this.completeLayers = false;\n    this.layers = data.layers;\n    this.pendingElements = [];\n    this.elements = createSizedArray(this.layers.length);\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\n\n  CVCompElement.prototype.renderInnerContent = function () {\n    var i,\n        len = this.layers.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n\n  CVCompElement.prototype.destroy = function () {\n    var i,\n        len = this.layers.length;\n\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n\n    this.layers = null;\n    this.elements = null;\n  };\n\n  function CVMaskElement(data, element) {\n    this.data = data;\n    this.element = element;\n    this.masksProperties = this.data.masksProperties || [];\n    this.viewData = createSizedArray(this.masksProperties.length);\n    var i,\n        len = this.masksProperties.length,\n        hasMasks = false;\n\n    for (i = 0; i < len; i++) {\n      if (this.masksProperties[i].mode !== 'n') {\n        hasMasks = true;\n      }\n\n      this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);\n    }\n\n    this.hasMasks = hasMasks;\n\n    if (hasMasks) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n\n  CVMaskElement.prototype.renderFrame = function () {\n    if (!this.hasMasks) {\n      return;\n    }\n\n    var transform = this.element.finalTransform.mat;\n    var ctx = this.element.canvasContext;\n    var i,\n        len = this.masksProperties.length;\n    var pt, pts, data;\n    ctx.beginPath();\n\n    for (i = 0; i < len; i++) {\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.masksProperties[i].inv) {\n          ctx.moveTo(0, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\n          ctx.lineTo(0, this.element.globalData.compSize.h);\n          ctx.lineTo(0, 0);\n        }\n\n        data = this.viewData[i].v;\n        pt = transform.applyToPointArray(data.v[0][0], data.v[0][1], 0);\n        ctx.moveTo(pt[0], pt[1]);\n        var j,\n            jLen = data._length;\n\n        for (j = 1; j < jLen; j++) {\n          pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\n          ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n        }\n\n        pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\n        ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n      }\n    }\n\n    this.element.globalData.renderer.save(true);\n    ctx.clip();\n  };\n\n  CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\n\n  CVMaskElement.prototype.destroy = function () {\n    this.element = null;\n  };\n\n  function CVShapeElement(data, globalData, comp) {\n    this.shapes = [];\n    this.shapesData = data.shapes;\n    this.stylesList = [];\n    this.itemsData = [];\n    this.prevViewData = [];\n    this.shapeModifiers = [];\n    this.processedElements = [];\n    this.transformsManager = new ShapeTransformManager();\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement);\n  CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\n  CVShapeElement.prototype.transformHelper = {\n    opacity: 1,\n    _opMdf: false\n  };\n  CVShapeElement.prototype.dashResetter = [];\n\n  CVShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n  };\n\n  CVShapeElement.prototype.createStyleElement = function (data, transforms) {\n    var styleElem = {\n      data: data,\n      type: data.ty,\n      preTransforms: this.transformsManager.addTransformSequence(transforms),\n      transforms: [],\n      elements: [],\n      closed: data.hd === true\n    };\n    var elementData = {};\n\n    if (data.ty == 'fl' || data.ty == 'st') {\n      elementData.c = PropertyFactory.getProp(this, data.c, 1, 255, this);\n\n      if (!elementData.c.k) {\n        styleElem.co = 'rgb(' + bm_floor(elementData.c.v[0]) + ',' + bm_floor(elementData.c.v[1]) + ',' + bm_floor(elementData.c.v[2]) + ')';\n      }\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      elementData.s = PropertyFactory.getProp(this, data.s, 1, null, this);\n      elementData.e = PropertyFactory.getProp(this, data.e, 1, null, this);\n      elementData.h = PropertyFactory.getProp(this, data.h || {\n        k: 0\n      }, 0, 0.01, this);\n      elementData.a = PropertyFactory.getProp(this, data.a || {\n        k: 0\n      }, 0, degToRads, this);\n      elementData.g = new GradientProperty(this, data.g, this);\n    }\n\n    elementData.o = PropertyFactory.getProp(this, data.o, 0, 0.01, this);\n\n    if (data.ty == 'st' || data.ty == 'gs') {\n      styleElem.lc = this.lcEnum[data.lc] || 'round';\n      styleElem.lj = this.ljEnum[data.lj] || 'round';\n\n      if (data.lj == 1) {\n        styleElem.ml = data.ml;\n      }\n\n      elementData.w = PropertyFactory.getProp(this, data.w, 0, null, this);\n\n      if (!elementData.w.k) {\n        styleElem.wi = elementData.w.v;\n      }\n\n      if (data.d) {\n        var d = new DashProperty(this, data.d, 'canvas', this);\n        elementData.d = d;\n\n        if (!elementData.d.k) {\n          styleElem.da = elementData.d.dashArray;\n          styleElem.do = elementData.d.dashoffset[0];\n        }\n      }\n    } else {\n      styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\n    }\n\n    this.stylesList.push(styleElem);\n    elementData.style = styleElem;\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createGroupElement = function (data) {\n    var elementData = {\n      it: [],\n      prevViewData: []\n    };\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createTransformElement = function (data) {\n    var elementData = {\n      transform: {\n        opacity: 1,\n        _opMdf: false,\n        key: this.transformsManager.getNewKey(),\n        op: PropertyFactory.getProp(this, data.o, 0, 0.01, this),\n        mProps: TransformPropertyFactory.getTransformProperty(this, data, this)\n      }\n    };\n    return elementData;\n  };\n\n  CVShapeElement.prototype.createShapeElement = function (data) {\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    return elementData;\n  };\n\n  CVShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i,\n        len = this.itemsData.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n    len = this.dynamicProperties.length;\n\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n  };\n\n  CVShapeElement.prototype.addTransformToStyleList = function (transform) {\n    var i,\n        len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.push(transform);\n      }\n    }\n  };\n\n  CVShapeElement.prototype.removeTransformFromStyleList = function () {\n    var i,\n        len = this.stylesList.length;\n\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.pop();\n      }\n    }\n  };\n\n  CVShapeElement.prototype.closeStyles = function (styles) {\n    var i,\n        len = styles.length,\n        j,\n        jLen;\n\n    for (i = 0; i < len; i += 1) {\n      styles[i].closed = true;\n    }\n  };\n\n  CVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, shouldRender, transforms) {\n    var i,\n        len = arr.length - 1;\n    var j, jLen;\n    var ownStyles = [],\n        ownModifiers = [],\n        processedPos,\n        modifier,\n        currentTransform;\n    var ownTransforms = [].concat(transforms);\n\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n\n      if (!processedPos) {\n        arr[i]._shouldRender = shouldRender;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n\n      if (arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty == 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms);\n      } else if (arr[i].ty == 'tr') {\n        if (!processedPos) {\n          currentTransform = this.createTransformElement(arr[i]);\n          itemsData[i] = currentTransform;\n        }\n\n        ownTransforms.push(itemsData[i]);\n        this.addTransformToStyleList(itemsData[i]);\n      } else if (arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i]);\n        }\n      } else if (arr[i].ty == 'tm' || arr[i].ty == 'rd') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty == 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          shouldRender = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n\n        ownModifiers.push(modifier);\n      }\n\n      this.addProcessedElement(arr[i], i + 1);\n    }\n\n    this.removeTransformFromStyleList();\n    this.closeStyles(ownStyles);\n    len = ownModifiers.length;\n\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n\n  CVShapeElement.prototype.renderInnerContent = function () {\n    this.transformHelper.opacity = 1;\n    this.transformHelper._opMdf = false;\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n    this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);\n  };\n\n  CVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {\n    var props, groupMatrix;\n\n    if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\n      groupTransform.opacity = parentTransform.opacity;\n      groupTransform.opacity *= groupTransform.op.v;\n      groupTransform._opMdf = true;\n    }\n  };\n\n  CVShapeElement.prototype.drawLayer = function () {\n    var i,\n        len = this.stylesList.length;\n    var j,\n        jLen,\n        k,\n        kLen,\n        elems,\n        nodes,\n        renderer = this.globalData.renderer,\n        ctx = this.globalData.canvasContext,\n        type,\n        currentStyle;\n\n    for (i = 0; i < len; i += 1) {\n      currentStyle = this.stylesList[i];\n      type = currentStyle.type; //Skipping style when\n      //Stroke width equals 0\n      //style should not be rendered (extra unused repeaters)\n      //current opacity equals 0\n      //global opacity equals 0\n\n      if ((type === 'st' || type === 'gs') && currentStyle.wi === 0 || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0) {\n        continue;\n      }\n\n      renderer.save();\n      elems = currentStyle.elements;\n\n      if (type === 'st' || type === 'gs') {\n        ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\n        ctx.lineWidth = currentStyle.wi;\n        ctx.lineCap = currentStyle.lc;\n        ctx.lineJoin = currentStyle.lj;\n        ctx.miterLimit = currentStyle.ml || 0;\n      } else {\n        ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\n      }\n\n      renderer.ctxOpacity(currentStyle.coOp);\n\n      if (type !== 'st' && type !== 'gs') {\n        ctx.beginPath();\n      }\n\n      renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\n      jLen = elems.length;\n\n      for (j = 0; j < jLen; j += 1) {\n        if (type === 'st' || type === 'gs') {\n          ctx.beginPath();\n\n          if (currentStyle.da) {\n            ctx.setLineDash(currentStyle.da);\n            ctx.lineDashOffset = currentStyle.do;\n          }\n        }\n\n        nodes = elems[j].trNodes;\n        kLen = nodes.length;\n\n        for (k = 0; k < kLen; k += 1) {\n          if (nodes[k].t == 'm') {\n            ctx.moveTo(nodes[k].p[0], nodes[k].p[1]);\n          } else if (nodes[k].t == 'c') {\n            ctx.bezierCurveTo(nodes[k].pts[0], nodes[k].pts[1], nodes[k].pts[2], nodes[k].pts[3], nodes[k].pts[4], nodes[k].pts[5]);\n          } else {\n            ctx.closePath();\n          }\n        }\n\n        if (type === 'st' || type === 'gs') {\n          ctx.stroke();\n\n          if (currentStyle.da) {\n            ctx.setLineDash(this.dashResetter);\n          }\n        }\n      }\n\n      if (type !== 'st' && type !== 'gs') {\n        ctx.fill(currentStyle.r);\n      }\n\n      renderer.restore();\n    }\n  };\n\n  CVShapeElement.prototype.renderShape = function (parentTransform, items, data, isMain) {\n    var i,\n        len = items.length - 1;\n    var groupTransform;\n    groupTransform = parentTransform;\n\n    for (i = len; i >= 0; i -= 1) {\n      if (items[i].ty == 'tr') {\n        groupTransform = data[i].transform;\n        this.renderShapeTransform(parentTransform, groupTransform);\n      } else if (items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr') {\n        this.renderPath(items[i], data[i]);\n      } else if (items[i].ty == 'fl') {\n        this.renderFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty == 'st') {\n        this.renderStroke(items[i], data[i], groupTransform);\n      } else if (items[i].ty == 'gf' || items[i].ty == 'gs') {\n        this.renderGradientFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty == 'gr') {\n        this.renderShape(groupTransform, items[i].it, data[i].it);\n      } else if (items[i].ty == 'tm') {//\n      }\n    }\n\n    if (isMain) {\n      this.drawLayer();\n    }\n  };\n\n  CVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {\n    if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\n      var shapeNodes = styledShape.trNodes;\n      var paths = shape.paths;\n      var i,\n          len,\n          j,\n          jLen = paths._length;\n      shapeNodes.length = 0;\n      var groupTransformMat = styledShape.transforms.finalTransform;\n\n      for (j = 0; j < jLen; j += 1) {\n        var pathNodes = paths.shapes[j];\n\n        if (pathNodes && pathNodes.v) {\n          len = pathNodes._length;\n\n          for (i = 1; i < len; i += 1) {\n            if (i === 1) {\n              shapeNodes.push({\n                t: 'm',\n                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n              });\n            }\n\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\n            });\n          }\n\n          if (len === 1) {\n            shapeNodes.push({\n              t: 'm',\n              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n            });\n          }\n\n          if (pathNodes.c && len) {\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\n            });\n            shapeNodes.push({\n              t: 'z'\n            });\n          }\n        }\n      }\n\n      styledShape.trNodes = shapeNodes;\n    }\n  };\n\n  CVShapeElement.prototype.renderPath = function (pathData, itemData) {\n    if (pathData.hd !== true && pathData._shouldRender) {\n      var i,\n          len = itemData.styledShapes.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\n      }\n    }\n  };\n\n  CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = 'rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')';\n    }\n\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n  };\n\n  CVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n\n    if (!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf)) {\n      var ctx = this.globalData.canvasContext;\n      var grd;\n      var pt1 = itemData.s.v,\n          pt2 = itemData.e.v;\n\n      if (styleData.t === 1) {\n        grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\n      } else {\n        var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n        var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99 : itemData.h.v;\n        var dist = rad * percent;\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n        var grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\n      }\n\n      var i,\n          len = styleData.g.p;\n      var cValues = itemData.g.c;\n      var opacity = 1;\n\n      for (i = 0; i < len; i += 1) {\n        if (itemData.g._hasOpacity && itemData.g._collapsable) {\n          opacity = itemData.g.o[i * 2 + 1];\n        }\n\n        grd.addColorStop(cValues[i * 4] / 100, 'rgba(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ',' + opacity + ')');\n      }\n\n      styleElem.grd = grd;\n    }\n\n    styleElem.coOp = itemData.o.v * groupTransform.opacity;\n  };\n\n  CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var d = itemData.d;\n\n    if (d && (d._mdf || this._isFirstFrame)) {\n      styleElem.da = d.dashArray;\n      styleElem.do = d.dashoffset[0];\n    }\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = 'rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')';\n    }\n\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n\n    if (itemData.w._mdf || this._isFirstFrame) {\n      styleElem.wi = itemData.w.v;\n    }\n  };\n\n  CVShapeElement.prototype.destroy = function () {\n    this.shapesData = null;\n    this.globalData = null;\n    this.canvasContext = null;\n    this.stylesList.length = 0;\n    this.itemsData.length = 0;\n  };\n\n  function CVSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\n  CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n\n  CVSolidElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.fillStyle = this.data.sc;\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh); //\n  };\n\n  function CVTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.yOffset = 0;\n    this.fillColorAnim = false;\n    this.strokeColorAnim = false;\n    this.strokeWidthAnim = false;\n    this.stroke = false;\n    this.fill = false;\n    this.justifyOffset = 0;\n    this.currentRender = null;\n    this.renderType = 'canvas';\n    this.values = {\n      fill: 'rgba(0,0,0,0)',\n      stroke: 'rgba(0,0,0,0)',\n      sWidth: 0,\n      fValue: ''\n    };\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement);\n  CVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\n\n  CVTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var hasFill = false;\n\n    if (documentData.fc) {\n      hasFill = true;\n      this.values.fill = this.buildColor(documentData.fc);\n    } else {\n      this.values.fill = 'rgba(0,0,0,0)';\n    }\n\n    this.fill = hasFill;\n    var hasStroke = false;\n\n    if (documentData.sc) {\n      hasStroke = true;\n      this.values.stroke = this.buildColor(documentData.sc);\n      this.values.sWidth = documentData.sw;\n    }\n\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n    var i, len;\n    var letters = documentData.l;\n    var matrixHelper = this.mHelper;\n    this.stroke = hasStroke;\n    this.values.fValue = documentData.finalSize + 'px ' + this.globalData.fontManager.getFontByName(documentData.f).fFamily;\n    len = documentData.finalText.length; //this.tHelper.font = this.values.fValue;\n\n    var charData,\n        shapeData,\n        k,\n        kLen,\n        shapes,\n        j,\n        jLen,\n        pathNodes,\n        commands,\n        pathArr,\n        singleShape = this.data.singleShape;\n    var trackingOffset = documentData.tr / 1000 * documentData.finalSize;\n    var xPos = 0,\n        yPos = 0,\n        firstLine = true;\n    var cnt = 0;\n\n    for (i = 0; i < len; i += 1) {\n      charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n      shapeData = charData && charData.data || {};\n      matrixHelper.reset();\n\n      if (singleShape && letters[i].n) {\n        xPos = -trackingOffset;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        firstLine = false;\n      }\n\n      shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\n      jLen = shapes.length;\n      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n\n      if (singleShape) {\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n      }\n\n      commands = createSizedArray(jLen);\n\n      for (j = 0; j < jLen; j += 1) {\n        kLen = shapes[j].ks.k.i.length;\n        pathNodes = shapes[j].ks.k;\n        pathArr = [];\n\n        for (k = 1; k < kLen; k += 1) {\n          if (k == 1) {\n            pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n          }\n\n          pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0), matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0));\n        }\n\n        pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n        commands[j] = pathArr;\n      }\n\n      if (singleShape) {\n        xPos += letters[i].l;\n        xPos += trackingOffset;\n      }\n\n      if (this.textSpans[cnt]) {\n        this.textSpans[cnt].elem = commands;\n      } else {\n        this.textSpans[cnt] = {\n          elem: commands\n        };\n      }\n\n      cnt += 1;\n    }\n  };\n\n  CVTextElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    var finalMat = this.finalTransform.mat.props;\n    ctx.font = this.values.fValue;\n    ctx.lineCap = 'butt';\n    ctx.lineJoin = 'miter';\n    ctx.miterLimit = 4;\n\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n    }\n\n    var i, len, j, jLen, k, kLen;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter;\n    var lastFill = null,\n        lastStroke = null,\n        lastStrokeW = null,\n        commands,\n        pathArr;\n\n    for (i = 0; i < len; i += 1) {\n      if (letters[i].n) {\n        continue;\n      }\n\n      renderedLetter = renderedLetters[i];\n\n      if (renderedLetter) {\n        this.globalData.renderer.save();\n        this.globalData.renderer.ctxTransform(renderedLetter.p);\n        this.globalData.renderer.ctxOpacity(renderedLetter.o);\n      }\n\n      if (this.fill) {\n        if (renderedLetter && renderedLetter.fc) {\n          if (lastFill !== renderedLetter.fc) {\n            lastFill = renderedLetter.fc;\n            ctx.fillStyle = renderedLetter.fc;\n          }\n        } else if (lastFill !== this.values.fill) {\n          lastFill = this.values.fill;\n          ctx.fillStyle = this.values.fill;\n        }\n\n        commands = this.textSpans[i].elem;\n        jLen = commands.length;\n        this.globalData.canvasContext.beginPath();\n\n        for (j = 0; j < jLen; j += 1) {\n          pathArr = commands[j];\n          kLen = pathArr.length;\n          this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n\n          for (k = 2; k < kLen; k += 6) {\n            this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n          }\n        }\n\n        this.globalData.canvasContext.closePath();\n        this.globalData.canvasContext.fill(); ///ctx.fillText(this.textSpans[i].val,0,0);\n      }\n\n      if (this.stroke) {\n        if (renderedLetter && renderedLetter.sw) {\n          if (lastStrokeW !== renderedLetter.sw) {\n            lastStrokeW = renderedLetter.sw;\n            ctx.lineWidth = renderedLetter.sw;\n          }\n        } else if (lastStrokeW !== this.values.sWidth) {\n          lastStrokeW = this.values.sWidth;\n          ctx.lineWidth = this.values.sWidth;\n        }\n\n        if (renderedLetter && renderedLetter.sc) {\n          if (lastStroke !== renderedLetter.sc) {\n            lastStroke = renderedLetter.sc;\n            ctx.strokeStyle = renderedLetter.sc;\n          }\n        } else if (lastStroke !== this.values.stroke) {\n          lastStroke = this.values.stroke;\n          ctx.strokeStyle = this.values.stroke;\n        }\n\n        commands = this.textSpans[i].elem;\n        jLen = commands.length;\n        this.globalData.canvasContext.beginPath();\n\n        for (j = 0; j < jLen; j += 1) {\n          pathArr = commands[j];\n          kLen = pathArr.length;\n          this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n\n          for (k = 2; k < kLen; k += 6) {\n            this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n          }\n        }\n\n        this.globalData.canvasContext.closePath();\n        this.globalData.canvasContext.stroke(); ///ctx.strokeText(letters[i].val,0,0);\n      }\n\n      if (renderedLetter) {\n        this.globalData.renderer.restore();\n      }\n    }\n  };\n\n  function CVEffects() {}\n\n  CVEffects.prototype.renderFrame = function () {};\n\n  function HBaseElement(data, globalData, comp) {}\n\n  HBaseElement.prototype = {\n    checkBlendMode: function checkBlendMode() {},\n    initRendererElement: function initRendererElement() {\n      this.baseElement = createTag(this.data.tg || 'div');\n\n      if (this.data.hasMask) {\n        this.svgElement = createNS('svg');\n        this.layerElement = createNS('g');\n        this.maskedElement = this.layerElement;\n        this.svgElement.appendChild(this.layerElement);\n        this.baseElement.appendChild(this.svgElement);\n      } else {\n        this.layerElement = this.baseElement;\n      }\n\n      styleDiv(this.baseElement);\n    },\n    createContainerElements: function createContainerElements() {\n      this.renderableEffectsManager = new CVEffects(this);\n      this.transformedElement = this.baseElement;\n      this.maskedElement = this.layerElement;\n\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln);\n      }\n\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl);\n      }\n\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function renderElement() {\n      if (this.finalTransform._matMdf) {\n        this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();\n      }\n\n      if (this.finalTransform._opMdf) {\n        this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;\n      }\n    },\n    renderFrame: function renderFrame() {\n      //If it is exported as hidden (data.hd === true) no need to render\n      //If it is not visible no need to render\n      if (this.data.hd || this.hidden) {\n        return;\n      }\n\n      this.renderTransform();\n      this.renderRenderable();\n      this.renderElement();\n      this.renderInnerContent();\n\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function destroy() {\n      this.layerElement = null;\n      this.transformedElement = null;\n\n      if (this.matteElement) {\n        this.matteElement = null;\n      }\n\n      if (this.maskManager) {\n        this.maskManager.destroy();\n        this.maskManager = null;\n      }\n    },\n    createRenderableComponents: function createRenderableComponents() {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n    },\n    addEffects: function addEffects() {},\n    setMatte: function setMatte() {}\n  };\n  HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\n  HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\n  HBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\n\n  function HSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement);\n\n  HSolidElement.prototype.createContent = function () {\n    var rect;\n\n    if (this.data.hasMask) {\n      rect = createNS('rect');\n      rect.setAttribute('width', this.data.sw);\n      rect.setAttribute('height', this.data.sh);\n      rect.setAttribute('fill', this.data.sc);\n      this.svgElement.setAttribute('width', this.data.sw);\n      this.svgElement.setAttribute('height', this.data.sh);\n    } else {\n      rect = createTag('div');\n      rect.style.width = this.data.sw + 'px';\n      rect.style.height = this.data.sh + 'px';\n      rect.style.backgroundColor = this.data.sc;\n    }\n\n    this.layerElement.appendChild(rect);\n  };\n\n  function HCompElement(data, globalData, comp) {\n    this.layers = data.layers;\n    this.supports3d = !data.hasMask;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n\n  extendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\n  HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\n\n  HCompElement.prototype.createContainerElements = function () {\n    this._createBaseContainerElements(); //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\n\n\n    if (this.data.hasMask) {\n      this.svgElement.setAttribute('width', this.data.w);\n      this.svgElement.setAttribute('height', this.data.h);\n      this.transformedElement = this.baseElement;\n    } else {\n      this.transformedElement = this.layerElement;\n    }\n  };\n\n  HCompElement.prototype.addTo3dContainer = function (elem, pos) {\n    var j = 0;\n    var nextElement;\n\n    while (j < pos) {\n      if (this.elements[j] && this.elements[j].getBaseElement) {\n        nextElement = this.elements[j].getBaseElement();\n      }\n\n      j += 1;\n    }\n\n    if (nextElement) {\n      this.layerElement.insertBefore(elem, nextElement);\n    } else {\n      this.layerElement.appendChild(elem);\n    }\n  };\n\n  function HShapeElement(data, globalData, comp) {\n    //List of drawable elements\n    this.shapes = []; // Full shape data\n\n    this.shapesData = data.shapes; //List of styles that will be applied to shapes\n\n    this.stylesList = []; //List of modifiers that will be applied to shapes\n\n    this.shapeModifiers = []; //List of items in shape tree\n\n    this.itemsData = []; //List of items in previous shape tree\n\n    this.processedElements = []; // List of animated components\n\n    this.animatedContents = [];\n    this.shapesContainer = createNS('g');\n    this.initElement(data, globalData, comp); //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n\n    this.prevViewData = [];\n    this.currentBBox = {\n      x: 999999,\n      y: -999999,\n      h: 0,\n      w: 0\n    };\n  }\n\n  extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement);\n  HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\n\n  HShapeElement.prototype.createContent = function () {\n    var cont;\n    this.baseElement.style.fontSize = 0;\n\n    if (this.data.hasMask) {\n      this.layerElement.appendChild(this.shapesContainer);\n      cont = this.svgElement;\n    } else {\n      cont = createNS('svg');\n      var size = this.comp.data ? this.comp.data : this.globalData.compSize;\n      cont.setAttribute('width', size.w);\n      cont.setAttribute('height', size.h);\n      cont.appendChild(this.shapesContainer);\n      this.layerElement.appendChild(cont);\n    }\n\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], true);\n    this.filterUniqueShapes();\n    this.shapeCont = cont;\n  };\n\n  HShapeElement.prototype.getTransformedPoint = function (transformers, point) {\n    var i,\n        len = transformers.length;\n\n    for (i = 0; i < len; i += 1) {\n      point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\n    }\n\n    return point;\n  };\n\n  HShapeElement.prototype.calculateShapeBoundingBox = function (item, boundingBox) {\n    var shape = item.sh.v;\n    var transformers = item.transformers;\n    var i,\n        len = shape._length,\n        vPoint,\n        oPoint,\n        nextIPoint,\n        nextVPoint,\n        bounds;\n\n    if (len <= 1) {\n      return;\n    }\n\n    for (i = 0; i < len - 1; i += 1) {\n      vPoint = this.getTransformedPoint(transformers, shape.v[i]);\n      oPoint = this.getTransformedPoint(transformers, shape.o[i]);\n      nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\n      nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\n      this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\n    }\n\n    if (shape.c) {\n      vPoint = this.getTransformedPoint(transformers, shape.v[i]);\n      oPoint = this.getTransformedPoint(transformers, shape.o[i]);\n      nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\n      nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\n      this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\n    }\n  };\n\n  HShapeElement.prototype.checkBounds = function (vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\n    var bounds = this.shapeBoundingBox;\n    boundingBox.x = bm_min(bounds.left, boundingBox.x);\n    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);\n    boundingBox.y = bm_min(bounds.top, boundingBox.y);\n    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);\n  };\n\n  HShapeElement.prototype.shapeBoundingBox = {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  };\n  HShapeElement.prototype.tempBoundingBox = {\n    x: 0,\n    xMax: 0,\n    y: 0,\n    yMax: 0,\n    width: 0,\n    height: 0\n  };\n\n  HShapeElement.prototype.getBoundsOfCurve = function (p0, p1, p2, p3) {\n    var bounds = [[p0[0], p3[0]], [p0[1], p3[1]]];\n\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      c = 3 * p1[i] - 3 * p0[i];\n      b = b | 0;\n      a = a | 0;\n      c = c | 0;\n\n      if (a === 0) {\n        if (b === 0) {\n          continue;\n        }\n\n        t = -c / b;\n\n        if (0 < t && t < 1) {\n          bounds[i].push(this.calculateF(t, p0, p1, p2, p3, i));\n        }\n\n        continue;\n      }\n\n      b2ac = b * b - 4 * c * a;\n\n      if (b2ac < 0) {\n        continue;\n      }\n\n      t1 = (-b + bm_sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1, p0, p1, p2, p3, i));\n      t2 = (-b - bm_sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2, p0, p1, p2, p3, i));\n    }\n\n    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);\n    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);\n    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);\n    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);\n  };\n\n  HShapeElement.prototype.calculateF = function (t, p0, p1, p2, p3, i) {\n    return bm_pow(1 - t, 3) * p0[i] + 3 * bm_pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * bm_pow(t, 2) * p2[i] + bm_pow(t, 3) * p3[i];\n  };\n\n  HShapeElement.prototype.calculateBoundingBox = function (itemsData, boundingBox) {\n    var i,\n        len = itemsData.length,\n        path;\n\n    for (i = 0; i < len; i += 1) {\n      if (itemsData[i] && itemsData[i].sh) {\n        this.calculateShapeBoundingBox(itemsData[i], boundingBox);\n      } else if (itemsData[i] && itemsData[i].it) {\n        this.calculateBoundingBox(itemsData[i].it, boundingBox);\n      }\n    }\n  };\n\n  HShapeElement.prototype.currentBoxContains = function (box) {\n    return this.currentBBox.x <= box.x && this.currentBBox.y <= box.y && this.currentBBox.width + this.currentBBox.x >= box.x + box.width && this.currentBBox.height + this.currentBBox.y >= box.y + box.height;\n  };\n\n  HShapeElement.prototype.renderInnerContent = function () {\n    this._renderShapeFrame();\n\n    if (!this.hidden && (this._isFirstFrame || this._mdf)) {\n      var tempBoundingBox = this.tempBoundingBox;\n      var max = 999999;\n      tempBoundingBox.x = max;\n      tempBoundingBox.xMax = -max;\n      tempBoundingBox.y = max;\n      tempBoundingBox.yMax = -max;\n      this.calculateBoundingBox(this.itemsData, tempBoundingBox);\n      tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\n      tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y; //var tempBoundingBox = this.shapeCont.getBBox();\n\n      if (this.currentBoxContains(tempBoundingBox)) {\n        return;\n      }\n\n      var changed = false;\n\n      if (this.currentBBox.w !== tempBoundingBox.width) {\n        this.currentBBox.w = tempBoundingBox.width;\n        this.shapeCont.setAttribute('width', tempBoundingBox.width);\n        changed = true;\n      }\n\n      if (this.currentBBox.h !== tempBoundingBox.height) {\n        this.currentBBox.h = tempBoundingBox.height;\n        this.shapeCont.setAttribute('height', tempBoundingBox.height);\n        changed = true;\n      }\n\n      if (changed || this.currentBBox.x !== tempBoundingBox.x || this.currentBBox.y !== tempBoundingBox.y) {\n        this.currentBBox.w = tempBoundingBox.width;\n        this.currentBBox.h = tempBoundingBox.height;\n        this.currentBBox.x = tempBoundingBox.x;\n        this.currentBBox.y = tempBoundingBox.y;\n        this.shapeCont.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\n        this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\n      }\n    }\n  };\n\n  function HTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.textPaths = [];\n    this.currentBBox = {\n      x: 999999,\n      y: -999999,\n      h: 0,\n      w: 0\n    };\n    this.renderType = 'svg';\n    this.isMasked = false;\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement);\n\n  HTextElement.prototype.createContent = function () {\n    this.isMasked = this.checkMasks();\n\n    if (this.isMasked) {\n      this.renderType = 'svg';\n      this.compW = this.comp.data.w;\n      this.compH = this.comp.data.h;\n      this.svgElement.setAttribute('width', this.compW);\n      this.svgElement.setAttribute('height', this.compH);\n      var g = createNS('g');\n      this.maskedElement.appendChild(g);\n      this.innerElem = g;\n    } else {\n      this.renderType = 'html';\n      this.innerElem = this.layerElement;\n    }\n\n    this.checkParenting();\n  };\n\n  HTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var innerElemStyle = this.innerElem.style;\n    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\n\n    if (documentData.sc) {\n      innerElemStyle.stroke = this.buildColor(documentData.sc);\n      innerElemStyle.strokeWidth = documentData.sw + 'px';\n    }\n\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n\n    if (!this.globalData.fontManager.chars) {\n      innerElemStyle.fontSize = documentData.finalSize + 'px';\n      innerElemStyle.lineHeight = documentData.finalSize + 'px';\n\n      if (fontData.fClass) {\n        this.innerElem.className = fontData.fClass;\n      } else {\n        innerElemStyle.fontFamily = fontData.fFamily;\n        var fWeight = documentData.fWeight,\n            fStyle = documentData.fStyle;\n        innerElemStyle.fontStyle = fStyle;\n        innerElemStyle.fontWeight = fWeight;\n      }\n    }\n\n    var i, len;\n    var letters = documentData.l;\n    len = letters.length;\n    var tSpan, tParent, tCont;\n    var matrixHelper = this.mHelper;\n    var shapes,\n        shapeStr = '';\n    var cnt = 0;\n\n    for (i = 0; i < len; i += 1) {\n      if (this.globalData.fontManager.chars) {\n        if (!this.textPaths[cnt]) {\n          tSpan = createNS('path');\n          tSpan.setAttribute('stroke-linecap', 'butt');\n          tSpan.setAttribute('stroke-linejoin', 'round');\n          tSpan.setAttribute('stroke-miterlimit', '4');\n        } else {\n          tSpan = this.textPaths[cnt];\n        }\n\n        if (!this.isMasked) {\n          if (this.textSpans[cnt]) {\n            tParent = this.textSpans[cnt];\n            tCont = tParent.children[0];\n          } else {\n            tParent = createTag('div');\n            tCont = createNS('svg');\n            tCont.appendChild(tSpan);\n            styleDiv(tParent);\n          }\n        }\n      } else {\n        if (!this.isMasked) {\n          if (this.textSpans[cnt]) {\n            tParent = this.textSpans[cnt];\n            tSpan = this.textPaths[cnt];\n          } else {\n            tParent = createTag('span');\n            styleDiv(tParent);\n            tSpan = createTag('span');\n            styleDiv(tSpan);\n            tParent.appendChild(tSpan);\n          }\n        } else {\n          tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\n        }\n      } //tSpan.setAttribute('visibility', 'hidden');\n\n\n      if (this.globalData.fontManager.chars) {\n        var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n        var shapeData;\n\n        if (charData) {\n          shapeData = charData.data;\n        } else {\n          shapeData = null;\n        }\n\n        matrixHelper.reset();\n\n        if (shapeData && shapeData.shapes) {\n          shapes = shapeData.shapes[0].it;\n          matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n          shapeStr = this.createPathShape(matrixHelper, shapes);\n          tSpan.setAttribute('d', shapeStr);\n        }\n\n        if (!this.isMasked) {\n          this.innerElem.appendChild(tParent);\n\n          if (shapeData && shapeData.shapes) {\n            //document.body.appendChild is needed to get exact measure of shape\n            document.body.appendChild(tCont);\n            var boundingBox = tCont.getBBox();\n            tCont.setAttribute('width', boundingBox.width + 2);\n            tCont.setAttribute('height', boundingBox.height + 2);\n            tCont.setAttribute('viewBox', boundingBox.x - 1 + ' ' + (boundingBox.y - 1) + ' ' + (boundingBox.width + 2) + ' ' + (boundingBox.height + 2));\n            tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x - 1) + 'px,' + (boundingBox.y - 1) + 'px)';\n            letters[i].yOffset = boundingBox.y - 1;\n          } else {\n            tCont.setAttribute('width', 1);\n            tCont.setAttribute('height', 1);\n          }\n\n          tParent.appendChild(tCont);\n        } else {\n          this.innerElem.appendChild(tSpan);\n        }\n      } else {\n        tSpan.textContent = letters[i].val;\n        tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n\n        if (!this.isMasked) {\n          this.innerElem.appendChild(tParent); //\n\n          tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,' + -documentData.finalSize / 1.2 + 'px,0)';\n        } else {\n          this.innerElem.appendChild(tSpan);\n        }\n      } //\n\n\n      if (!this.isMasked) {\n        this.textSpans[cnt] = tParent;\n      } else {\n        this.textSpans[cnt] = tSpan;\n      }\n\n      this.textSpans[cnt].style.display = 'block';\n      this.textPaths[cnt] = tSpan;\n      cnt += 1;\n    }\n\n    while (cnt < this.textSpans.length) {\n      this.textSpans[cnt].style.display = 'none';\n      cnt += 1;\n    }\n  };\n\n  HTextElement.prototype.renderInnerContent = function () {\n    if (this.data.singleShape) {\n      if (!this._isFirstFrame && !this.lettersChangedFlag) {\n        return;\n      } else {\n        // Todo Benchmark if using this is better than getBBox\n        if (this.isMasked && this.finalTransform._matMdf) {\n          this.svgElement.setAttribute('viewBox', -this.finalTransform.mProp.p.v[0] + ' ' + -this.finalTransform.mProp.p.v[1] + ' ' + this.compW + ' ' + this.compH);\n          this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\n        }\n      }\n    }\n\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n\n    if (!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag) {\n      return;\n    }\n\n    var i,\n        len,\n        count = 0;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter, textSpan, textPath;\n\n    for (i = 0; i < len; i += 1) {\n      if (letters[i].n) {\n        count += 1;\n        continue;\n      }\n\n      textSpan = this.textSpans[i];\n      textPath = this.textPaths[i];\n      renderedLetter = renderedLetters[count];\n      count += 1;\n\n      if (renderedLetter._mdf.m) {\n        if (!this.isMasked) {\n          textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\n        } else {\n          textSpan.setAttribute('transform', renderedLetter.m);\n        }\n      } ////textSpan.setAttribute('opacity',renderedLetter.o);\n\n\n      textSpan.style.opacity = renderedLetter.o;\n\n      if (renderedLetter.sw && renderedLetter._mdf.sw) {\n        textPath.setAttribute('stroke-width', renderedLetter.sw);\n      }\n\n      if (renderedLetter.sc && renderedLetter._mdf.sc) {\n        textPath.setAttribute('stroke', renderedLetter.sc);\n      }\n\n      if (renderedLetter.fc && renderedLetter._mdf.fc) {\n        textPath.setAttribute('fill', renderedLetter.fc);\n        textPath.style.color = renderedLetter.fc;\n      }\n    }\n\n    if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {\n      var boundingBox = this.innerElem.getBBox();\n\n      if (this.currentBBox.w !== boundingBox.width) {\n        this.currentBBox.w = boundingBox.width;\n        this.svgElement.setAttribute('width', boundingBox.width);\n      }\n\n      if (this.currentBBox.h !== boundingBox.height) {\n        this.currentBBox.h = boundingBox.height;\n        this.svgElement.setAttribute('height', boundingBox.height);\n      }\n\n      var margin = 1;\n\n      if (this.currentBBox.w !== boundingBox.width + margin * 2 || this.currentBBox.h !== boundingBox.height + margin * 2 || this.currentBBox.x !== boundingBox.x - margin || this.currentBBox.y !== boundingBox.y - margin) {\n        this.currentBBox.w = boundingBox.width + margin * 2;\n        this.currentBBox.h = boundingBox.height + margin * 2;\n        this.currentBBox.x = boundingBox.x - margin;\n        this.currentBBox.y = boundingBox.y - margin;\n        this.svgElement.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\n        this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\n      }\n    }\n  };\n\n  function HImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initElement(data, globalData, comp);\n  }\n\n  extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement);\n\n  HImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    var img = new Image();\n\n    if (this.data.hasMask) {\n      this.imageElem = createNS('image');\n      this.imageElem.setAttribute('width', this.assetData.w + \"px\");\n      this.imageElem.setAttribute('height', this.assetData.h + \"px\");\n      this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\n      this.layerElement.appendChild(this.imageElem);\n      this.baseElement.setAttribute('width', this.assetData.w);\n      this.baseElement.setAttribute('height', this.assetData.h);\n    } else {\n      this.layerElement.appendChild(img);\n    }\n\n    img.src = assetPath;\n\n    if (this.data.ln) {\n      this.baseElement.setAttribute('id', this.data.ln);\n    }\n  };\n\n  function HCameraElement(data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initHierarchy();\n    var getProp = PropertyFactory.getProp;\n    this.pe = getProp(this, data.pe, 0, 0, this);\n\n    if (data.ks.p.s) {\n      this.px = getProp(this, data.ks.p.x, 1, 0, this);\n      this.py = getProp(this, data.ks.p.y, 1, 0, this);\n      this.pz = getProp(this, data.ks.p.z, 1, 0, this);\n    } else {\n      this.p = getProp(this, data.ks.p, 1, 0, this);\n    }\n\n    if (data.ks.a) {\n      this.a = getProp(this, data.ks.a, 1, 0, this);\n    }\n\n    if (data.ks.or.k.length && data.ks.or.k[0].to) {\n      var i,\n          len = data.ks.or.k.length;\n\n      for (i = 0; i < len; i += 1) {\n        data.ks.or.k[i].to = null;\n        data.ks.or.k[i].ti = null;\n      }\n    }\n\n    this.or = getProp(this, data.ks.or, 1, degToRads, this);\n    this.or.sh = true;\n    this.rx = getProp(this, data.ks.rx, 0, degToRads, this);\n    this.ry = getProp(this, data.ks.ry, 0, degToRads, this);\n    this.rz = getProp(this, data.ks.rz, 0, degToRads, this);\n    this.mat = new Matrix();\n    this._prevMat = new Matrix();\n    this._isFirstFrame = true; // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\n\n    this.finalTransform = {\n      mProp: this\n    };\n  }\n\n  extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\n\n  HCameraElement.prototype.setup = function () {\n    var i,\n        len = this.comp.threeDElements.length,\n        comp;\n\n    for (i = 0; i < len; i += 1) {\n      //[perspectiveElem,container]\n      comp = this.comp.threeDElements[i];\n\n      if (comp.type === '3d') {\n        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v + 'px';\n        comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\n        comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\n      }\n    }\n  };\n\n  HCameraElement.prototype.createElements = function () {};\n\n  HCameraElement.prototype.hide = function () {};\n\n  HCameraElement.prototype.renderFrame = function () {\n    var _mdf = this._isFirstFrame;\n    var i, len;\n\n    if (this.hierarchy) {\n      len = this.hierarchy.length;\n\n      for (i = 0; i < len; i += 1) {\n        _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\n      }\n    }\n\n    if (_mdf || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {\n      this.mat.reset();\n\n      if (this.hierarchy) {\n        var mat;\n        len = this.hierarchy.length - 1;\n\n        for (i = len; i >= 0; i -= 1) {\n          /*mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n          console.log(mat)\r\n          this.mat.transform(-mat[0],-mat[1],-mat[2],-mat[3],-mat[4],-mat[5],-mat[6],-mat[7],-mat[8],-mat[9],-mat[10],-mat[11],-mat[12],-mat[13],-mat[14],mat[15]);\r\n          console.log(this.mat.props)*/\n          var mTransf = this.hierarchy[i].finalTransform.mProp;\n          this.mat.translate(-mTransf.p.v[0], -mTransf.p.v[1], mTransf.p.v[2]);\n          this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\n          this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\n          this.mat.scale(1 / mTransf.s.v[0], 1 / mTransf.s.v[1], 1 / mTransf.s.v[2]);\n          this.mat.translate(mTransf.a.v[0], mTransf.a.v[1], mTransf.a.v[2]);\n        }\n      }\n\n      if (this.p) {\n        this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]);\n      } else {\n        this.mat.translate(-this.px.v, -this.py.v, this.pz.v);\n      }\n\n      if (this.a) {\n        var diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];\n        var mag = Math.sqrt(Math.pow(diffVector[0], 2) + Math.pow(diffVector[1], 2) + Math.pow(diffVector[2], 2)); //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\n\n        var lookDir = [diffVector[0] / mag, diffVector[1] / mag, diffVector[2] / mag];\n        var lookLengthOnXZ = Math.sqrt(lookDir[2] * lookDir[2] + lookDir[0] * lookDir[0]);\n        var m_rotationX = Math.atan2(lookDir[1], lookLengthOnXZ);\n        var m_rotationY = Math.atan2(lookDir[0], -lookDir[2]);\n        this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\n      }\n\n      this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\n      this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\n      this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0);\n      this.mat.translate(0, 0, this.pe.v);\n      var hasMatrixChanged = !this._prevMat.equals(this.mat);\n\n      if ((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\n        len = this.comp.threeDElements.length;\n        var comp;\n\n        for (i = 0; i < len; i += 1) {\n          comp = this.comp.threeDElements[i];\n\n          if (comp.type === '3d') {\n            if (hasMatrixChanged) {\n              comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\n            }\n\n            if (this.pe._mdf) {\n              comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v + 'px';\n            }\n          }\n        }\n\n        this.mat.clone(this._prevMat);\n      }\n    }\n\n    this._isFirstFrame = false;\n  };\n\n  HCameraElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n\n  HCameraElement.prototype.destroy = function () {};\n\n  HCameraElement.prototype.getBaseElement = function () {\n    return null;\n  };\n\n  function HEffects() {}\n\n  HEffects.prototype.renderFrame = function () {};\n\n  var animationManager = function () {\n    var moduleOb = {};\n    var registeredAnimations = [];\n    var initTime = 0;\n    var len = 0;\n    var playingAnimationsNum = 0;\n    var _stopped = true;\n    var _isFrozen = false;\n\n    function removeElement(ev) {\n      var i = 0;\n      var animItem = ev.target;\n\n      while (i < len) {\n        if (registeredAnimations[i].animation === animItem) {\n          registeredAnimations.splice(i, 1);\n          i -= 1;\n          len -= 1;\n\n          if (!animItem.isPaused) {\n            subtractPlayingCount();\n          }\n        }\n\n        i += 1;\n      }\n    }\n\n    function registerAnimation(element, animationData) {\n      if (!element) {\n        return null;\n      }\n\n      var i = 0;\n\n      while (i < len) {\n        if (registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null) {\n          return registeredAnimations[i].animation;\n        }\n\n        i += 1;\n      }\n\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, element);\n      animItem.setData(element, animationData);\n      return animItem;\n    }\n\n    function getRegisteredAnimations() {\n      var i,\n          len = registeredAnimations.length;\n      var animations = [];\n\n      for (i = 0; i < len; i += 1) {\n        animations.push(registeredAnimations[i].animation);\n      }\n\n      return animations;\n    }\n\n    function addPlayingCount() {\n      playingAnimationsNum += 1;\n      activate();\n    }\n\n    function subtractPlayingCount() {\n      playingAnimationsNum -= 1;\n    }\n\n    function setupAnimation(animItem, element) {\n      animItem.addEventListener('destroy', removeElement);\n      animItem.addEventListener('_active', addPlayingCount);\n      animItem.addEventListener('_idle', subtractPlayingCount);\n      registeredAnimations.push({\n        elem: element,\n        animation: animItem\n      });\n      len += 1;\n    }\n\n    function loadAnimation(params) {\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, null);\n      animItem.setParams(params);\n      return animItem;\n    }\n\n    function setSpeed(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setSpeed(val, animation);\n      }\n    }\n\n    function setDirection(val, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setDirection(val, animation);\n      }\n    }\n\n    function play(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.play(animation);\n      }\n    }\n\n    function resume(nowTime) {\n      var elapsedTime = nowTime - initTime;\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.advanceTime(elapsedTime);\n      }\n\n      initTime = nowTime;\n\n      if (playingAnimationsNum && !_isFrozen) {\n        window.requestAnimationFrame(resume);\n      } else {\n        _stopped = true;\n      }\n    }\n\n    function first(nowTime) {\n      initTime = nowTime;\n      window.requestAnimationFrame(resume);\n    }\n\n    function pause(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.pause(animation);\n      }\n    }\n\n    function goToAndStop(value, isFrame, animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.goToAndStop(value, isFrame, animation);\n      }\n    }\n\n    function stop(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.stop(animation);\n      }\n    }\n\n    function togglePause(animation) {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.togglePause(animation);\n      }\n    }\n\n    function destroy(animation) {\n      var i;\n\n      for (i = len - 1; i >= 0; i -= 1) {\n        registeredAnimations[i].animation.destroy(animation);\n      }\n    }\n\n    function searchAnimations(animationData, standalone, renderer) {\n      var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')), [].slice.call(document.getElementsByClassName('bodymovin')));\n      var i,\n          len = animElements.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (renderer) {\n          animElements[i].setAttribute('data-bm-type', renderer);\n        }\n\n        registerAnimation(animElements[i], animationData);\n      }\n\n      if (standalone && len === 0) {\n        if (!renderer) {\n          renderer = 'svg';\n        }\n\n        var body = document.getElementsByTagName('body')[0];\n        body.innerHTML = '';\n        var div = createTag('div');\n        div.style.width = '100%';\n        div.style.height = '100%';\n        div.setAttribute('data-bm-type', renderer);\n        body.appendChild(div);\n        registerAnimation(div, animationData);\n      }\n    }\n\n    function resize() {\n      var i;\n\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.resize();\n      }\n    }\n\n    function activate() {\n      if (!_isFrozen && playingAnimationsNum) {\n        if (_stopped) {\n          window.requestAnimationFrame(first);\n          _stopped = false;\n        }\n      }\n    }\n\n    function freeze() {\n      _isFrozen = true;\n    }\n\n    function unfreeze() {\n      _isFrozen = false;\n      activate();\n    }\n\n    moduleOb.registerAnimation = registerAnimation;\n    moduleOb.loadAnimation = loadAnimation;\n    moduleOb.setSpeed = setSpeed;\n    moduleOb.setDirection = setDirection;\n    moduleOb.play = play;\n    moduleOb.pause = pause;\n    moduleOb.stop = stop;\n    moduleOb.togglePause = togglePause;\n    moduleOb.searchAnimations = searchAnimations;\n    moduleOb.resize = resize; //moduleOb.start = start;\n\n    moduleOb.goToAndStop = goToAndStop;\n    moduleOb.destroy = destroy;\n    moduleOb.freeze = freeze;\n    moduleOb.unfreeze = unfreeze;\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\n    return moduleOb;\n  }();\n\n  var AnimationItem = function AnimationItem() {\n    this._cbs = [];\n    this.name = '';\n    this.path = '';\n    this.isLoaded = false;\n    this.currentFrame = 0;\n    this.currentRawFrame = 0;\n    this.totalFrames = 0;\n    this.frameRate = 0;\n    this.frameMult = 0;\n    this.playSpeed = 1;\n    this.playDirection = 1;\n    this.playCount = 0;\n    this.animationData = {};\n    this.assets = [];\n    this.isPaused = true;\n    this.autoplay = false;\n    this.loop = true;\n    this.renderer = null;\n    this.animationID = createElementID();\n    this.assetsPath = '';\n    this.timeCompleted = 0;\n    this.segmentPos = 0;\n    this.subframeEnabled = subframeEnabled;\n    this.segments = [];\n    this._idle = true;\n    this._completedLoop = false;\n    this.projectInterface = ProjectInterface();\n    this.imagePreloader = new ImagePreloader();\n  };\n\n  extendPrototype([BaseEvent], AnimationItem);\n\n  AnimationItem.prototype.setParams = function (params) {\n    if (params.context) {\n      this.context = params.context;\n    }\n\n    if (params.wrapper || params.container) {\n      this.wrapper = params.wrapper || params.container;\n    }\n\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\n\n    switch (animType) {\n      case 'canvas':\n        this.renderer = new CanvasRenderer(this, params.rendererSettings);\n        break;\n\n      case 'svg':\n        this.renderer = new SVGRenderer(this, params.rendererSettings);\n        break;\n\n      default:\n        this.renderer = new HybridRenderer(this, params.rendererSettings);\n        break;\n    }\n\n    this.renderer.setProjectInterface(this.projectInterface);\n    this.animType = animType;\n\n    if (params.loop === '' || params.loop === null) {} else if (params.loop === false) {\n      this.loop = false;\n    } else if (params.loop === true) {\n      this.loop = true;\n    } else {\n      this.loop = parseInt(params.loop);\n    }\n\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\n    this.name = params.name ? params.name : '';\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments : true;\n    this.assetsPath = params.assetsPath;\n\n    if (params.animationData) {\n      this.configAnimation(params.animationData);\n    } else if (params.path) {\n      if (params.path.substr(-4) != 'json') {\n        if (params.path.substr(-1, 1) != '/') {\n          params.path += '/';\n        }\n\n        params.path += 'data.json';\n      }\n\n      if (params.path.lastIndexOf('\\\\') != -1) {\n        this.path = params.path.substr(0, params.path.lastIndexOf('\\\\') + 1);\n      } else {\n        this.path = params.path.substr(0, params.path.lastIndexOf('/') + 1);\n      }\n\n      this.fileName = params.path.substr(params.path.lastIndexOf('/') + 1);\n      this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf('.json'));\n      assetLoader.load(params.path, this.configAnimation.bind(this), function () {\n        this.trigger('data_failed');\n      }.bind(this));\n    }\n  };\n\n  AnimationItem.prototype.setData = function (wrapper, animationData) {\n    var params = {\n      wrapper: wrapper,\n      animationData: animationData ? typeof animationData === \"object\" ? animationData : JSON.parse(animationData) : null\n    };\n    var wrapperAttributes = wrapper.attributes;\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value : wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value : wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value : wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value : wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\n\n    if (loop === '') {} else if (loop === 'false') {\n      params.loop = false;\n    } else if (loop === 'true') {\n      params.loop = true;\n    } else {\n      params.loop = parseInt(loop);\n    }\n\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value : wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value : wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\n    params.autoplay = autoplay !== \"false\";\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value : wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value : '';\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value : wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value : wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\n\n    if (prerender === 'false') {\n      params.prerender = false;\n    }\n\n    this.setParams(params);\n  };\n\n  AnimationItem.prototype.includeLayers = function (data) {\n    if (data.op > this.animationData.op) {\n      this.animationData.op = data.op;\n      this.totalFrames = Math.floor(data.op - this.animationData.ip);\n    }\n\n    var layers = this.animationData.layers;\n    var i,\n        len = layers.length;\n    var newLayers = data.layers;\n    var j,\n        jLen = newLayers.length;\n\n    for (j = 0; j < jLen; j += 1) {\n      i = 0;\n\n      while (i < len) {\n        if (layers[i].id == newLayers[j].id) {\n          layers[i] = newLayers[j];\n          break;\n        }\n\n        i += 1;\n      }\n    }\n\n    if (data.chars || data.fonts) {\n      this.renderer.globalData.fontManager.addChars(data.chars);\n      this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\n    }\n\n    if (data.assets) {\n      len = data.assets.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.animationData.assets.push(data.assets[i]);\n      }\n    }\n\n    this.animationData.__complete = false;\n    dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\n    this.renderer.includeLayers(data.layers);\n\n    if (expressionsPlugin) {\n      expressionsPlugin.initExpressions(this);\n    }\n\n    this.loadNextSegment();\n  };\n\n  AnimationItem.prototype.loadNextSegment = function () {\n    var segments = this.animationData.segments;\n\n    if (!segments || segments.length === 0 || !this.autoloadSegments) {\n      this.trigger('data_ready');\n      this.timeCompleted = this.totalFrames;\n      return;\n    }\n\n    var segment = segments.shift();\n    this.timeCompleted = segment.time * this.frameRate;\n    var segmentPath = this.path + this.fileName + '_' + this.segmentPos + '.json';\n    this.segmentPos += 1;\n    assetLoader.load(segmentPath, this.includeLayers.bind(this), function () {\n      this.trigger('data_failed');\n    }.bind(this));\n  };\n\n  AnimationItem.prototype.loadSegments = function () {\n    var segments = this.animationData.segments;\n\n    if (!segments) {\n      this.timeCompleted = this.totalFrames;\n    }\n\n    this.loadNextSegment();\n  };\n\n  AnimationItem.prototype.imagesLoaded = function () {\n    this.trigger('loaded_images');\n    this.checkLoaded();\n  };\n\n  AnimationItem.prototype.preloadImages = function () {\n    this.imagePreloader.setAssetsPath(this.assetsPath);\n    this.imagePreloader.setPath(this.path);\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\n  };\n\n  AnimationItem.prototype.configAnimation = function (animData) {\n    if (!this.renderer) {\n      return;\n    }\n\n    this.animationData = animData;\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\n    this.renderer.configAnimation(animData);\n\n    if (!animData.assets) {\n      animData.assets = [];\n    }\n\n    this.renderer.searchExtraCompositions(animData.assets);\n    this.assets = this.animationData.assets;\n    this.frameRate = this.animationData.fr;\n    this.firstFrame = Math.round(this.animationData.ip);\n    this.frameMult = this.animationData.fr / 1000;\n    this.trigger('config_ready');\n    this.preloadImages();\n    this.loadSegments();\n    this.updaFrameModifier();\n    this.waitForFontsLoaded();\n  };\n\n  AnimationItem.prototype.waitForFontsLoaded = function () {\n    if (!this.renderer) {\n      return;\n    }\n\n    if (this.renderer.globalData.fontManager.loaded()) {\n      this.checkLoaded();\n    } else {\n      setTimeout(this.waitForFontsLoaded.bind(this), 20);\n    }\n  };\n\n  AnimationItem.prototype.checkLoaded = function () {\n    if (!this.isLoaded && this.renderer.globalData.fontManager.loaded() && (this.imagePreloader.loaded() || this.renderer.rendererType !== 'canvas')) {\n      this.isLoaded = true;\n      dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\n\n      if (expressionsPlugin) {\n        expressionsPlugin.initExpressions(this);\n      }\n\n      this.renderer.initItems();\n      setTimeout(function () {\n        this.trigger('DOMLoaded');\n      }.bind(this), 0);\n      this.gotoFrame();\n\n      if (this.autoplay) {\n        this.play();\n      }\n    }\n  };\n\n  AnimationItem.prototype.resize = function () {\n    this.renderer.updateContainerSize();\n  };\n\n  AnimationItem.prototype.setSubframe = function (flag) {\n    this.subframeEnabled = flag ? true : false;\n  };\n\n  AnimationItem.prototype.gotoFrame = function () {\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\n\n    if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\n      this.currentFrame = this.timeCompleted;\n    }\n\n    this.trigger('enterFrame');\n    this.renderFrame();\n  };\n\n  AnimationItem.prototype.renderFrame = function () {\n    if (this.isLoaded === false) {\n      return;\n    }\n\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\n  };\n\n  AnimationItem.prototype.play = function (name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    if (this.isPaused === true) {\n      this.isPaused = false;\n\n      if (this._idle) {\n        this._idle = false;\n        this.trigger('_active');\n      }\n    }\n  };\n\n  AnimationItem.prototype.pause = function (name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    if (this.isPaused === false) {\n      this.isPaused = true;\n      this._idle = true;\n      this.trigger('_idle');\n    }\n  };\n\n  AnimationItem.prototype.togglePause = function (name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    if (this.isPaused === true) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n\n  AnimationItem.prototype.stop = function (name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    this.pause();\n    this.playCount = 0;\n    this._completedLoop = false;\n    this.setCurrentRawFrameValue(0);\n  };\n\n  AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\n    if (name && this.name != name) {\n      return;\n    }\n\n    if (isFrame) {\n      this.setCurrentRawFrameValue(value);\n    } else {\n      this.setCurrentRawFrameValue(value * this.frameModifier);\n    }\n\n    this.pause();\n  };\n\n  AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\n    this.goToAndStop(value, isFrame, name);\n    this.play();\n  };\n\n  AnimationItem.prototype.advanceTime = function (value) {\n    if (this.isPaused === true || this.isLoaded === false) {\n      return;\n    }\n\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\n    var _isComplete = false; // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\n\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\n      if (!this.loop || this.playCount === this.loop) {\n        if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {\n          _isComplete = true;\n          nextValue = this.totalFrames - 1;\n        }\n      } else if (nextValue >= this.totalFrames) {\n        this.playCount += 1;\n\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\n          this.setCurrentRawFrameValue(nextValue % this.totalFrames);\n          this._completedLoop = true;\n          this.trigger('loopComplete');\n        }\n      } else {\n        this.setCurrentRawFrameValue(nextValue);\n      }\n    } else if (nextValue < 0) {\n      if (!this.checkSegments(nextValue % this.totalFrames)) {\n        if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\n          this.setCurrentRawFrameValue(this.totalFrames + nextValue % this.totalFrames);\n\n          if (!this._completedLoop) {\n            this._completedLoop = true;\n          } else {\n            this.trigger('loopComplete');\n          }\n        } else {\n          _isComplete = true;\n          nextValue = 0;\n        }\n      }\n    } else {\n      this.setCurrentRawFrameValue(nextValue);\n    }\n\n    if (_isComplete) {\n      this.setCurrentRawFrameValue(nextValue);\n      this.pause();\n      this.trigger('complete');\n    }\n  };\n\n  AnimationItem.prototype.adjustSegment = function (arr, offset) {\n    this.playCount = 0;\n\n    if (arr[1] < arr[0]) {\n      if (this.frameModifier > 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(-1);\n        }\n      }\n\n      this.timeCompleted = this.totalFrames = arr[0] - arr[1];\n      this.firstFrame = arr[1];\n      this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\n    } else if (arr[1] > arr[0]) {\n      if (this.frameModifier < 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(1);\n        }\n      }\n\n      this.timeCompleted = this.totalFrames = arr[1] - arr[0];\n      this.firstFrame = arr[0];\n      this.setCurrentRawFrameValue(0.001 + offset);\n    }\n\n    this.trigger('segmentStart');\n  };\n\n  AnimationItem.prototype.setSegment = function (init, end) {\n    var pendingFrame = -1;\n\n    if (this.isPaused) {\n      if (this.currentRawFrame + this.firstFrame < init) {\n        pendingFrame = init;\n      } else if (this.currentRawFrame + this.firstFrame > end) {\n        pendingFrame = end - init;\n      }\n    }\n\n    this.firstFrame = init;\n    this.timeCompleted = this.totalFrames = end - init;\n\n    if (pendingFrame !== -1) {\n      this.goToAndStop(pendingFrame, true);\n    }\n  };\n\n  AnimationItem.prototype.playSegments = function (arr, forceFlag) {\n    if (forceFlag) {\n      this.segments.length = 0;\n    }\n\n    if (typeof arr[0] === 'object') {\n      var i,\n          len = arr.length;\n\n      for (i = 0; i < len; i += 1) {\n        this.segments.push(arr[i]);\n      }\n    } else {\n      this.segments.push(arr);\n    }\n\n    if (this.segments.length) {\n      this.adjustSegment(this.segments.shift(), 0);\n    }\n\n    if (this.isPaused) {\n      this.play();\n    }\n  };\n\n  AnimationItem.prototype.resetSegments = function (forceFlag) {\n    this.segments.length = 0;\n    this.segments.push([this.animationData.ip, this.animationData.op]); //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\n\n    if (forceFlag) {\n      this.checkSegments(0);\n    }\n  };\n\n  AnimationItem.prototype.checkSegments = function (offset) {\n    if (this.segments.length) {\n      this.adjustSegment(this.segments.shift(), offset);\n      return true;\n    }\n\n    return false;\n  };\n\n  AnimationItem.prototype.destroy = function (name) {\n    if (name && this.name != name || !this.renderer) {\n      return;\n    }\n\n    this.renderer.destroy();\n    this.imagePreloader.destroy();\n    this.trigger('destroy');\n    this._cbs = null;\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\n    this.renderer = null;\n  };\n\n  AnimationItem.prototype.setCurrentRawFrameValue = function (value) {\n    this.currentRawFrame = value;\n    this.gotoFrame();\n  };\n\n  AnimationItem.prototype.setSpeed = function (val) {\n    this.playSpeed = val;\n    this.updaFrameModifier();\n  };\n\n  AnimationItem.prototype.setDirection = function (val) {\n    this.playDirection = val < 0 ? -1 : 1;\n    this.updaFrameModifier();\n  };\n\n  AnimationItem.prototype.updaFrameModifier = function () {\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\n  };\n\n  AnimationItem.prototype.getPath = function () {\n    return this.path;\n  };\n\n  AnimationItem.prototype.getAssetsPath = function (assetData) {\n    var path = '';\n\n    if (assetData.e) {\n      path = assetData.p;\n    } else if (this.assetsPath) {\n      var imagePath = assetData.p;\n\n      if (imagePath.indexOf('images/') !== -1) {\n        imagePath = imagePath.split('/')[1];\n      }\n\n      path = this.assetsPath + imagePath;\n    } else {\n      path = this.path;\n      path += assetData.u ? assetData.u : '';\n      path += assetData.p;\n    }\n\n    return path;\n  };\n\n  AnimationItem.prototype.getAssetData = function (id) {\n    var i = 0,\n        len = this.assets.length;\n\n    while (i < len) {\n      if (id == this.assets[i].id) {\n        return this.assets[i];\n      }\n\n      i += 1;\n    }\n  };\n\n  AnimationItem.prototype.hide = function () {\n    this.renderer.hide();\n  };\n\n  AnimationItem.prototype.show = function () {\n    this.renderer.show();\n  };\n\n  AnimationItem.prototype.getDuration = function (isFrame) {\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\n  };\n\n  AnimationItem.prototype.trigger = function (name) {\n    if (this._cbs && this._cbs[name]) {\n      switch (name) {\n        case 'enterFrame':\n          this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier));\n          break;\n\n        case 'loopComplete':\n          this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n          break;\n\n        case 'complete':\n          this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult));\n          break;\n\n        case 'segmentStart':\n          this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n          break;\n\n        case 'destroy':\n          this.triggerEvent(name, new BMDestroyEvent(name, this));\n          break;\n\n        default:\n          this.triggerEvent(name);\n      }\n    }\n\n    if (name === 'enterFrame' && this.onEnterFrame) {\n      this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));\n    }\n\n    if (name === 'loopComplete' && this.onLoopComplete) {\n      this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n    }\n\n    if (name === 'complete' && this.onComplete) {\n      this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult));\n    }\n\n    if (name === 'segmentStart' && this.onSegmentStart) {\n      this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n    }\n\n    if (name === 'destroy' && this.onDestroy) {\n      this.onDestroy.call(this, new BMDestroyEvent(name, this));\n    }\n  };\n\n  var Expressions = function () {\n    var ob = {};\n    ob.initExpressions = initExpressions;\n\n    function initExpressions(animation) {\n      var stackCount = 0;\n      var registers = [];\n\n      function pushExpression() {\n        stackCount += 1;\n      }\n\n      function popExpression() {\n        stackCount -= 1;\n\n        if (stackCount === 0) {\n          releaseInstances();\n        }\n      }\n\n      function registerExpressionProperty(expression) {\n        if (registers.indexOf(expression) === -1) {\n          registers.push(expression);\n        }\n      }\n\n      function releaseInstances() {\n        var i,\n            len = registers.length;\n\n        for (i = 0; i < len; i += 1) {\n          registers[i].release();\n        }\n\n        registers.length = 0;\n      }\n\n      animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\n      animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\n      animation.renderer.globalData.pushExpression = pushExpression;\n      animation.renderer.globalData.popExpression = popExpression;\n      animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\n    }\n\n    return ob;\n  }();\n\n  expressionsPlugin = Expressions;\n\n  var ExpressionManager = function () {\n    'use strict';\n\n    var ob = {};\n    var Math = BMMath;\n    var window = null;\n    var document = null;\n\n    function $bm_isInstanceOfArray(arr) {\n      return arr.constructor === Array || arr.constructor === Float32Array;\n    }\n\n    function isNumerable(tOfV, v) {\n      return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\n    }\n\n    function $bm_neg(a) {\n      var tOfA = typeof a;\n\n      if (tOfA === 'number' || tOfA === 'boolean' || a instanceof Number) {\n        return -a;\n      }\n\n      if ($bm_isInstanceOfArray(a)) {\n        var i,\n            lenA = a.length;\n        var retArr = [];\n\n        for (i = 0; i < lenA; i += 1) {\n          retArr[i] = -a[i];\n        }\n\n        return retArr;\n      }\n    }\n\n    var easeInBez = BezierFactory.getBezierEasing(0.333, 0, .833, .833, 'easeIn').get;\n    var easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, .667, 1, 'easeOut').get;\n    var easeInOutBez = BezierFactory.getBezierEasing(.33, 0, .667, 1, 'easeInOut').get;\n\n    function sum(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n\n      if (tOfA === 'string' || tOfB === 'string') {\n        return a + b;\n      }\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a + b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] = a[0] + b;\n        return a;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a + b[0];\n        return b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0,\n            lenA = a.length,\n            lenB = b.length;\n        var retArr = [];\n\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\n            retArr[i] = a[i] + b[i];\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\n          }\n\n          i += 1;\n        }\n\n        return retArr;\n      }\n\n      return 0;\n    }\n\n    var add = sum;\n\n    function sub(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        if (tOfA === 'string') {\n          a = parseInt(a);\n        }\n\n        if (tOfB === 'string') {\n          b = parseInt(b);\n        }\n\n        return a - b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] = a[0] - b;\n        return a;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a - b[0];\n        return b;\n      }\n\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0,\n            lenA = a.length,\n            lenB = b.length;\n        var retArr = [];\n\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\n            retArr[i] = a[i] - b[i];\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\n          }\n\n          i += 1;\n        }\n\n        return retArr;\n      }\n\n      return 0;\n    }\n\n    function mul(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      var arr;\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a * b;\n      }\n\n      var i, len;\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] * b;\n        }\n\n        return arr;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a * b[i];\n        }\n\n        return arr;\n      }\n\n      return 0;\n    }\n\n    function div(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      var arr;\n\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a / b;\n      }\n\n      var i, len;\n\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] / b;\n        }\n\n        return arr;\n      }\n\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray('float32', len);\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a / b[i];\n        }\n\n        return arr;\n      }\n\n      return 0;\n    }\n\n    function mod(a, b) {\n      if (typeof a === 'string') {\n        a = parseInt(a);\n      }\n\n      if (typeof b === 'string') {\n        b = parseInt(b);\n      }\n\n      return a % b;\n    }\n\n    var $bm_sum = sum;\n    var $bm_sub = sub;\n    var $bm_mul = mul;\n    var $bm_div = div;\n    var $bm_mod = mod;\n\n    function clamp(num, min, max) {\n      if (min > max) {\n        var mm = max;\n        max = min;\n        min = mm;\n      }\n\n      return Math.min(Math.max(num, min), max);\n    }\n\n    function radiansToDegrees(val) {\n      return val / degToRads;\n    }\n\n    var radians_to_degrees = radiansToDegrees;\n\n    function degreesToRadians(val) {\n      return val * degToRads;\n    }\n\n    var degrees_to_radians = radiansToDegrees;\n    var helperLengthArray = [0, 0, 0, 0, 0, 0];\n\n    function length(arr1, arr2) {\n      if (typeof arr1 === 'number' || arr1 instanceof Number) {\n        arr2 = arr2 || 0;\n        return Math.abs(arr1 - arr2);\n      }\n\n      if (!arr2) {\n        arr2 = helperLengthArray;\n      }\n\n      var i,\n          len = Math.min(arr1.length, arr2.length);\n      var addedLength = 0;\n\n      for (i = 0; i < len; i += 1) {\n        addedLength += Math.pow(arr2[i] - arr1[i], 2);\n      }\n\n      return Math.sqrt(addedLength);\n    }\n\n    function normalize(vec) {\n      return div(vec, length(vec));\n    }\n\n    function rgbToHsl(val) {\n      var r = val[0];\n      var g = val[1];\n      var b = val[2];\n      var max = Math.max(r, g, b),\n          min = Math.min(r, g, b);\n      var h,\n          s,\n          l = (max + min) / 2;\n\n      if (max == min) {\n        h = s = 0; // achromatic\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            h = (b - r) / d + 2;\n            break;\n\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n\n        h /= 6;\n      }\n\n      return [h, s, l, val[3]];\n    }\n\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n\n    function hslToRgb(val) {\n      var h = val[0];\n      var s = val[1];\n      var l = val[2];\n      var r, g, b;\n\n      if (s === 0) {\n        r = g = b = l; // achromatic\n      } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n      }\n\n      return [r, g, b, val[3]];\n    }\n\n    function linear(t, tMin, tMax, value1, value2) {\n      if (value1 === undefined || value2 === undefined) {\n        value1 = tMin;\n        value2 = tMax;\n        tMin = 0;\n        tMax = 1;\n      }\n\n      if (tMax < tMin) {\n        var _tMin = tMax;\n        tMax = tMin;\n        tMin = _tMin;\n      }\n\n      if (t <= tMin) {\n        return value1;\n      } else if (t >= tMax) {\n        return value2;\n      }\n\n      var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin);\n\n      if (!value1.length) {\n        return value1 + (value2 - value1) * perc;\n      }\n\n      var i,\n          len = value1.length;\n      var arr = createTypedArray('float32', len);\n\n      for (i = 0; i < len; i += 1) {\n        arr[i] = value1[i] + (value2[i] - value1[i]) * perc;\n      }\n\n      return arr;\n    }\n\n    function random(min, max) {\n      if (max === undefined) {\n        if (min === undefined) {\n          min = 0;\n          max = 1;\n        } else {\n          max = min;\n          min = undefined;\n        }\n      }\n\n      if (max.length) {\n        var i,\n            len = max.length;\n\n        if (!min) {\n          min = createTypedArray('float32', len);\n        }\n\n        var arr = createTypedArray('float32', len);\n        var rnd = BMMath.random();\n\n        for (i = 0; i < len; i += 1) {\n          arr[i] = min[i] + rnd * (max[i] - min[i]);\n        }\n\n        return arr;\n      }\n\n      if (min === undefined) {\n        min = 0;\n      }\n\n      var rndm = BMMath.random();\n      return min + rndm * (max - min);\n    }\n\n    function createPath(points, inTangents, outTangents, closed) {\n      var i,\n          len = points.length;\n      var path = shape_pool.newElement();\n      path.setPathData(!!closed, len);\n      var arrPlaceholder = [0, 0],\n          inVertexPoint,\n          outVertexPoint;\n\n      for (i = 0; i < len; i += 1) {\n        inVertexPoint = inTangents && inTangents[i] ? inTangents[i] : arrPlaceholder;\n        outVertexPoint = outTangents && outTangents[i] ? outTangents[i] : arrPlaceholder;\n        path.setTripleAt(points[i][0], points[i][1], outVertexPoint[0] + points[i][0], outVertexPoint[1] + points[i][1], inVertexPoint[0] + points[i][0], inVertexPoint[1] + points[i][1], i, true);\n      }\n\n      return path;\n    }\n\n    function initiateExpression(elem, data, property) {\n      var val = data.x;\n      var needsVelocity = /velocity(?![\\w\\d])/.test(val);\n\n      var _needsRandom = val.indexOf('random') !== -1;\n\n      var elemType = elem.data.ty;\n      var transform, $bm_transform, content, effect;\n      var thisProperty = property;\n      thisProperty.valueAtTime = thisProperty.getValueAtTime;\n      elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;\n      elem.comp.displayStartTime = 0;\n      var inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      var outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      var width = elem.data.sw ? elem.data.sw : 0;\n      var height = elem.data.sh ? elem.data.sh : 0;\n      var name = elem.data.nm;\n      var loopIn, loop_in, loopOut, loop_out, smooth;\n      var toWorld, fromWorld, fromComp, toComp, fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp, mask, valueAtTime, velocityAtTime;\n      var __expression_functions = [];\n\n      if (data.xf) {\n        var i,\n            len = data.xf.length;\n\n        for (i = 0; i < len; i += 1) {\n          __expression_functions[i] = eval('(function(){ return ' + data.xf[i] + '}())');\n        }\n      }\n\n      var scoped_bm_rt;\n      var expression_function = eval('[function _expression_function(){' + val + ';scoped_bm_rt=$bm_rt}' + ']')[0];\n      var numKeys = property.kf ? data.k.length : 0;\n      var active = !this.data || this.data.hd !== true;\n\n      var wiggle = function wiggle(freq, amp) {\n        var i,\n            j,\n            len = this.pv.length ? this.pv.length : 1;\n        var addedAmps = createTypedArray('float32', len);\n        freq = 5;\n        var iterations = Math.floor(time * freq);\n        i = 0;\n        j = 0;\n\n        while (i < iterations) {\n          //var rnd = BMMath.random();\n          for (j = 0; j < len; j += 1) {\n            addedAmps[j] += -amp + amp * 2 * BMMath.random(); //addedAmps[j] += -amp + amp*2*rnd;\n          }\n\n          i += 1;\n        } //var rnd2 = BMMath.random();\n\n\n        var periods = time * freq;\n        var perc = periods - Math.floor(periods);\n        var arr = createTypedArray('float32', len);\n\n        if (len > 1) {\n          for (j = 0; j < len; j += 1) {\n            arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp * 2 * BMMath.random()) * perc; //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\n            //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\n          }\n\n          return arr;\n        } else {\n          return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc;\n        }\n      }.bind(this);\n\n      if (thisProperty.loopIn) {\n        loopIn = thisProperty.loopIn.bind(thisProperty);\n        loop_in = loopIn;\n      }\n\n      if (thisProperty.loopOut) {\n        loopOut = thisProperty.loopOut.bind(thisProperty);\n        loop_out = loopOut;\n      }\n\n      if (thisProperty.smooth) {\n        smooth = thisProperty.smooth.bind(thisProperty);\n      }\n\n      function loopInDuration(type, duration) {\n        return loopIn(type, duration, true);\n      }\n\n      function loopOutDuration(type, duration) {\n        return loopOut(type, duration, true);\n      }\n\n      if (this.getValueAtTime) {\n        valueAtTime = this.getValueAtTime.bind(this);\n      }\n\n      if (this.getVelocityAtTime) {\n        velocityAtTime = this.getVelocityAtTime.bind(this);\n      }\n\n      var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\n\n      function lookAt(elem1, elem2) {\n        var fVec = [elem2[0] - elem1[0], elem2[1] - elem1[1], elem2[2] - elem1[2]];\n        var pitch = Math.atan2(fVec[0], Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2])) / degToRads;\n        var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads;\n        return [yaw, pitch, 0];\n      }\n\n      function easeOut(t, tMin, tMax, val1, val2) {\n        return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\n      }\n\n      function easeIn(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInBez, t, tMin, tMax, val1, val2);\n      }\n\n      function ease(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\n      }\n\n      function applyEase(fn, t, tMin, tMax, val1, val2) {\n        if (val1 === undefined) {\n          val1 = tMin;\n          val2 = tMax;\n        } else {\n          t = (t - tMin) / (tMax - tMin);\n        }\n\n        t = t > 1 ? 1 : t < 0 ? 0 : t;\n        var mult = fn(t);\n\n        if ($bm_isInstanceOfArray(val1)) {\n          var i,\n              len = val1.length;\n          var arr = createTypedArray('float32', len);\n\n          for (i = 0; i < len; i += 1) {\n            arr[i] = (val2[i] - val1[i]) * mult + val1[i];\n          }\n\n          return arr;\n        } else {\n          return (val2 - val1) * mult + val1;\n        }\n      }\n\n      function nearestKey(time) {\n        var i,\n            len = data.k.length,\n            index,\n            keyTime;\n\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          index = 0;\n          keyTime = 0;\n        } else {\n          index = -1;\n          time *= elem.comp.globalData.frameRate;\n\n          if (time < data.k[0].t) {\n            index = 1;\n            keyTime = data.k[0].t;\n          } else {\n            for (i = 0; i < len - 1; i += 1) {\n              if (time === data.k[i].t) {\n                index = i + 1;\n                keyTime = data.k[i].t;\n                break;\n              } else if (time > data.k[i].t && time < data.k[i + 1].t) {\n                if (time - data.k[i].t > data.k[i + 1].t - time) {\n                  index = i + 2;\n                  keyTime = data.k[i + 1].t;\n                } else {\n                  index = i + 1;\n                  keyTime = data.k[i].t;\n                }\n\n                break;\n              }\n            }\n\n            if (index === -1) {\n              index = i + 1;\n              keyTime = data.k[i].t;\n            }\n          }\n        }\n\n        var ob = {};\n        ob.index = index;\n        ob.time = keyTime / elem.comp.globalData.frameRate;\n        return ob;\n      }\n\n      function key(ind) {\n        var ob, i, len;\n\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          throw new Error('The property has no keyframe at index ' + ind);\n        }\n\n        ind -= 1;\n        ob = {\n          time: data.k[ind].t / elem.comp.globalData.frameRate,\n          value: []\n        };\n        var arr;\n\n        if (ind === data.k.length - 1 && !data.k[ind].h) {\n          arr = data.k[ind - 1].e;\n        } else {\n          arr = data.k[ind].s;\n        }\n\n        len = arr.length;\n\n        for (i = 0; i < len; i += 1) {\n          ob[i] = arr[i];\n          ob.value[i] = arr[i];\n        }\n\n        return ob;\n      }\n\n      function framesToTime(frames, fps) {\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n\n        return frames / fps;\n      }\n\n      function timeToFrames(t, fps) {\n        if (!t && t !== 0) {\n          t = time;\n        }\n\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n\n        return t * fps;\n      }\n\n      function seedRandom(seed) {\n        BMMath.seedrandom(randSeed + seed);\n      }\n\n      function sourceRectAtTime() {\n        return elem.sourceRectAtTime();\n      }\n\n      function substring(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substring(init);\n          }\n\n          return value.substring(init, end);\n        }\n\n        return '';\n      }\n\n      function substr(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substr(init);\n          }\n\n          return value.substr(init, end);\n        }\n\n        return '';\n      }\n\n      var time, velocity, value, text, textIndex, textTotal, selectorValue;\n      var index = elem.data.ind;\n      var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n      var parent;\n      var randSeed = Math.floor(Math.random() * 1000000);\n      var globalData = elem.globalData;\n\n      function executeExpression(_value) {\n        // globalData.pushExpression();\n        value = _value;\n\n        if (_needsRandom) {\n          seedRandom(randSeed);\n        }\n\n        if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\n          return value;\n        }\n\n        if (this.propType === 'textSelector') {\n          textIndex = this.textIndex;\n          textTotal = this.textTotal;\n          selectorValue = this.selectorValue;\n        }\n\n        if (!thisLayer) {\n          text = elem.layerInterface.text;\n          thisLayer = elem.layerInterface;\n          thisComp = elem.comp.compInterface;\n          toWorld = thisLayer.toWorld.bind(thisLayer);\n          fromWorld = thisLayer.fromWorld.bind(thisLayer);\n          fromComp = thisLayer.fromComp.bind(thisLayer);\n          toComp = thisLayer.toComp.bind(thisLayer);\n          mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\n          fromCompToSurface = fromComp;\n        }\n\n        if (!transform) {\n          transform = elem.layerInterface(\"ADBE Transform Group\");\n          $bm_transform = transform;\n\n          if (transform) {\n            anchorPoint = transform.anchorPoint;\n            /*position = transform.position;\r\n            rotation = transform.rotation;\r\n            scale = transform.scale;*/\n          }\n        }\n\n        if (elemType === 4 && !content) {\n          content = thisLayer(\"ADBE Root Vectors Group\");\n        }\n\n        if (!effect) {\n          effect = thisLayer(4);\n        }\n\n        hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n\n        if (hasParent && !parent) {\n          parent = elem.hierarchy[0].layerInterface;\n        }\n\n        time = this.comp.renderedFrame / this.comp.globalData.frameRate;\n\n        if (needsVelocity) {\n          velocity = velocityAtTime(time);\n        }\n\n        expression_function();\n        this.frameExpressionId = elem.globalData.frameId; //TODO: Check if it's possible to return on ShapeInterface the .v value\n\n        if (scoped_bm_rt.propType === \"shape\") {\n          scoped_bm_rt = scoped_bm_rt.v;\n        } // globalData.popExpression();\n\n\n        return scoped_bm_rt;\n      }\n\n      return executeExpression;\n    }\n\n    ob.initiateExpression = initiateExpression;\n    return ob;\n  }();\n\n  var expressionHelpers = function () {\n    function searchExpressions(elem, data, prop) {\n      if (data.x) {\n        prop.k = true;\n        prop.x = true;\n        prop.initiateExpression = ExpressionManager.initiateExpression;\n        prop.effectsSequence.push(prop.initiateExpression(elem, data, prop).bind(prop));\n      }\n    }\n\n    function getValueAtTime(frameNum) {\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\n        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\n        this._cachingAtTime.lastFrame = frameNum;\n      }\n\n      return this._cachingAtTime.value;\n    }\n\n    function getSpeedAtTime(frameNum) {\n      var delta = -0.01;\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var speed = 0;\n\n      if (v1.length) {\n        var i;\n\n        for (i = 0; i < v1.length; i += 1) {\n          speed += Math.pow(v2[i] - v1[i], 2);\n        }\n\n        speed = Math.sqrt(speed) * 100;\n      } else {\n        speed = 0;\n      }\n\n      return speed;\n    }\n\n    function getVelocityAtTime(frameNum) {\n      if (this.vel !== undefined) {\n        return this.vel;\n      }\n\n      var delta = -0.001; //frameNum += this.elem.data.st;\n\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var velocity;\n\n      if (v1.length) {\n        velocity = createTypedArray('float32', v1.length);\n        var i;\n\n        for (i = 0; i < v1.length; i += 1) {\n          //removing frameRate\n          //if needed, don't add it here\n          //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\n          velocity[i] = (v2[i] - v1[i]) / delta;\n        }\n      } else {\n        velocity = (v2 - v1) / delta;\n      }\n\n      return velocity;\n    }\n\n    function getStaticValueAtTime() {\n      return this.pv;\n    }\n\n    function setGroupProperty(propertyGroup) {\n      this.propertyGroup = propertyGroup;\n    }\n\n    return {\n      searchExpressions: searchExpressions,\n      getSpeedAtTime: getSpeedAtTime,\n      getVelocityAtTime: getVelocityAtTime,\n      getValueAtTime: getValueAtTime,\n      getStaticValueAtTime: getStaticValueAtTime,\n      setGroupProperty: setGroupProperty\n    };\n  }();\n\n  (function addPropertyDecorator() {\n    function loopOut(type, duration, durationFlag) {\n      if (!this.k || !this.keyframes) {\n        return this.pv;\n      }\n\n      type = type ? type.toLowerCase() : '';\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var lastKeyFrame = keyframes[keyframes.length - 1].t;\n\n      if (currentFrame <= lastKeyFrame) {\n        return this.pv;\n      } else {\n        var cycleDuration, firstKeyFrame;\n\n        if (!durationFlag) {\n          if (!duration || duration > keyframes.length - 1) {\n            duration = keyframes.length - 1;\n          }\n\n          firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\n          cycleDuration = lastKeyFrame - firstKeyFrame;\n        } else {\n          if (!duration) {\n            cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip);\n          } else {\n            cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate * duration);\n          }\n\n          firstKeyFrame = lastKeyFrame - cycleDuration;\n        }\n\n        var i, len, ret;\n\n        if (type === 'pingpong') {\n          var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n\n          if (iterations % 2 !== 0) {\n            return this.getValueAtTime((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n          }\n        } else if (type === 'offset') {\n          var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n          var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n          var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n          var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n\n          if (this.pv.length) {\n            ret = new Array(initV.length);\n            len = ret.length;\n\n            for (i = 0; i < len; i += 1) {\n              ret[i] = (endV[i] - initV[i]) * repeats + current[i];\n            }\n\n            return ret;\n          }\n\n          return (endV - initV) * repeats + current;\n        } else if (type === 'continue') {\n          var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n          var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\n\n          if (this.pv.length) {\n            ret = new Array(lastValue.length);\n            len = ret.length;\n\n            for (i = 0; i < len; i += 1) {\n              ret[i] = lastValue[i] + (lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate) / 0.0005;\n            }\n\n            return ret;\n          }\n\n          return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 0.001);\n        }\n\n        return this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n      }\n    }\n\n    function loopIn(type, duration, durationFlag) {\n      if (!this.k) {\n        return this.pv;\n      }\n\n      type = type ? type.toLowerCase() : '';\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var firstKeyFrame = keyframes[0].t;\n\n      if (currentFrame >= firstKeyFrame) {\n        return this.pv;\n      } else {\n        var cycleDuration, lastKeyFrame;\n\n        if (!durationFlag) {\n          if (!duration || duration > keyframes.length - 1) {\n            duration = keyframes.length - 1;\n          }\n\n          lastKeyFrame = keyframes[duration].t;\n          cycleDuration = lastKeyFrame - firstKeyFrame;\n        } else {\n          if (!duration) {\n            cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame);\n          } else {\n            cycleDuration = Math.abs(elem.comp.globalData.frameRate * duration);\n          }\n\n          lastKeyFrame = firstKeyFrame + cycleDuration;\n        }\n\n        var i, len, ret;\n\n        if (type === 'pingpong') {\n          var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration);\n\n          if (iterations % 2 === 0) {\n            return this.getValueAtTime(((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n          }\n        } else if (type === 'offset') {\n          var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n          var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n          var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n          var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1;\n\n          if (this.pv.length) {\n            ret = new Array(initV.length);\n            len = ret.length;\n\n            for (i = 0; i < len; i += 1) {\n              ret[i] = current[i] - (endV[i] - initV[i]) * repeats;\n            }\n\n            return ret;\n          }\n\n          return current - (endV - initV) * repeats;\n        } else if (type === 'continue') {\n          var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n          var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\n\n          if (this.pv.length) {\n            ret = new Array(firstValue.length);\n            len = ret.length;\n\n            for (i = 0; i < len; i += 1) {\n              ret[i] = firstValue[i] + (firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame) / 0.001;\n            }\n\n            return ret;\n          }\n\n          return firstValue + (firstValue - nextFirstValue) * (firstKeyFrame - currentFrame) / 0.001;\n        }\n\n        return this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n      }\n    }\n\n    function smooth(width, samples) {\n      if (!this.k) {\n        return this.pv;\n      }\n\n      width = (width || 0.4) * 0.5;\n      samples = Math.floor(samples || 5);\n\n      if (samples <= 1) {\n        return this.pv;\n      }\n\n      var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\n      var initFrame = currentTime - width;\n      var endFrame = currentTime + width;\n      var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\n      var i = 0,\n          j = 0;\n      var value;\n\n      if (this.pv.length) {\n        value = createTypedArray('float32', this.pv.length);\n      } else {\n        value = 0;\n      }\n\n      var sampleValue;\n\n      while (i < samples) {\n        sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\n\n        if (this.pv.length) {\n          for (j = 0; j < this.pv.length; j += 1) {\n            value[j] += sampleValue[j];\n          }\n        } else {\n          value += sampleValue;\n        }\n\n        i += 1;\n      }\n\n      if (this.pv.length) {\n        for (j = 0; j < this.pv.length; j += 1) {\n          value[j] /= samples;\n        }\n      } else {\n        value /= samples;\n      }\n\n      return value;\n    }\n\n    function getValueAtTime(frameNum) {\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\n        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\n        this._cachingAtTime.lastFrame = frameNum;\n      }\n\n      return this._cachingAtTime.value;\n    }\n\n    function getTransformValueAtTime(time) {\n      console.warn('Transform at time not supported');\n    }\n\n    function getTransformStaticValueAtTime(time) {}\n\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\n\n    TransformPropertyFactory.getTransformProperty = function (elem, data, container) {\n      var prop = getTransformProperty(elem, data, container);\n\n      if (prop.dynamicProperties.length) {\n        prop.getValueAtTime = getTransformValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\n      }\n\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      return prop;\n    };\n\n    var propertyGetProp = PropertyFactory.getProp;\n\n    PropertyFactory.getProp = function (elem, data, type, mult, container) {\n      var prop = propertyGetProp(elem, data, type, mult, container); //prop.getVelocityAtTime = getVelocityAtTime;\n      //prop.loopOut = loopOut;\n      //prop.loopIn = loopIn;\n\n      if (prop.kf) {\n        prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\n      }\n\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      prop.loopOut = loopOut;\n      prop.loopIn = loopIn;\n      prop.smooth = smooth;\n      prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\n      prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\n      prop.numKeys = data.a === 1 ? data.k.length : 0;\n      prop.propertyIndex = data.ix;\n      var value = 0;\n\n      if (type !== 0) {\n        value = createTypedArray('float32', data.a === 1 ? data.k[0].s.length : data.k.length);\n      }\n\n      prop._cachingAtTime = {\n        lastFrame: initialDefaultFrame,\n        lastIndex: 0,\n        value: value\n      };\n      expressionHelpers.searchExpressions(elem, data, prop);\n\n      if (prop.k) {\n        container.addDynamicProperty(prop);\n      }\n\n      return prop;\n    };\n\n    function getShapeValueAtTime(frameNum) {\n      //For now this caching object is created only when needed instead of creating it when the shape is initialized.\n      if (!this._cachingAtTime) {\n        this._cachingAtTime = {\n          shapeValue: shape_pool.clone(this.pv),\n          lastIndex: 0,\n          lastTime: initialDefaultFrame\n        };\n      }\n\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n\n      if (frameNum !== this._cachingAtTime.lastTime) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\n        this._cachingAtTime.lastTime = frameNum;\n        this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\n      }\n\n      return this._cachingAtTime.shapeValue;\n    }\n\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\n\n    function ShapeExpressions() {}\n\n    ShapeExpressions.prototype = {\n      vertices: function vertices(prop, time) {\n        if (this.k) {\n          this.getValue();\n        }\n\n        var shapePath = this.v;\n\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0);\n        }\n\n        var i,\n            len = shapePath._length;\n        var vertices = shapePath[prop];\n        var points = shapePath.v;\n        var arr = createSizedArray(len);\n\n        for (i = 0; i < len; i += 1) {\n          if (prop === 'i' || prop === 'o') {\n            arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\n          } else {\n            arr[i] = [vertices[i][0], vertices[i][1]];\n          }\n        }\n\n        return arr;\n      },\n      points: function points(time) {\n        return this.vertices('v', time);\n      },\n      inTangents: function inTangents(time) {\n        return this.vertices('i', time);\n      },\n      outTangents: function outTangents(time) {\n        return this.vertices('o', time);\n      },\n      isClosed: function isClosed() {\n        return this.v.c;\n      },\n      pointOnPath: function pointOnPath(perc, time) {\n        var shapePath = this.v;\n\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0);\n        }\n\n        if (!this._segmentsLength) {\n          this._segmentsLength = bez.getSegmentsLength(shapePath);\n        }\n\n        var segmentsLength = this._segmentsLength;\n        var lengths = segmentsLength.lengths;\n        var lengthPos = segmentsLength.totalLength * perc;\n        var i = 0,\n            len = lengths.length;\n        var j = 0,\n            jLen;\n        var accumulatedLength = 0,\n            pt;\n\n        while (i < len) {\n          if (accumulatedLength + lengths[i].addedLength > lengthPos) {\n            var initIndex = i;\n            var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1;\n            var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength;\n            pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\n            break;\n          } else {\n            accumulatedLength += lengths[i].addedLength;\n          }\n\n          i += 1;\n        }\n\n        if (!pt) {\n          pt = shapePath.c ? [shapePath.v[0][0], shapePath.v[0][1]] : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]];\n        }\n\n        return pt;\n      },\n      vectorOnPath: function vectorOnPath(perc, time, vectorType) {\n        //perc doesn't use triple equality because it can be a Number object as well as a primitive.\n        perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\n        var pt1 = this.pointOnPath(perc, time);\n        var pt2 = this.pointOnPath(perc + 0.001, time);\n        var xLength = pt2[0] - pt1[0];\n        var yLength = pt2[1] - pt1[1];\n        var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2));\n        var unitVector = vectorType === 'tangent' ? [xLength / magnitude, yLength / magnitude] : [-yLength / magnitude, xLength / magnitude];\n        return unitVector;\n      },\n      tangentOnPath: function tangentOnPath(perc, time) {\n        return this.vectorOnPath(perc, time, 'tangent');\n      },\n      normalOnPath: function normalOnPath(perc, time) {\n        return this.vectorOnPath(perc, time, 'normal');\n      },\n      setGroupProperty: expressionHelpers.setGroupProperty,\n      getValueAtTime: expressionHelpers.getStaticValueAtTime\n    };\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\n\n    ShapePropertyFactory.getShapeProp = function (elem, data, type, arr, trims) {\n      var prop = propertyGetShapeProp(elem, data, type, arr, trims);\n      prop.propertyIndex = data.ix;\n      prop.lock = false;\n\n      if (type === 3) {\n        expressionHelpers.searchExpressions(elem, data.pt, prop);\n      } else if (type === 4) {\n        expressionHelpers.searchExpressions(elem, data.ks, prop);\n      }\n\n      if (prop.k) {\n        elem.addDynamicProperty(prop);\n      }\n\n      return prop;\n    };\n  })();\n\n  (function addDecorator() {\n    function searchExpressions() {\n      if (this.data.d.x) {\n        this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this);\n        this.addEffect(this.getExpressionValue.bind(this));\n        return true;\n      }\n    }\n\n    TextProperty.prototype.getExpressionValue = function (currentValue, text) {\n      var newValue = this.calculateExpression(text);\n\n      if (currentValue.t !== newValue) {\n        var newData = {};\n        this.copyData(newData, currentValue);\n        newData.t = newValue.toString();\n        newData.__complete = false;\n        return newData;\n      }\n\n      return currentValue;\n    };\n\n    TextProperty.prototype.searchProperty = function () {\n      var isKeyframed = this.searchKeyframes();\n      var hasExpressions = this.searchExpressions();\n      this.kf = isKeyframed || hasExpressions;\n      return this.kf;\n    };\n\n    TextProperty.prototype.searchExpressions = searchExpressions;\n  })();\n\n  var ShapeExpressionInterface = function () {\n    function iterateElements(shapes, view, propertyGroup) {\n      var arr = [];\n      var i,\n          len = shapes ? shapes.length : 0;\n\n      for (i = 0; i < len; i += 1) {\n        if (shapes[i].ty == 'gr') {\n          arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'fl') {\n          arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'st') {\n          arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'tm') {\n          arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'tr') {//arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\n        } else if (shapes[i].ty == 'el') {\n          arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'sr') {\n          arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'sh') {\n          arr.push(pathInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'rc') {\n          arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'rd') {\n          arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty == 'rp') {\n          arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup));\n        }\n      }\n\n      return arr;\n    }\n\n    function contentsInterfaceFactory(shape, view, propertyGroup) {\n      var interfaces;\n\n      var interfaceFunction = function _interfaceFunction(value) {\n        var i = 0,\n            len = interfaces.length;\n\n        while (i < len) {\n          if (interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value) {\n            return interfaces[i];\n          }\n\n          i += 1;\n        }\n\n        if (typeof value === 'number') {\n          return interfaces[value - 1];\n        }\n      };\n\n      interfaceFunction.propertyGroup = function (val) {\n        if (val === 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(val - 1);\n        }\n      };\n\n      interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\n      interfaceFunction.numProperties = interfaces.length;\n      interfaceFunction.propertyIndex = shape.cix;\n      interfaceFunction._name = shape.nm;\n      return interfaceFunction;\n    }\n\n    function groupInterfaceFactory(shape, view, propertyGroup) {\n      var interfaceFunction = function _interfaceFunction(value) {\n        switch (value) {\n          case 'ADBE Vectors Group':\n          case 'Contents':\n          case 2:\n            return interfaceFunction.content;\n          //Not necessary for now. Keeping them here in case a new case appears\n          //case 'ADBE Vector Transform Group':\n          //case 3:\n\n          default:\n            return interfaceFunction.transform;\n        }\n      };\n\n      interfaceFunction.propertyGroup = function (val) {\n        if (val === 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(val - 1);\n        }\n      };\n\n      var content = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup);\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.content = content;\n      interfaceFunction.transform = transformInterface;\n      Object.defineProperty(interfaceFunction, '_name', {\n        get: function get() {\n          return shape.nm;\n        }\n      }); //interfaceFunction.content = interfaceFunction;\n\n      interfaceFunction.numProperties = shape.np;\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.nm = shape.nm;\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function fillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color;\n        } else if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'color': {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        'opacity': {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        '_name': {\n          value: shape.nm\n        },\n        'mn': {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(propertyGroup);\n      view.o.setGroupProperty(propertyGroup);\n      return interfaceFunction;\n    }\n\n    function strokeInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val === 1) {\n          return ob;\n        } else {\n          return propertyGroup(val - 1);\n        }\n      }\n\n      function _dashPropertyGroup(val) {\n        if (val === 1) {\n          return dashOb;\n        } else {\n          return _propertyGroup(val - 1);\n        }\n      }\n\n      function addPropertyToDashOb(i) {\n        Object.defineProperty(dashOb, shape.d[i].nm, {\n          get: ExpressionPropertyInterface(view.d.dataProps[i].p)\n        });\n      }\n\n      var i,\n          len = shape.d ? shape.d.length : 0;\n      var dashOb = {};\n\n      for (i = 0; i < len; i += 1) {\n        addPropertyToDashOb(i);\n        view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\n      }\n\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color;\n        } else if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity;\n        } else if (val === 'Stroke Width' || val === 'stroke width') {\n          return interfaceFunction.strokeWidth;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'color': {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        'opacity': {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        'strokeWidth': {\n          get: ExpressionPropertyInterface(view.w)\n        },\n        'dash': {\n          get: function get() {\n            return dashOb;\n          }\n        },\n        '_name': {\n          value: shape.nm\n        },\n        'mn': {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(_propertyGroup);\n      view.o.setGroupProperty(_propertyGroup);\n      view.w.setGroupProperty(_propertyGroup);\n      return interfaceFunction;\n    }\n\n    function trimInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      interfaceFunction.propertyIndex = shape.ix;\n      view.s.setGroupProperty(_propertyGroup);\n      view.e.setGroupProperty(_propertyGroup);\n      view.o.setGroupProperty(_propertyGroup);\n\n      function interfaceFunction(val) {\n        if (val === shape.e.ix || val === 'End' || val === 'end') {\n          return interfaceFunction.end;\n        }\n\n        if (val === shape.s.ix) {\n          return interfaceFunction.start;\n        }\n\n        if (val === shape.o.ix) {\n          return interfaceFunction.offset;\n        }\n      }\n\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.propertyGroup = propertyGroup;\n      Object.defineProperties(interfaceFunction, {\n        'start': {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        'end': {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        'offset': {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        '_name': {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function transformInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      view.transform.mProps.o.setGroupProperty(_propertyGroup);\n      view.transform.mProps.p.setGroupProperty(_propertyGroup);\n      view.transform.mProps.a.setGroupProperty(_propertyGroup);\n      view.transform.mProps.s.setGroupProperty(_propertyGroup);\n      view.transform.mProps.r.setGroupProperty(_propertyGroup);\n\n      if (view.transform.mProps.sk) {\n        view.transform.mProps.sk.setGroupProperty(_propertyGroup);\n        view.transform.mProps.sa.setGroupProperty(_propertyGroup);\n      }\n\n      view.transform.op.setGroupProperty(_propertyGroup);\n\n      function interfaceFunction(value) {\n        if (shape.a.ix === value || value === 'Anchor Point') {\n          return interfaceFunction.anchorPoint;\n        }\n\n        if (shape.o.ix === value || value === 'Opacity') {\n          return interfaceFunction.opacity;\n        }\n\n        if (shape.p.ix === value || value === 'Position') {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation') {\n          return interfaceFunction.rotation;\n        }\n\n        if (shape.s.ix === value || value === 'Scale') {\n          return interfaceFunction.scale;\n        }\n\n        if (shape.sk && shape.sk.ix === value || value === 'Skew') {\n          return interfaceFunction.skew;\n        }\n\n        if (shape.sa && shape.sa.ix === value || value === 'Skew Axis') {\n          return interfaceFunction.skewAxis;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'opacity': {\n          get: ExpressionPropertyInterface(view.transform.mProps.o)\n        },\n        'position': {\n          get: ExpressionPropertyInterface(view.transform.mProps.p)\n        },\n        'anchorPoint': {\n          get: ExpressionPropertyInterface(view.transform.mProps.a)\n        },\n        'scale': {\n          get: ExpressionPropertyInterface(view.transform.mProps.s)\n        },\n        'rotation': {\n          get: ExpressionPropertyInterface(view.transform.mProps.r)\n        },\n        'skew': {\n          get: ExpressionPropertyInterface(view.transform.mProps.sk)\n        },\n        'skewAxis': {\n          get: ExpressionPropertyInterface(view.transform.mProps.sa)\n        },\n        '_name': {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.ty = 'tr';\n      interfaceFunction.mn = shape.mn;\n      interfaceFunction.propertyGroup = propertyGroup;\n      return interfaceFunction;\n    }\n\n    function ellipseInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      interfaceFunction.propertyIndex = shape.ix;\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      prop.s.setGroupProperty(_propertyGroup);\n      prop.p.setGroupProperty(_propertyGroup);\n\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.s.ix === value) {\n          return interfaceFunction.size;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'size': {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        'position': {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        '_name': {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function starInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.or.setGroupProperty(_propertyGroup);\n      prop.os.setGroupProperty(_propertyGroup);\n      prop.pt.setGroupProperty(_propertyGroup);\n      prop.p.setGroupProperty(_propertyGroup);\n      prop.r.setGroupProperty(_propertyGroup);\n\n      if (shape.ir) {\n        prop.ir.setGroupProperty(_propertyGroup);\n        prop.is.setGroupProperty(_propertyGroup);\n      }\n\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value) {\n          return interfaceFunction.rotation;\n        }\n\n        if (shape.pt.ix === value) {\n          return interfaceFunction.points;\n        }\n\n        if (shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value) {\n          return interfaceFunction.outerRadius;\n        }\n\n        if (shape.os.ix === value) {\n          return interfaceFunction.outerRoundness;\n        }\n\n        if (shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)) {\n          return interfaceFunction.innerRadius;\n        }\n\n        if (shape.is && shape.is.ix === value) {\n          return interfaceFunction.innerRoundness;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'position': {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        'rotation': {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        'points': {\n          get: ExpressionPropertyInterface(prop.pt)\n        },\n        'outerRadius': {\n          get: ExpressionPropertyInterface(prop.or)\n        },\n        'outerRoundness': {\n          get: ExpressionPropertyInterface(prop.os)\n        },\n        'innerRadius': {\n          get: ExpressionPropertyInterface(prop.ir)\n        },\n        'innerRoundness': {\n          get: ExpressionPropertyInterface(prop.is)\n        },\n        '_name': {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function rectInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.p.setGroupProperty(_propertyGroup);\n      prop.s.setGroupProperty(_propertyGroup);\n      prop.r.setGroupProperty(_propertyGroup);\n\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n\n        if (shape.r.ix === value) {\n          return interfaceFunction.roundness;\n        }\n\n        if (shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size') {\n          return interfaceFunction.size;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'position': {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        'roundness': {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        'size': {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        '_name': {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function roundedInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.rd.setGroupProperty(_propertyGroup);\n\n      function interfaceFunction(value) {\n        if (shape.r.ix === value || 'Round Corners 1' === value) {\n          return interfaceFunction.radius;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'radius': {\n          get: ExpressionPropertyInterface(prop.rd)\n        },\n        '_name': {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function repeaterInterfaceFactory(shape, view, propertyGroup) {\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.c.setGroupProperty(_propertyGroup);\n      prop.o.setGroupProperty(_propertyGroup);\n\n      function interfaceFunction(value) {\n        if (shape.c.ix === value || 'Copies' === value) {\n          return interfaceFunction.copies;\n        } else if (shape.o.ix === value || 'Offset' === value) {\n          return interfaceFunction.offset;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'copies': {\n          get: ExpressionPropertyInterface(prop.c)\n        },\n        'offset': {\n          get: ExpressionPropertyInterface(prop.o)\n        },\n        '_name': {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n\n    function pathInterfaceFactory(shape, view, propertyGroup) {\n      var prop = view.sh;\n\n      function _propertyGroup(val) {\n        if (val == 1) {\n          return interfaceFunction;\n        } else {\n          return propertyGroup(--val);\n        }\n      }\n\n      prop.setGroupProperty(_propertyGroup);\n\n      function interfaceFunction(val) {\n        if (val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2) {\n          return interfaceFunction.path;\n        }\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        'path': {\n          get: function get() {\n            if (prop.k) {\n              prop.getValue();\n            }\n\n            return prop;\n          }\n        },\n        'shape': {\n          get: function get() {\n            if (prop.k) {\n              prop.getValue();\n            }\n\n            return prop;\n          }\n        },\n        '_name': {\n          value: shape.nm\n        },\n        'ix': {\n          value: shape.ix\n        },\n        'mn': {\n          value: shape.mn\n        }\n      });\n      return interfaceFunction;\n    }\n\n    return function (shapes, view, propertyGroup) {\n      var interfaces;\n\n      function _interfaceFunction(value) {\n        if (typeof value === 'number') {\n          return interfaces[value - 1];\n        } else {\n          var i = 0,\n              len = interfaces.length;\n\n          while (i < len) {\n            if (interfaces[i]._name === value) {\n              return interfaces[i];\n            }\n\n            i += 1;\n          }\n        }\n      }\n\n      _interfaceFunction.propertyGroup = propertyGroup;\n      interfaces = iterateElements(shapes, view, _interfaceFunction);\n      _interfaceFunction.numProperties = interfaces.length;\n      return _interfaceFunction;\n    };\n  }();\n\n  var TextExpressionInterface = function () {\n    return function (elem) {\n      var _prevValue, _sourceText;\n\n      function _thisLayerFunction() {}\n\n      Object.defineProperty(_thisLayerFunction, \"sourceText\", {\n        get: function get() {\n          elem.textProperty.getValue();\n          var stringValue = elem.textProperty.currentData.t;\n\n          if (stringValue !== _prevValue) {\n            elem.textProperty.currentData.t = _prevValue;\n            _sourceText = new String(stringValue); //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\n\n            _sourceText.value = stringValue ? stringValue : new String(stringValue);\n          }\n\n          return _sourceText;\n        }\n      });\n      return _thisLayerFunction;\n    };\n  }();\n\n  var LayerExpressionInterface = function () {\n    function toWorld(arr, time) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n      var transformMat;\n\n      if (time) {\n        //Todo implement value at time on transform properties\n        //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\n        transformMat = this._elem.finalTransform.mProp;\n      } else {\n        transformMat = this._elem.finalTransform.mProp;\n      }\n\n      transformMat.applyToMatrix(toWorldMat);\n\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i,\n            len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n\n        return toWorldMat.applyToPointArray(arr[0], arr[1], arr[2] || 0);\n      }\n\n      return toWorldMat.applyToPointArray(arr[0], arr[1], arr[2] || 0);\n    }\n\n    function fromWorld(arr, time) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n      var transformMat;\n\n      if (time) {\n        //Todo implement value at time on transform properties\n        //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\n        transformMat = this._elem.finalTransform.mProp;\n      } else {\n        transformMat = this._elem.finalTransform.mProp;\n      }\n\n      transformMat.applyToMatrix(toWorldMat);\n\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i,\n            len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n\n        return toWorldMat.inversePoint(arr);\n      }\n\n      return toWorldMat.inversePoint(arr);\n    }\n\n    function fromComp(arr) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n\n      this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\n\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i,\n            len = this._elem.hierarchy.length;\n\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n\n        return toWorldMat.inversePoint(arr);\n      }\n\n      return toWorldMat.inversePoint(arr);\n    }\n\n    function sampleImage() {\n      return [1, 1, 1, 1];\n    }\n\n    return function (elem) {\n      var transformInterface;\n\n      function _registerMaskInterface(maskManager) {\n        _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\n      }\n\n      function _registerEffectsInterface(effects) {\n        _thisLayerFunction.effect = effects;\n      }\n\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case \"ADBE Root Vectors Group\":\n          case \"Contents\":\n          case 2:\n            return _thisLayerFunction.shapeInterface;\n\n          case 1:\n          case 6:\n          case \"Transform\":\n          case \"transform\":\n          case \"ADBE Transform Group\":\n            return transformInterface;\n\n          case 4:\n          case \"ADBE Effect Parade\":\n          case \"effects\":\n          case \"Effects\":\n            return _thisLayerFunction.effect;\n        }\n      }\n\n      _thisLayerFunction.toWorld = toWorld;\n      _thisLayerFunction.fromWorld = fromWorld;\n      _thisLayerFunction.toComp = toWorld;\n      _thisLayerFunction.fromComp = fromComp;\n      _thisLayerFunction.sampleImage = sampleImage;\n      _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\n      _thisLayerFunction._elem = elem;\n      transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\n      var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\n      Object.defineProperties(_thisLayerFunction, {\n        hasParent: {\n          get: function get() {\n            return elem.hierarchy.length;\n          }\n        },\n        parent: {\n          get: function get() {\n            return elem.hierarchy[0].layerInterface;\n          }\n        },\n        rotation: getDescriptor(transformInterface, 'rotation'),\n        scale: getDescriptor(transformInterface, 'scale'),\n        position: getDescriptor(transformInterface, 'position'),\n        opacity: getDescriptor(transformInterface, 'opacity'),\n        anchorPoint: anchorPointDescriptor,\n        anchor_point: anchorPointDescriptor,\n        transform: {\n          get: function get() {\n            return transformInterface;\n          }\n        },\n        active: {\n          get: function get() {\n            return elem.isInRange;\n          }\n        }\n      });\n      _thisLayerFunction.startTime = elem.data.st;\n      _thisLayerFunction.index = elem.data.ind;\n      _thisLayerFunction.source = elem.data.refId;\n      _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\n      _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\n      _thisLayerFunction.inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      _thisLayerFunction.outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      _thisLayerFunction._name = elem.data.nm;\n      _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\n      _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\n      return _thisLayerFunction;\n    };\n  }();\n\n  var CompExpressionInterface = function () {\n    return function (comp) {\n      function _thisLayerFunction(name) {\n        var i = 0,\n            len = comp.layers.length;\n\n        while (i < len) {\n          if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\n            return comp.elements[i].layerInterface;\n          }\n\n          i += 1;\n        }\n\n        return null; //return {active:false};\n      }\n\n      Object.defineProperty(_thisLayerFunction, \"_name\", {\n        value: comp.data.nm\n      });\n      _thisLayerFunction.layer = _thisLayerFunction;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\n      _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;\n      _thisLayerFunction.displayStartTime = 0;\n      _thisLayerFunction.numLayers = comp.layers.length;\n      return _thisLayerFunction;\n    };\n  }();\n\n  var TransformExpressionInterface = function () {\n    return function (transform) {\n      function _thisFunction(name) {\n        switch (name) {\n          case \"scale\":\n          case \"Scale\":\n          case \"ADBE Scale\":\n          case 6:\n            return _thisFunction.scale;\n\n          case \"rotation\":\n          case \"Rotation\":\n          case \"ADBE Rotation\":\n          case \"ADBE Rotate Z\":\n          case 10:\n            return _thisFunction.rotation;\n\n          case \"ADBE Rotate X\":\n            return _thisFunction.xRotation;\n\n          case \"ADBE Rotate Y\":\n            return _thisFunction.yRotation;\n\n          case \"position\":\n          case \"Position\":\n          case \"ADBE Position\":\n          case 2:\n            return _thisFunction.position;\n\n          case 'ADBE Position_0':\n            return _thisFunction.xPosition;\n\n          case 'ADBE Position_1':\n            return _thisFunction.yPosition;\n\n          case 'ADBE Position_2':\n            return _thisFunction.zPosition;\n\n          case \"anchorPoint\":\n          case \"AnchorPoint\":\n          case \"Anchor Point\":\n          case \"ADBE AnchorPoint\":\n          case 1:\n            return _thisFunction.anchorPoint;\n\n          case \"opacity\":\n          case \"Opacity\":\n          case 11:\n            return _thisFunction.opacity;\n        }\n      }\n\n      Object.defineProperty(_thisFunction, \"rotation\", {\n        get: ExpressionPropertyInterface(transform.r || transform.rz)\n      });\n      Object.defineProperty(_thisFunction, \"zRotation\", {\n        get: ExpressionPropertyInterface(transform.rz || transform.r)\n      });\n      Object.defineProperty(_thisFunction, \"xRotation\", {\n        get: ExpressionPropertyInterface(transform.rx)\n      });\n      Object.defineProperty(_thisFunction, \"yRotation\", {\n        get: ExpressionPropertyInterface(transform.ry)\n      });\n      Object.defineProperty(_thisFunction, \"scale\", {\n        get: ExpressionPropertyInterface(transform.s)\n      });\n\n      if (transform.p) {\n        var _transformFactory = ExpressionPropertyInterface(transform.p);\n      }\n\n      Object.defineProperty(_thisFunction, \"position\", {\n        get: function get() {\n          if (transform.p) {\n            return _transformFactory();\n          } else {\n            return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];\n          }\n        }\n      });\n      Object.defineProperty(_thisFunction, \"xPosition\", {\n        get: ExpressionPropertyInterface(transform.px)\n      });\n      Object.defineProperty(_thisFunction, \"yPosition\", {\n        get: ExpressionPropertyInterface(transform.py)\n      });\n      Object.defineProperty(_thisFunction, \"zPosition\", {\n        get: ExpressionPropertyInterface(transform.pz)\n      });\n      Object.defineProperty(_thisFunction, \"anchorPoint\", {\n        get: ExpressionPropertyInterface(transform.a)\n      });\n      Object.defineProperty(_thisFunction, \"opacity\", {\n        get: ExpressionPropertyInterface(transform.o)\n      });\n      Object.defineProperty(_thisFunction, \"skew\", {\n        get: ExpressionPropertyInterface(transform.sk)\n      });\n      Object.defineProperty(_thisFunction, \"skewAxis\", {\n        get: ExpressionPropertyInterface(transform.sa)\n      });\n      Object.defineProperty(_thisFunction, \"orientation\", {\n        get: ExpressionPropertyInterface(transform.or)\n      });\n      return _thisFunction;\n    };\n  }();\n\n  var ProjectInterface = function () {\n    function registerComposition(comp) {\n      this.compositions.push(comp);\n    }\n\n    return function () {\n      function _thisProjectFunction(name) {\n        var i = 0,\n            len = this.compositions.length;\n\n        while (i < len) {\n          if (this.compositions[i].data && this.compositions[i].data.nm === name) {\n            if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\n              this.compositions[i].prepareFrame(this.currentFrame);\n            }\n\n            return this.compositions[i].compInterface;\n          }\n\n          i += 1;\n        }\n      }\n\n      _thisProjectFunction.compositions = [];\n      _thisProjectFunction.currentFrame = 0;\n      _thisProjectFunction.registerComposition = registerComposition;\n      return _thisProjectFunction;\n    };\n  }();\n\n  var EffectsExpressionInterface = function () {\n    var ob = {\n      createEffectsInterface: createEffectsInterface\n    };\n\n    function createEffectsInterface(elem, propertyGroup) {\n      if (elem.effectsManager) {\n        var effectElements = [];\n        var effectsData = elem.data.ef;\n        var i,\n            len = elem.effectsManager.effectElements.length;\n\n        for (i = 0; i < len; i += 1) {\n          effectElements.push(createGroupInterface(effectsData[i], elem.effectsManager.effectElements[i], propertyGroup, elem));\n        }\n\n        return function (name) {\n          var effects = elem.data.ef || [],\n              i = 0,\n              len = effects.length;\n\n          while (i < len) {\n            if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n              return effectElements[i];\n            }\n\n            i += 1;\n          }\n        };\n      }\n    }\n\n    function createGroupInterface(data, elements, propertyGroup, elem) {\n      var effectElements = [];\n      var i,\n          len = data.ef.length;\n\n      for (i = 0; i < len; i += 1) {\n        if (data.ef[i].ty === 5) {\n          effectElements.push(createGroupInterface(data.ef[i], elements.effectElements[i], elements.effectElements[i].propertyGroup, elem));\n        } else {\n          effectElements.push(createValueInterface(elements.effectElements[i], data.ef[i].ty, elem, _propertyGroup));\n        }\n      }\n\n      function _propertyGroup(val) {\n        if (val === 1) {\n          return groupInterface;\n        } else {\n          return propertyGroup(val - 1);\n        }\n      }\n\n      var groupInterface = function groupInterface(name) {\n        var effects = data.ef,\n            i = 0,\n            len = effects.length;\n\n        while (i < len) {\n          if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n            if (effects[i].ty === 5) {\n              return effectElements[i];\n            } else {\n              return effectElements[i]();\n            }\n          }\n\n          i += 1;\n        }\n\n        return effectElements[0]();\n      };\n\n      groupInterface.propertyGroup = _propertyGroup;\n\n      if (data.mn === 'ADBE Color Control') {\n        Object.defineProperty(groupInterface, 'color', {\n          get: function get() {\n            return effectElements[0]();\n          }\n        });\n      }\n\n      Object.defineProperty(groupInterface, 'numProperties', {\n        get: function get() {\n          return data.np;\n        }\n      });\n      groupInterface.active = groupInterface.enabled = data.en !== 0;\n      return groupInterface;\n    }\n\n    function createValueInterface(element, type, elem, propertyGroup) {\n      var expressionProperty = ExpressionPropertyInterface(element.p);\n\n      function interfaceFunction() {\n        if (type === 10) {\n          return elem.comp.compInterface(element.p.v);\n        }\n\n        return expressionProperty();\n      }\n\n      if (element.p.setGroupProperty) {\n        element.p.setGroupProperty(propertyGroup);\n      }\n\n      return interfaceFunction;\n    }\n\n    return ob;\n  }();\n\n  var MaskManagerInterface = function () {\n    function MaskInterface(mask, data) {\n      this._mask = mask;\n      this._data = data;\n    }\n\n    Object.defineProperty(MaskInterface.prototype, 'maskPath', {\n      get: function get() {\n        if (this._mask.prop.k) {\n          this._mask.prop.getValue();\n        }\n\n        return this._mask.prop;\n      }\n    });\n\n    var MaskManager = function MaskManager(maskManager, elem) {\n      var _maskManager = maskManager;\n      var _elem = elem;\n\n      var _masksInterfaces = createSizedArray(maskManager.viewData.length);\n\n      var i,\n          len = maskManager.viewData.length;\n\n      for (i = 0; i < len; i += 1) {\n        _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\n      }\n\n      var maskFunction = function maskFunction(name) {\n        i = 0;\n\n        while (i < len) {\n          if (maskManager.masksProperties[i].nm === name) {\n            return _masksInterfaces[i];\n          }\n\n          i += 1;\n        }\n      };\n\n      return maskFunction;\n    };\n\n    return MaskManager;\n  }();\n\n  var ExpressionPropertyInterface = function () {\n    var defaultUnidimensionalValue = {\n      pv: 0,\n      v: 0,\n      mult: 1\n    };\n    var defaultMultidimensionalValue = {\n      pv: [0, 0, 0],\n      v: [0, 0, 0],\n      mult: 1\n    };\n\n    function completeProperty(expressionValue, property, type) {\n      Object.defineProperty(expressionValue, 'velocity', {\n        get: function get() {\n          return property.getVelocityAtTime(property.comp.currentFrame);\n        }\n      });\n      expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\n\n      expressionValue.key = function (pos) {\n        if (!expressionValue.numKeys) {\n          return 0;\n        } else {\n          var value = '';\n\n          if ('s' in property.keyframes[pos - 1]) {\n            value = property.keyframes[pos - 1].s;\n          } else if ('e' in property.keyframes[pos - 2]) {\n            value = property.keyframes[pos - 2].e;\n          } else {\n            value = property.keyframes[pos - 2].s;\n          }\n\n          var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value);\n          valueProp.time = property.keyframes[pos - 1].t / property.elem.comp.globalData.frameRate;\n          return valueProp;\n        }\n      };\n\n      expressionValue.valueAtTime = property.getValueAtTime;\n      expressionValue.speedAtTime = property.getSpeedAtTime;\n      expressionValue.velocityAtTime = property.getVelocityAtTime;\n      expressionValue.propertyGroup = property.propertyGroup;\n    }\n\n    function UnidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultUnidimensionalValue;\n      }\n\n      var mult = 1 / property.mult;\n      var val = property.pv * mult;\n      var expressionValue = new Number(val);\n      expressionValue.value = val;\n      completeProperty(expressionValue, property, 'unidimensional');\n      return function () {\n        if (property.k) {\n          property.getValue();\n        }\n\n        val = property.v * mult;\n\n        if (expressionValue.value !== val) {\n          expressionValue = new Number(val);\n          expressionValue.value = val;\n          completeProperty(expressionValue, property, 'unidimensional');\n        }\n\n        return expressionValue;\n      };\n    }\n\n    function MultidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultMultidimensionalValue;\n      }\n\n      var mult = 1 / property.mult;\n      var len = property.pv.length;\n      var expressionValue = createTypedArray('float32', len);\n      var arrValue = createTypedArray('float32', len);\n      expressionValue.value = arrValue;\n      completeProperty(expressionValue, property, 'multidimensional');\n      return function () {\n        if (property.k) {\n          property.getValue();\n        }\n\n        for (var i = 0; i < len; i += 1) {\n          expressionValue[i] = arrValue[i] = property.v[i] * mult;\n        }\n\n        return expressionValue;\n      };\n    } //TODO: try to avoid using this getter\n\n\n    function defaultGetter() {\n      return defaultUnidimensionalValue;\n    }\n\n    return function (property) {\n      if (!property) {\n        return defaultGetter;\n      } else if (property.propType === 'unidimensional') {\n        return UnidimensionalPropertyInterface(property);\n      } else {\n        return MultidimensionalPropertyInterface(property);\n      }\n    };\n  }();\n\n  (function () {\n    var TextExpressionSelectorProp = function () {\n      function getValueProxy(index, total) {\n        this.textIndex = index + 1;\n        this.textTotal = total;\n        this.v = this.getValue() * this.mult;\n        return this.v;\n      }\n\n      return function TextExpressionSelectorProp(elem, data) {\n        this.pv = 1;\n        this.comp = elem.comp;\n        this.elem = elem;\n        this.mult = 0.01;\n        this.propType = 'textSelector';\n        this.textTotal = data.totalChars;\n        this.selectorValue = 100;\n        this.lastValue = [1, 1, 1];\n        this.k = true;\n        this.x = true;\n        this.getValue = ExpressionManager.initiateExpression.bind(this)(elem, data, this);\n        this.getMult = getValueProxy;\n        this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;\n\n        if (this.kf) {\n          this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this);\n        } else {\n          this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this);\n        }\n\n        this.setGroupProperty = expressionHelpers.setGroupProperty;\n      };\n    }();\n\n    var propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\n\n    TextSelectorProp.getTextSelectorProp = function (elem, data, arr) {\n      if (data.t === 1) {\n        return new TextExpressionSelectorProp(elem, data, arr);\n      } else {\n        return propertyGetTextProp(elem, data, arr);\n      }\n    };\n  })();\n\n  function SliderEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function AngleEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function ColorEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\n  }\n\n  function PointEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\n  }\n\n  function LayerIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function MaskIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function CheckboxEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n\n  function NoValueEffect() {\n    this.p = {};\n  }\n\n  function EffectsManager() {}\n\n  function EffectsManager(data, element) {\n    var effects = data.ef || [];\n    this.effectElements = [];\n    var i,\n        len = effects.length;\n    var effectItem;\n\n    for (i = 0; i < len; i++) {\n      effectItem = new GroupEffect(effects[i], element);\n      this.effectElements.push(effectItem);\n    }\n  }\n\n  function GroupEffect(data, element) {\n    this.init(data, element);\n  }\n\n  extendPrototype([DynamicPropertyContainer], GroupEffect);\n  GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\n\n  GroupEffect.prototype.init = function (data, element) {\n    this.data = data;\n    this.effectElements = [];\n    this.initDynamicPropertyContainer(element);\n    var i,\n        len = this.data.ef.length;\n    var eff,\n        effects = this.data.ef;\n\n    for (i = 0; i < len; i += 1) {\n      eff = null;\n\n      switch (effects[i].ty) {\n        case 0:\n          eff = new SliderEffect(effects[i], element, this);\n          break;\n\n        case 1:\n          eff = new AngleEffect(effects[i], element, this);\n          break;\n\n        case 2:\n          eff = new ColorEffect(effects[i], element, this);\n          break;\n\n        case 3:\n          eff = new PointEffect(effects[i], element, this);\n          break;\n\n        case 4:\n        case 7:\n          eff = new CheckboxEffect(effects[i], element, this);\n          break;\n\n        case 10:\n          eff = new LayerIndexEffect(effects[i], element, this);\n          break;\n\n        case 11:\n          eff = new MaskIndexEffect(effects[i], element, this);\n          break;\n\n        case 5:\n          eff = new EffectsManager(effects[i], element, this);\n          break;\n        //case 6:\n\n        default:\n          eff = new NoValueEffect(effects[i], element, this);\n          break;\n      }\n\n      if (eff) {\n        this.effectElements.push(eff);\n      }\n    }\n  };\n\n  var lottiejs = {};\n  var _isFrozen = false;\n\n  function setLocationHref(href) {\n    locationHref = href;\n  }\n\n  function searchAnimations() {\n    if (standalone === true) {\n      animationManager.searchAnimations(animationData, standalone, renderer);\n    } else {\n      animationManager.searchAnimations();\n    }\n  }\n\n  function setSubframeRendering(flag) {\n    subframeEnabled = flag;\n  }\n\n  function loadAnimation(params) {\n    if (standalone === true) {\n      params.animationData = JSON.parse(animationData);\n    }\n\n    return animationManager.loadAnimation(params);\n  }\n\n  function setQuality(value) {\n    if (typeof value === 'string') {\n      switch (value) {\n        case 'high':\n          defaultCurveSegments = 200;\n          break;\n\n        case 'medium':\n          defaultCurveSegments = 50;\n          break;\n\n        case 'low':\n          defaultCurveSegments = 10;\n          break;\n      }\n    } else if (!isNaN(value) && value > 1) {\n      defaultCurveSegments = value;\n    }\n\n    if (defaultCurveSegments >= 50) {\n      roundValues(false);\n    } else {\n      roundValues(true);\n    }\n  }\n\n  function inBrowser() {\n    return typeof navigator !== 'undefined';\n  }\n\n  function installPlugin(type, plugin) {\n    if (type === 'expressions') {\n      expressionsPlugin = plugin;\n    }\n  }\n\n  function getFactory(name) {\n    switch (name) {\n      case \"propertyFactory\":\n        return PropertyFactory;\n\n      case \"shapePropertyFactory\":\n        return ShapePropertyFactory;\n\n      case \"matrix\":\n        return Matrix;\n    }\n  }\n\n  lottiejs.play = animationManager.play;\n  lottiejs.pause = animationManager.pause;\n  lottiejs.setLocationHref = setLocationHref;\n  lottiejs.togglePause = animationManager.togglePause;\n  lottiejs.setSpeed = animationManager.setSpeed;\n  lottiejs.setDirection = animationManager.setDirection;\n  lottiejs.stop = animationManager.stop;\n  lottiejs.searchAnimations = searchAnimations;\n  lottiejs.registerAnimation = animationManager.registerAnimation;\n  lottiejs.loadAnimation = loadAnimation;\n  lottiejs.setSubframeRendering = setSubframeRendering;\n  lottiejs.resize = animationManager.resize; //lottiejs.start = start;\n\n  lottiejs.goToAndStop = animationManager.goToAndStop;\n  lottiejs.destroy = animationManager.destroy;\n  lottiejs.setQuality = setQuality;\n  lottiejs.inBrowser = inBrowser;\n  lottiejs.installPlugin = installPlugin;\n  lottiejs.freeze = animationManager.freeze;\n  lottiejs.unfreeze = animationManager.unfreeze;\n  lottiejs.getRegisteredAnimations = animationManager.getRegisteredAnimations;\n  lottiejs.__getFactory = getFactory;\n  lottiejs.version = '5.4.4';\n\n  function checkReady() {\n    if (document.readyState === \"complete\") {\n      clearInterval(readyStateCheckInterval);\n      searchAnimations();\n    }\n  }\n\n  function getQueryVariable(variable) {\n    var vars = queryString.split('&');\n\n    for (var i = 0; i < vars.length; i++) {\n      var pair = vars[i].split('=');\n\n      if (decodeURIComponent(pair[0]) == variable) {\n        return decodeURIComponent(pair[1]);\n      }\n    }\n  }\n\n  var standalone = '__[STANDALONE]__';\n  var animationData = '__[ANIMATIONDATA]__';\n  var renderer = '';\n\n  if (standalone) {\n    var scripts = document.getElementsByTagName('script');\n    var index = scripts.length - 1;\n    var myScript = scripts[index] || {\n      src: ''\n    };\n    var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\n    renderer = getQueryVariable('renderer');\n  }\n\n  var readyStateCheckInterval = setInterval(checkReady, 100);\n  return lottiejs;\n});"],"sourceRoot":""}